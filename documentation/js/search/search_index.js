var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/modules/CrudModule.html",[0,0.656,1,1.904]],["body/modules/CrudModule.html",[0,0.972,1,3.74,2,1.796,3,1.028,4,3.483,5,2.392,6,1.796,7,0.434,8,3.077,9,3.077,10,3.077,11,1.658,12,0.031,13,1.658,14,3.127,15,2.392,16,2.158,17,0.324,18,0.24,19,0.24,20,0.16,21,2.685,22,0.684,23,2.348,24,0.624,25,4.023,26,2.685,27,3.673,28,1.404,29,3.673,30,4.801,31,3.673,32,1.521,33,0.472,34,0.324,35,0.022,36,0.022]],["title/components/DetailComponent.html",[11,0.838,33,0.286]],["body/components/DetailComponent.html",[3,0.921,7,0.252,11,1.404,12,0.03,13,0.852,17,0.291,18,0.215,19,0.215,20,0.221,22,0.373,24,0.559,33,0.501,34,0.291,35,0.02,36,0.02,37,1.259,38,1.259,39,1.259,40,2.76,41,1.578,42,2.097,43,1.259,44,2.426,45,2.426,46,2.076,47,5.431,48,1.707,49,4.465,50,1.707,51,4.465,52,0.417,53,1.35,54,2.248,55,1.417,56,1.249,57,3.294,58,3.294,59,0.51,60,0.996,61,2.623,62,1.707,63,1.707,64,1.707,65,2.076,66,1.259,67,0.904,68,1.259,69,1.259,70,0.852,71,1.259,72,0.852,73,1.259,74,0.921,75,1.259,76,1.707,77,0.921,78,1.259,79,0.921,80,1.164,81,1.259,82,0.852,83,1.259,84,0.852,85,1.578,86,1.259,87,0.852,88,1.164,89,1.259]],["title/modules/GraphQLModule.html",[0,0.656,90,1.904]],["body/modules/GraphQLModule.html",[0,0.562,6,2.262,7,0.386,12,0.031,17,0.245,18,0.181,19,0.181,20,0.173,22,0.673,23,1.939,24,0.472,28,1.062,32,2.297,34,0.245,35,0.018,36,0.018,59,0.825,90,2.33,91,1.809,92,3.323,93,3.966,94,3.966,95,2.696,96,2.899,97,3.966,98,4.226,99,4.226,100,1.939,101,1.678,102,1.485,103,3.381,104,2.364,105,1.809,106,2.33,107,1.15,108,2.583,109,2.778,110,3.966,111,3.966,112,2.03,113,2.327,114,2.327,115,2.899,116,2.327,117,2.327,118,2.327,119,2.33,120,2.899,121,2.327,122,1.632,123,2.03,124,3.875,125,2.327,126,2.327,127,0.981,128,2.327,129,2.267,130,2.778,131,2.778,132,2.778,133,2.778,134,4.226,135,2.778,136,4.47,137,2.778,138,2.778,139,2.327,140,2.778,141,2.327,142,2.778,143,0.84,144,2.778,145,2.327,146,2.778,147,2.778,148,3.381,149,2.778,150,2.03,151,2.327,152,2.03,153,2.327]],["title/interfaces/Http.html",[100,1.585,154,0.98]],["body/interfaces/Http.html",[7,0.35,12,0.03,17,0.403,18,0.298,19,0.298,20,0.2,22,0.517,35,0.025,36,0.025,52,0.578,100,2.693,127,1.945,143,1.665,154,1.665,155,3.827,156,3.996,157,0.924,158,3.235,159,2.974,160,3.827,161,1.891,162,1.746,163,3.339]],["title/injectables/HttpService.html",[164,1.732,165,1.456]],["body/injectables/HttpService.html",[7,0.212,12,0.031,17,0.245,18,0.181,19,0.181,20,0.202,22,0.604,24,0.471,32,1.639,34,0.245,35,0.018,36,0.018,52,0.351,53,1.612,56,1.108,59,0.858,67,0.801,100,2.607,122,2.961,127,1.399,134,3.87,136,2.322,139,2.322,156,4.076,157,0.561,158,3.257,159,1.805,160,4.645,161,2.416,162,1.766,164,2.469,165,1.779,166,2.322,167,2.469,168,3.959,169,3.959,170,3.959,171,2.772,172,3.959,173,5.161,174,1.639,175,2.579,176,3.959,177,5.33,178,5.04,179,2.772,180,4.222,181,3.959,182,1.805,183,1.481,184,3.959,185,3.959,186,3.317,187,3.959,188,2.894,189,2.259,190,3.959,191,2.026,192,2.322,193,2.772,194,2.772,195,2.772,196,2.772,197,2.772,198,2.772,199,2.772,200,2.772,201,2.772,202,2.322,203,2.772,204,2.772,205,2.026]],["title/components/ListComponent.html",[13,0.838,33,0.286]],["body/components/ListComponent.html",[0,0.519,2,1.255,3,0.718,7,0.196,11,0.663,12,0.03,13,1.257,17,0.227,18,0.167,19,0.167,20,0.25,22,0.424,24,0.436,28,0.981,33,0.477,34,0.227,35,0.017,36,0.017,37,0.981,38,0.981,39,0.981,41,1.323,42,1.831,43,0.981,44,2.32,45,2.32,46,1.858,48,1.431,50,1.431,52,0.324,53,1.132,54,2.013,55,1.048,56,1.56,59,0.579,60,0.776,62,1.431,63,1.431,64,1.431,65,1.858,66,0.981,67,0.895,68,0.981,69,0.981,70,0.663,71,0.981,72,0.663,73,0.981,74,0.718,75,0.981,76,1.431,77,0.718,78,0.981,79,0.718,80,0.906,81,0.981,82,0.663,83,0.981,84,0.663,85,1.323,86,0.981,87,0.663,88,0.906,89,0.981,101,1.633,102,1.371,108,2.439,143,1.132,157,0.984,162,1.431,167,1.371,174,1.062,182,1.671,183,2.001,189,2.378,206,2.149,207,3.745,208,3.745,209,3.745,210,1.987,211,4.862,212,5.575,213,4.422,214,4.422,215,3.78,216,3.233,217,2.565,218,3.745,219,2.565,220,2.565,221,2.565,222,2.565,223,2.565,224,1.507,225,2.149,226,1.671,227,2.149,228,1.875,229,2.565,230,1.671,231,2.149,232,2.565,233,1.671,234,1.875,235,2.565,236,2.565,237,2.565,238,2.565,239,2.149,240,2.565]],["title/components/LoginComponent.html",[33,0.286,70,0.838]],["body/components/LoginComponent.html",[3,0.926,7,0.253,11,0.856,12,0.03,13,0.856,17,0.292,18,0.216,19,0.216,20,0.222,22,0.375,24,0.562,33,0.502,34,0.292,35,0.02,36,0.02,37,1.266,38,1.266,39,1.266,41,1.583,42,2.103,43,1.266,44,2.428,45,2.428,46,1.713,48,1.713,50,1.713,52,0.419,53,1.355,54,2.253,55,1.421,56,1.254,59,0.512,60,1.001,61,2.633,62,1.713,63,1.713,64,1.713,65,2.08,66,1.266,67,0.907,68,1.266,69,1.266,70,1.407,71,1.266,72,0.856,73,1.266,74,0.926,75,1.266,76,1.713,77,0.926,78,1.266,79,0.926,80,1.17,81,1.266,82,0.856,83,1.266,84,0.856,85,1.583,86,1.266,87,0.856,88,1.17,89,1.266,241,2.774,242,4.56,243,4.481,244,4.481,245,3.311,246,3.311]],["title/components/MidgardComponent.html",[33,0.286,72,0.838]],["body/components/MidgardComponent.html",[3,0.857,7,0.235,11,0.792,12,0.03,13,0.792,17,0.271,18,0.2,19,0.2,20,0.213,22,0.481,24,0.52,33,0.489,34,0.271,35,0.019,36,0.019,37,1.171,38,1.171,39,1.171,41,1.502,42,2.02,43,1.171,44,2.397,45,2.397,46,1.624,48,1.624,50,1.624,52,0.388,53,1.285,54,2.181,55,0.857,56,1.189,59,0.474,60,0.927,62,1.624,63,1.624,64,1.624,65,2.014,66,1.171,67,0.987,68,1.171,69,1.171,70,0.792,71,1.171,72,1.362,73,1.171,74,0.857,75,1.171,76,1.624,77,0.857,78,1.171,79,0.857,80,1.724,81,1.171,82,0.792,83,1.171,84,0.792,85,1.502,86,1.171,87,0.792,88,1.083,89,1.171,119,2.866,157,0.62,162,1.171,174,1.269,191,3.107,247,2.567,248,4.25,249,4.25,250,4.25,251,5.268,252,3.064,253,3.064,254,2.567,255,2.567,256,4.25,257,3.064,258,4.25,259,3.064,260,4.25,261,3.064,262,3.56,263,2.567,264,2.24,265,3.064]],["title/modules/MidgardHttpModule.html",[0,0.656,266,1.904]],["body/modules/MidgardHttpModule.html",[0,0.902,6,2.179,7,0.341,12,0.031,17,0.394,18,0.291,19,0.291,20,0.237,22,0.614,23,2.86,24,0.757,34,0.394,35,0.025,36,0.025,55,1.246,59,0.689,165,2.437,266,3.435,267,4.456,268,4.544,269,4.456,270,3.733,271,3.733]],["title/modules/MidgardModule.html",[0,0.656,272,2.11]],["body/modules/MidgardModule.html",[0,0.75,1,3.156,2,1.237,3,0.708,4,2.857,5,1.647,6,1.237,7,0.37,12,0.031,14,2.414,15,1.647,16,1.486,17,0.223,18,0.165,19,0.165,20,0.111,22,0.719,23,1.813,24,0.43,25,3.105,26,1.849,28,2.053,34,0.223,35,0.017,36,0.017,70,1.389,72,1.565,74,1.503,77,1.503,82,1.389,84,1.389,87,1.389,90,3.156,112,1.849,266,3.021,272,4.273,273,2.119,274,2.119,275,2.119,276,2.119,277,3.156,278,3.156,279,3.021,280,2.53,281,2.53,282,3.706,283,1.647,284,2.119,285,1.647,286,2.119,287,2.53,288,2.53,289,2.53,290,1.849,291,3.706,292,2.53,293,1.849,294,2.53,295,2.53,296,2.119,297,2.53,298,3.706,299,2.53,300,2.53,301,2.53,302,3.706,303,2.119,304,1.849,305,2.53,306,2.53]],["title/modules/MidgardRoutingModule.html",[0,0.656,277,1.904]],["body/modules/MidgardRoutingModule.html",[0,0.731,7,0.363,12,0.031,17,0.319,18,0.236,19,0.236,20,0.158,22,0.712,23,2.322,24,0.613,28,2.237,32,1.495,33,0.517,34,0.319,35,0.022,36,0.022,70,1.228,72,1.228,82,1.228,84,1.228,85,1.678,87,1.228,88,1.276,188,2.64,242,3.025,277,2.789,283,2.351,284,3.025,285,2.351,286,3.025,296,3.025,307,3.611,308,4.748,309,3.978,310,4.748,311,3.611,312,3.611,313,2.322,314,3.611,315,3.611,316,6.125,317,3.611,318,2.64,319,2.64,320,4.748,321,3.611,322,2.64,323,3.611,324,3.611]],["title/interfaces/MidgardState.html",[154,0.98,325,2.11]],["body/interfaces/MidgardState.html",[7,0.322,12,0.03,17,0.371,18,0.274,19,0.274,20,0.184,22,0.593,28,2.001,35,0.024,36,0.024,52,0.532,123,4.166,143,1.583,154,1.583,157,1.154,313,2.56,325,3.409,326,3.524,327,4.997,328,3.426,329,3.766,330,2.739,331,3.524,332,3.075,333,4.206]],["title/modules/MidgardTranslationModule.html",[0,0.656,278,1.904]],["body/modules/MidgardTranslationModule.html",[0,0.95,2,1.736,3,0.993,4,3.426,5,2.312,6,2.296,7,0.403,12,0.031,14,3.058,15,2.312,16,2.086,17,0.314,18,0.232,19,0.232,20,0.155,22,0.691,23,2.296,24,0.603,34,0.314,35,0.021,36,0.021,59,0.726,79,1.673,80,1.659,100,2.296,112,2.595,113,2.975,114,2.975,122,2.086,127,1.255,129,1.595,151,2.975,153,2.975,156,2.312,165,2.364,175,2.312,180,2.975,227,2.975,254,2.975,255,2.975,264,2.595,278,3.514,334,2.975,335,2.975,336,2.595,337,4.695,338,3.551,339,4.695,340,2.975,341,2.595,342,3.551,343,2.975,344,3.551,345,2.975,346,3.551,347,3.551,348,3.551,349,2.595]],["title/modules/MigardStoreModule.html",[0,0.656,279,1.904]],["body/modules/MigardStoreModule.html",[0,0.908,6,2.194,7,0.344,12,0.03,17,0.396,18,0.293,19,0.293,20,0.238,22,0.617,23,2.868,24,0.762,34,0.396,35,0.025,36,0.025,59,0.694,101,1.647,102,2.398,268,4.564,270,3.759,271,3.759,279,3.446,350,4.487]],["title/components/NavBarComponent.html",[33,0.286,74,0.907]],["body/components/NavBarComponent.html",[3,0.876,7,0.24,11,0.81,12,0.03,13,0.81,17,0.277,18,0.204,19,0.204,20,0.216,22,0.355,24,0.532,33,0.493,34,0.277,35,0.02,36,0.02,37,1.197,38,1.197,39,1.197,41,1.524,42,2.043,43,1.197,44,2.406,45,2.406,46,1.649,48,1.649,50,1.649,52,0.396,53,1.305,54,2.202,55,1.381,56,1.207,59,0.485,60,0.947,62,1.649,63,1.649,64,1.649,65,2.033,66,1.197,67,0.873,68,1.197,69,1.197,70,0.81,71,1.197,72,0.81,73,1.197,74,1.488,75,2.258,76,1.649,77,0.876,78,1.197,79,0.876,80,1.107,81,1.197,82,0.81,83,1.197,84,0.81,85,1.524,86,1.197,87,0.81,88,1.107,89,1.197,188,3.154,290,3.608,318,3.154,322,3.154,351,4.135,352,2.29,353,3.615,354,3.615,355,3.615,356,2.624,357,2.624,358,5.318,359,4.314,360,2.81]],["title/classes/ReduxCache.html",[34,0.286,106,1.904]],["body/classes/ReduxCache.html",[7,0.35,12,0.03,17,0.301,18,0.222,19,0.222,20,0.225,22,0.624,32,1.411,34,0.404,35,0.024,36,0.021,52,0.431,53,1.382,55,0.953,56,1.278,59,0.527,60,1.382,67,0.925,95,2.442,101,1.031,103,3.768,104,2.447,105,2.22,106,2.684,107,2.134,157,1.043,162,1.746,163,2.491,174,1.892,189,2.521,210,2.316,361,2.491,362,4.569,363,5.154,364,4.569,365,3.236,366,3.408,367,3.408,368,4.569,369,5.154,370,3.408,371,4.569,372,4.569,373,2.684,374,2.002,375,2.002,376,3.408,377,3.408,378,3.408,379,3.408,380,3.408,381,3.408,382,3.408,383,3.408,384,2.491,385,3.408,386,3.408,387,2.22,388,3.408,389,2.856,390,3.408,391,3.408,392,3.408,393,3.408,394,3.408,395,3.408,396,3.408]],["title/classes/ReduxNormalizedCache.html",[34,0.286,375,1.904]],["body/classes/ReduxNormalizedCache.html",[7,0.311,12,0.031,17,0.196,18,0.145,19,0.145,20,0.254,22,0.46,28,0.849,32,0.92,34,0.297,35,0.015,36,0.015,41,1.189,52,0.281,53,1.018,55,0.621,56,1.6,59,0.899,60,1.609,67,0.985,95,1.187,101,1.729,102,1.187,104,2.438,105,1.447,107,2.405,127,0.785,129,0.998,143,1.018,154,0.672,157,1.176,161,2.467,162,1.86,167,2.998,174,2.015,183,2.421,189,2.215,210,2.786,234,3.311,365,1.977,373,2.859,374,1.305,375,1.977,384,3.558,397,1.447,398,3.795,399,4.077,400,3.795,401,3.364,402,3.795,403,3.364,404,3.364,405,3.795,406,2.819,407,3.364,408,2.221,409,2.221,410,2.819,411,2.221,412,2.819,413,2.221,414,4.29,415,2.221,416,2.819,417,4.29,418,2.221,419,2.819,420,2.819,421,2.221,422,2.221,423,2.191,424,2.191,425,2.644,426,1.861,427,1.861,428,1.861,429,1.305,430,1.861,431,1.861,432,1.861,433,1.861,434,1.624,435,1.861,436,1.861]],["title/interfaces/ReduxNormalizedCacheConfig.html",[154,0.98,373,1.904]],["body/interfaces/ReduxNormalizedCacheConfig.html",[7,0.372,12,0.031,17,0.269,18,0.198,19,0.198,20,0.133,22,0.55,28,1.163,32,1.26,34,0.269,35,0.019,36,0.019,41,1.075,52,0.385,59,0.813,60,1.47,95,1.626,101,1.858,102,1.626,104,1.751,105,1.981,107,1.26,127,1.075,129,1.367,143,1.279,154,1.279,157,1.156,161,2.426,162,1.616,167,2.598,183,2.26,189,2.569,210,2.567,234,3.839,365,1.788,373,3.086,374,1.788,375,1.788,384,3.091,397,1.981,398,4.072,399,4.624,400,2.549,402,2.549,405,2.549,406,2.549,410,2.549,412,2.549,414,4.072,416,2.549,417,4.072,419,2.549,420,2.549,423,2.754,424,2.754,425,3.165,426,2.549,427,2.549,428,2.549,429,1.788,430,2.549,431,2.549,432,2.549,433,2.549,434,2.224,435,2.549,436,2.549]],["title/injectables/Store.html",[101,0.98,164,1.732]],["body/injectables/Store.html",[7,0.23,12,0.031,17,0.17,18,0.242,19,0.125,20,0.221,22,0.645,24,0.326,28,1.417,32,2.275,34,0.17,35,0.014,36,0.014,52,0.243,55,1.037,56,1.351,59,0.85,60,0.581,67,0.389,101,1.802,104,0.795,107,0.795,108,3.648,119,1.128,122,2.464,127,1.898,129,0.863,143,1.121,145,1.609,157,0.849,158,3.687,159,1.251,161,1.737,163,1.404,164,1.981,174,0.795,175,1.251,182,1.251,183,2.434,191,1.404,192,1.609,210,1.666,215,3.691,224,2.178,226,1.251,228,3.066,230,2.732,233,1.959,239,3.514,429,1.767,437,1.404,438,3.514,439,4.195,440,4.195,441,3.008,442,1.92,443,1.92,444,1.92,445,3.008,446,4.195,447,3.106,448,3.008,449,4.195,450,3.008,451,3.008,452,3.008,453,1.92,454,4.195,455,1.92,456,3.008,457,3.008,458,1.92,459,1.92,460,2.199,461,1.92,462,2.199,463,1.92,464,3.008,465,1.92,466,3.008,467,1.92,468,3.008,469,1.92,470,3.008,471,1.92,472,2.199,473,3.707,474,3.008,475,1.92,476,3.008,477,2.199,478,1.92,479,1.92,480,1.92,481,1.92,482,1.92,483,1.92,484,1.92,485,1.92,486,1.92,487,1.92,488,1.92,489,1.92,490,1.609,491,1.609,492,2.52,493,1.92,494,1.92,495,1.609,496,1.609,497,1.609,498,1.609,499,1.609,500,1.609,501,1.609,502,1.609,503,1.609,504,1.609,505,1.609]],["title/components/TopBarComponent.html",[33,0.286,77,0.907]],["body/components/TopBarComponent.html",[3,0.894,7,0.245,11,0.826,12,0.03,13,0.826,17,0.282,18,0.208,19,0.208,20,0.218,22,0.362,24,0.543,33,0.496,34,0.282,35,0.02,36,0.02,37,1.221,38,1.221,39,1.221,41,1.545,42,2.064,43,1.221,44,2.414,45,2.414,46,1.672,48,1.672,50,1.672,52,0.404,53,1.323,54,2.22,55,1.395,56,1.223,59,0.494,60,0.966,62,1.672,63,1.672,64,1.672,65,2.05,66,1.221,67,0.885,68,1.221,69,1.221,70,0.826,71,1.221,72,0.826,73,1.221,74,0.894,75,1.221,76,1.672,77,1.5,78,2.27,79,0.894,80,1.129,81,1.221,82,0.826,83,1.221,84,0.826,85,1.545,86,1.221,87,0.826,88,1.129,89,1.221,293,3.645,319,3.197,352,2.335,353,3.664,354,3.664,355,3.664,356,2.677,357,2.677,506,4.178,507,4.373,508,4.373]],["title/components/TranslationLoader.html",[33,0.286,79,0.907]],["body/components/TranslationLoader.html",[3,0.774,7,0.212,11,0.715,12,0.03,13,0.715,17,0.244,18,0.18,19,0.18,20,0.22,22,0.522,24,0.47,33,0.47,34,0.244,35,0.018,36,0.018,37,1.057,38,1.057,39,1.057,43,1.057,44,2.353,45,2.353,46,1.511,48,1.511,50,1.511,52,0.35,53,1.196,55,0.774,56,1.291,59,0.612,61,2.323,62,1.511,63,1.511,64,1.511,65,1.924,66,1.057,67,1.019,68,1.057,69,1.057,70,0.715,71,1.057,72,0.715,73,1.057,74,0.774,75,1.057,76,1.511,77,0.774,78,1.057,79,1.408,80,2.154,81,1.057,82,0.715,83,1.057,84,0.715,85,1.397,86,1.057,87,0.715,88,0.977,89,1.057,100,1.933,143,1.196,157,0.934,158,2.711,159,1.801,161,2.414,162,1.511,165,2.262,174,1.637,186,4.641,205,2.89,210,2.489,262,2.317,264,3.68,340,2.317,341,3.68,509,4.218,510,2.317,511,3.953,512,3.953,513,3.953,514,2.766,515,2.766,516,3.953,517,2.766,518,3.312,519,2.766,520,2.766,521,2.766,522,2.766]],["title/components/UserComponent.html",[33,0.286,82,0.838]],["body/components/UserComponent.html",[3,0.926,7,0.253,11,0.856,12,0.03,13,0.856,17,0.292,18,0.216,19,0.216,20,0.222,22,0.375,24,0.562,33,0.502,34,0.292,35,0.02,36,0.02,37,1.266,38,1.266,39,1.266,41,1.583,42,2.103,43,1.266,44,2.428,45,2.428,46,1.713,48,1.713,50,1.713,52,0.419,53,1.355,54,2.253,55,1.421,56,1.254,59,0.512,60,1.001,61,2.633,62,1.713,63,1.713,64,1.713,65,2.08,66,1.266,67,0.907,68,1.266,69,1.266,70,0.856,71,1.266,72,0.856,73,1.266,74,0.926,75,1.266,76,1.713,77,0.926,78,1.266,79,0.926,80,1.17,81,1.266,82,1.407,83,1.266,84,0.856,85,1.583,86,1.266,87,0.856,88,1.17,89,1.266,319,3.979,523,2.774,524,4.481,525,4.481,526,3.311,527,3.311]],["title/interfaces/WorkflowLevel1.html",[154,0.98,328,1.732]],["body/interfaces/WorkflowLevel1.html",[7,0.327,12,0.029,17,0.378,18,0.279,19,0.279,20,0.187,35,0.024,36,0.024,52,0.541,67,1.214,143,1.6,154,1.6,157,1.302,161,2.684,313,2.091,328,2.827,330,2.785,528,3.583,529,4.385,530,4.385,531,4.811]],["title/components/WorkflowLevel1Component.html",[33,0.286,84,0.838]],["body/components/WorkflowLevel1Component.html",[3,0.674,7,0.185,11,0.623,12,0.03,13,0.623,17,0.213,18,0.157,19,0.157,20,0.22,22,0.598,24,0.409,28,1.63,33,0.445,34,0.213,35,0.016,36,0.016,37,0.921,38,0.921,39,0.921,41,1.264,42,1.765,43,0.921,44,2.291,45,2.291,46,1.367,48,1.367,50,1.367,52,0.452,53,1.082,54,1.953,55,1.001,56,1.32,59,0.553,60,1.082,62,1.367,63,1.367,64,1.367,65,1.803,66,0.921,67,1.161,68,0.921,69,0.921,70,0.623,71,0.921,72,0.623,73,0.921,74,0.674,75,0.921,76,1.367,77,0.674,78,0.921,79,0.674,80,0.852,81,0.921,82,0.623,83,0.921,84,1.22,85,1.984,86,0.921,87,0.623,88,0.852,89,0.921,95,2.921,96,1.762,101,0.729,102,1.288,120,2.614,141,2.019,143,1.082,150,3.449,157,0.863,162,0.921,167,2.522,174,0.998,189,1.179,210,1.916,216,3.449,224,1.416,283,3.282,313,2.582,318,2.614,328,1.912,330,1.57,331,2.019,360,2.329,477,1.762,529,1.762,530,1.762,532,2.019,533,3.577,534,3.577,535,3.953,536,2.41,537,3.577,538,2.41,539,2.41,540,1.762,541,2.41,542,3.577,543,2.41,544,2.41,545,2.41,546,2.41,547,2.41,548,2.41,549,2.019,550,2.019,551,2.019,552,3.573,553,3.573,554,3.573,555,2.41,556,2.997,557,2.997,558,2.019]],["title/interfaces/WorkflowLevel2.html",[154,0.98,329,1.904]],["body/interfaces/WorkflowLevel2.html",[7,0.348,12,0.029,17,0.402,18,0.297,19,0.297,20,0.199,35,0.025,36,0.025,52,0.576,67,1.241,143,1.662,154,1.662,157,1.112,161,2.443,313,2.226,329,3.228,332,3.327,530,4.48,531,4.944,559,3.813]],["title/components/WorkflowLevel2Component.html",[33,0.286,87,0.838]],["body/components/WorkflowLevel2Component.html",[3,0.765,7,0.209,11,0.707,12,0.03,13,0.707,17,0.242,18,0.178,19,0.178,20,0.232,22,0.31,24,0.465,33,0.468,34,0.242,35,0.018,36,0.018,37,1.046,38,1.046,39,1.046,41,1.386,42,1.899,43,1.046,44,2.349,45,2.349,46,1.499,48,1.499,50,1.499,52,0.496,53,1.186,54,2.074,55,1.283,56,1.402,59,0.607,60,1.186,61,2.305,62,1.499,63,1.499,64,1.499,65,1.915,66,1.046,67,1.151,68,1.046,69,1.046,70,0.707,71,1.046,72,0.707,73,1.046,74,0.765,75,1.046,76,1.499,77,0.765,78,1.046,79,0.765,80,0.967,81,1.046,82,0.707,83,1.046,84,0.707,85,2.123,86,1.046,87,1.295,88,1.874,89,1.046,143,1.186,150,3.353,157,0.794,167,2.451,210,2.061,216,3.662,285,3.454,313,2.594,360,2.555,477,2,529,2,535,4.197,549,2.292,550,2.292,551,2.292,552,3.843,553,3.843,554,3.843,556,3.287,557,3.287,558,2.292,560,2.292,561,3.923,562,3.923,563,3.923,564,2.736,565,2.736]],["title/coverage.html",[566,3.7]],["body/coverage.html",[11,0.518,12,0.03,13,0.518,19,0.131,20,0.289,21,1.466,33,0.5,34,0.275,35,0.014,36,0.014,40,1.68,70,0.518,72,0.518,74,0.561,77,0.561,79,0.561,82,0.518,84,0.518,87,0.518,91,2.481,100,0.981,101,0.606,104,2.254,106,1.178,107,2.254,115,1.466,127,2.002,129,0.901,148,1.466,152,1.466,154,1.405,155,1.68,157,0.406,164,1.662,165,1.397,166,1.68,206,1.68,224,1.178,225,1.68,241,1.68,247,1.68,283,1.306,285,1.306,290,1.466,293,1.466,313,2.1,325,1.306,326,1.68,328,1.072,329,1.178,330,1.306,332,1.466,336,1.466,341,1.466,349,1.466,351,1.68,352,2.274,361,1.466,373,1.178,374,1.178,375,1.178,387,4.019,389,1.68,397,2.481,423,1.306,424,1.306,425,1.306,429,1.178,437,2.785,460,1.466,462,1.466,472,1.466,506,1.68,509,1.68,510,1.68,523,1.68,528,1.68,532,1.68,540,1.466,559,1.68,560,1.68,566,1.68,567,2.005,568,2.005,569,6.571,570,5.444,571,6.389,572,2.005,573,3.192,574,2.274,575,2.606,576,2.005,577,3.11,578,3.11,579,2.005,580,2.005,581,2.005,582,2.005,583,2.005,584,2.005,585,2.005,586,3.81,587,4.205,588,1.68,589,1.68,590,1.68,591,1.68,592,1.68,593,1.68,594,1.68,595,1.68,596,1.68,597,1.68,598,1.68,599,3.597,600,1.68,601,1.68,602,2.005,603,2.274,604,2.005]],["title/dependencies.html",[2,1.905,605,2.71]],["body/dependencies.html",[2,2.234,12,0.03,24,0.776,26,3.339,35,0.025,36,0.025,303,4.613,304,4.025,309,3.827,606,4.567,607,6.553,608,4.567,609,4.567,610,4.567,611,4.567,612,4.567,613,4.567]],["title/miscellaneous/functions.html",[127,1.377,614,1.448]],["body/miscellaneous/functions.html",[12,0.03,20,0.252,35,0.02,36,0.02,52,0.399,59,0.488,67,1.238,91,2.055,95,1.686,98,2.644,99,2.644,101,1.498,103,2.307,104,2.208,106,1.854,107,1.795,108,2.055,117,2.644,118,2.644,119,2.548,120,3.622,121,2.644,122,1.854,123,2.307,124,4.151,125,2.644,126,2.644,127,1.532,128,2.644,152,3.17,157,0.639,162,2.338,165,1.418,173,3.633,174,2.532,175,2.055,189,2.121,226,3.474,230,2.824,336,2.307,343,2.644,345,2.644,349,3.17,365,1.854,374,2.548,397,2.055,429,2.548,434,3.9,462,3.17,540,3.622,574,2.307,587,2.307,588,3.633,589,3.633,590,4.151,591,3.633,592,3.633,603,2.307,614,1.686,615,2.644,616,2.644,617,3.155,618,4.841,619,2.644,620,3.155,621,3.155,622,3.155,623,3.155,624,3.155,625,3.155,626,3.155,627,3.155,628,3.155,629,3.155]],["title/index.html",[52,0.343,518,2.27,630,2.71]],["body/index.html",[12,0.022,16,2.222,18,0.247,19,0.247,33,0.479,35,0.022,36,0.022,67,0.766,96,3.966,101,1.144,119,3.187,129,1.699,205,3.577,231,3.169,233,2.463,322,2.765,631,3.782,632,4.893,633,5.736,634,5.425,635,3.782,636,3.782,637,3.782,638,6.193,639,6.193,640,3.782,641,3.782,642,3.782,643,3.782,644,3.782,645,3.782,646,3.782,647,3.782,648,3.782,649,5.941,650,3.782,651,3.782,652,3.782,653,3.782,654,3.782,655,4.893,656,5.941,657,4.893,658,4.893,659,3.782,660,5.736,661,3.782,662,3.782,663,3.782,664,5.425,665,3.782,666,3.782,667,3.782,668,3.782]],["title/modules.html",[0,0.894]],["body/modules.html",[0,0.931,1,2.703,12,0.025,35,0.025,36,0.025,90,2.703,263,5.154,266,2.703,272,2.996,277,2.703,278,2.703,279,2.703,304,4.334,669,5.929,670,5.929,671,6.462,672,6.151]],["title/overview.html",[673,3.7]],["body/overview.html",[0,0.896,1,3.617,2,1.59,3,0.91,4,2.118,5,2.118,6,1.59,7,0.249,8,2.725,9,2.725,10,2.725,11,1.543,12,0.03,13,1.543,14,2.883,15,2.118,16,1.911,33,0.287,34,0.287,35,0.02,36,0.02,70,1.301,72,1.543,74,1.408,77,1.408,79,1.408,82,1.301,84,1.301,87,1.301,90,2.957,154,0.984,164,1.738,266,2.957,272,4.343,273,2.725,274,2.725,275,2.725,276,2.725,277,2.957,278,3.32,279,2.957,334,2.725,335,2.725,360,2.883,673,2.725,674,3.252,675,3.252,676,3.252]],["title/miscellaneous/typealiases.html",[614,1.448,677,3.896]],["body/miscellaneous/typealiases.html",[12,0.026,20,0.217,35,0.026,36,0.026,52,0.627,104,2.053,107,2.053,157,1.004,361,3.624,365,3.595,614,2.65,678,4.958,679,4.958]],["title/miscellaneous/variables.html",[387,2.537,614,1.448]],["body/miscellaneous/variables.html",[11,0.547,12,0.031,13,0.547,18,0.138,20,0.236,21,1.546,32,0.875,33,0.348,35,0.02,36,0.015,52,0.267,59,0.777,91,1.377,92,1.772,101,0.98,104,1.342,107,1.342,115,2.88,116,1.772,127,0.747,129,1.77,143,0.64,148,2.88,156,2.11,157,1.194,158,1.242,161,2.576,165,1.984,182,4.03,183,3.325,202,2.715,215,2.369,224,2.594,226,3.271,228,2.369,230,2.11,233,1.377,325,2.11,327,1.772,328,1.13,329,1.242,387,1.377,423,2.876,424,2.876,425,2.876,437,1.546,438,3.7,447,1.772,460,2.88,472,2.88,490,1.772,491,1.772,492,1.772,495,1.772,496,1.772,497,1.772,498,1.772,499,1.772,500,1.772,501,1.772,502,1.772,503,1.772,504,1.772,505,1.772,573,1.772,574,1.546,575,4.209,587,1.546,593,3.7,594,3.7,595,3.7,596,3.7,597,3.7,598,3.7,599,1.772,600,3.301,601,3.7,603,1.546,614,1.13,615,1.772,616,2.715,618,4.209,619,1.772,680,3.94,681,2.115,682,4.416,683,3.24,684,3.24,685,2.115,686,3.24,687,3.24,688,2.115,689,4.416,690,3.24,691,2.115,692,4.416,693,2.115,694,2.115,695,2.115,696,2.115,697,2.115,698,2.115,699,2.115]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":557,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["1/1",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":675,"title":{},"body":{"overview.html":{}}}],["100",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":360,"title":{},"body":{"components/NavBarComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"overview.html":{}}}],["2/3",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":676,"title":{},"body":{"overview.html":{}}}],["6.1.10",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["6.1.5",{"_index":636,"title":{},"body":{"index.html":{}}}],["66",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":674,"title":{},"body":{"overview.html":{}}}],["94a37ce5e4a7a00f59f939fd57b0a3186db92bfd",{"_index":139,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/HttpService.html":{}}}],["action",{"_index":226,"title":{},"body":{"components/ListComponent.html":{},"injectables/Store.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["action$.pip",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activ",{"_index":486,"title":{},"body":{"injectables/Store.html":{}}}],["actual_compon",{"_index":89,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["alias",{"_index":678,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":96,"title":{},"body":{"modules/GraphQLModule.html":{},"components/WorkflowLevel1Component.html":{},"index.html":{}}}],["angular/anim",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":26,"title":{},"body":{"modules/CrudModule.html":{},"modules/MidgardModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":112,"title":{},"body":{"modules/GraphQLModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{}}}],["angular/compil",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":24,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"dependencies.html":{}}}],["angular/form",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":303,"title":{},"body":{"modules/MidgardModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":309,"title":{},"body":{"modules/MidgardRoutingModule.html":{},"dependencies.html":{}}}],["angular/src/lib/components/nav",{"_index":351,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["angular/src/lib/components/top",{"_index":506,"title":{},"body":{"components/TopBarComponent.html":{},"coverage.html":{}}}],["angular/src/lib/midgard",{"_index":296,"title":{},"body":{"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{}}}],["angular/src/lib/midgard.compon",{"_index":311,"title":{},"body":{"modules/MidgardRoutingModule.html":{}}}],["angular/src/lib/midgard.component.t",{"_index":247,"title":{},"body":{"components/MidgardComponent.html":{},"coverage.html":{}}}],["angular/src/lib/midgard.component.ts:10",{"_index":252,"title":{},"body":{"components/MidgardComponent.html":{}}}],["angular/src/lib/midgard.component.ts:20",{"_index":253,"title":{},"body":{"components/MidgardComponent.html":{}}}],["angular/src/lib/midgard.module.t",{"_index":280,"title":{},"body":{"modules/MidgardModule.html":{}}}],["angular/src/lib/modules/crud/crud.modul",{"_index":300,"title":{},"body":{"modules/MidgardModule.html":{}}}],["angular/src/lib/modules/crud/crud.module.t",{"_index":21,"title":{},"body":{"modules/CrudModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["angular/src/lib/modules/crud/detail/detail.component.t",{"_index":40,"title":{},"body":{"components/DetailComponent.html":{},"coverage.html":{}}}],["angular/src/lib/modules/crud/detail/detail.component.ts:12",{"_index":58,"title":{},"body":{"components/DetailComponent.html":{}}}],["angular/src/lib/modules/crud/detail/detail.component.ts:8",{"_index":57,"title":{},"body":{"components/DetailComponent.html":{}}}],["angular/src/lib/modules/crud/list/list.compon",{"_index":29,"title":{},"body":{"modules/CrudModule.html":{}}}],["angular/src/lib/modules/crud/list/list.component.t",{"_index":206,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["angular/src/lib/modules/crud/list/list.component.ts:11",{"_index":223,"title":{},"body":{"components/ListComponent.html":{}}}],["angular/src/lib/modules/crud/list/list.component.ts:12",{"_index":221,"title":{},"body":{"components/ListComponent.html":{}}}],["angular/src/lib/modules/crud/list/list.component.ts:13",{"_index":219,"title":{},"body":{"components/ListComponent.html":{}}}],["angular/src/lib/modules/crud/list/list.component.ts:14",{"_index":220,"title":{},"body":{"components/ListComponent.html":{}}}],["angular/src/lib/modules/crud/list/list.component.ts:15",{"_index":218,"title":{},"body":{"components/ListComponent.html":{}}}],["angular/src/lib/modules/crud/list/list.component.ts:21",{"_index":222,"title":{},"body":{"components/ListComponent.html":{}}}],["angular/src/lib/modules/graphql/apollo",{"_index":107,"title":{},"body":{"modules/GraphQLModule.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["angular/src/lib/modules/graphql/graphql.modul",{"_index":299,"title":{},"body":{"modules/MidgardModule.html":{}}}],["angular/src/lib/modules/graphql/graphql.module.t",{"_index":91,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["angular/src/lib/modules/http/http.modul",{"_index":295,"title":{},"body":{"modules/MidgardModule.html":{}}}],["angular/src/lib/modules/http/http.module.t",{"_index":267,"title":{},"body":{"modules/MidgardHttpModule.html":{}}}],["angular/src/lib/modules/http/http.servic",{"_index":269,"title":{},"body":{"modules/MidgardHttpModule.html":{}}}],["angular/src/lib/modules/http/http.service.t",{"_index":166,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["angular/src/lib/modules/http/http.service.ts:16",{"_index":179,"title":{},"body":{"injectables/HttpService.html":{}}}],["angular/src/lib/modules/http/http.service.ts:34",{"_index":171,"title":{},"body":{"injectables/HttpService.html":{}}}],["angular/src/lib/modules/http/types/http.t",{"_index":155,"title":{},"body":{"interfaces/Http.html":{},"coverage.html":{}}}],["angular/src/lib/modules/store/stor",{"_index":102,"title":{},"body":{"modules/GraphQLModule.html":{},"components/ListComponent.html":{},"modules/MigardStoreModule.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"components/WorkflowLevel1Component.html":{}}}],["angular/src/lib/modules/store/store.modul",{"_index":294,"title":{},"body":{"modules/MidgardModule.html":{}}}],["angular/src/lib/modules/store/store.module.t",{"_index":350,"title":{},"body":{"modules/MigardStoreModule.html":{}}}],["angular/src/lib/modules/store/store.t",{"_index":437,"title":{},"body":{"injectables/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["angular/src/lib/modules/store/store.ts:18",{"_index":441,"title":{},"body":{"injectables/Store.html":{}}}],["angular/src/lib/modules/store/store.ts:47",{"_index":444,"title":{},"body":{"injectables/Store.html":{}}}],["angular/src/lib/modules/store/store.ts:48",{"_index":442,"title":{},"body":{"injectables/Store.html":{}}}],["angular/src/lib/modules/store/store.ts:49",{"_index":443,"title":{},"body":{"injectables/Store.html":{}}}],["angular/src/lib/modules/store/store.ts:56",{"_index":453,"title":{},"body":{"injectables/Store.html":{}}}],["angular/src/lib/modules/translation/transl",{"_index":509,"title":{},"body":{"components/TranslationLoader.html":{},"coverage.html":{}}}],["angular/src/lib/modules/translation/translation.modul",{"_index":301,"title":{},"body":{"modules/MidgardModule.html":{}}}],["angular/src/lib/modules/translation/translation.module.t",{"_index":336,"title":{},"body":{"modules/MidgardTranslationModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["angular/src/lib/pages/login/login.compon",{"_index":312,"title":{},"body":{"modules/MidgardRoutingModule.html":{}}}],["angular/src/lib/pages/login/login.component.t",{"_index":241,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["angular/src/lib/pages/login/login.component.ts:12",{"_index":246,"title":{},"body":{"components/LoginComponent.html":{}}}],["angular/src/lib/pages/login/login.component.ts:8",{"_index":245,"title":{},"body":{"components/LoginComponent.html":{}}}],["angular/src/lib/pages/user/user.compon",{"_index":314,"title":{},"body":{"modules/MidgardRoutingModule.html":{}}}],["angular/src/lib/pages/user/user.component.t",{"_index":523,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["angular/src/lib/pages/user/user.component.ts:12",{"_index":527,"title":{},"body":{"components/UserComponent.html":{}}}],["angular/src/lib/pages/user/user.component.ts:8",{"_index":526,"title":{},"body":{"components/UserComponent.html":{}}}],["angular/src/lib/pages/workflow",{"_index":313,"title":{},"body":{"modules/MidgardRoutingModule.html":{},"interfaces/MidgardState.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{}}}],["angular/src/lib/state/midgard.act",{"_index":541,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["angular/src/lib/state/midgard.actions.t",{"_index":587,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["angular/src/lib/state/midgard.ep",{"_index":461,"title":{},"body":{"injectables/Store.html":{}}}],["angular/src/lib/state/midgard.epics.t",{"_index":599,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angular/src/lib/state/midgard.model.t",{"_index":326,"title":{},"body":{"interfaces/MidgardState.html":{},"coverage.html":{}}}],["angular/src/lib/state/midgard.reduc",{"_index":463,"title":{},"body":{"injectables/Store.html":{}}}],["angular/src/lib/state/midgard.reducer.t",{"_index":603,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":181,"title":{},"body":{"injectables/HttpService.html":{}}}],["apollo",{"_index":95,"title":{},"body":{"modules/GraphQLModule.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"components/WorkflowLevel1Component.html":{},"miscellaneous/functions.html":{}}}],["apollo_opt",{"_index":94,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo_overwrit",{"_index":423,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apollo_reset",{"_index":424,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apollo_writ",{"_index":425,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apollolink",{"_index":126,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["apollomodul",{"_index":93,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apolloreduc",{"_index":429,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apolloreducer(st",{"_index":621,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apolloreducerconfig",{"_index":371,"title":{},"body":{"classes/ReduxCache.html":{}}}],["app",{"_index":231,"title":{},"body":{"components/ListComponent.html":{},"index.html":{}}}],["artifact",{"_index":650,"title":{},"body":{"index.html":{}}}],["assum",{"_index":142,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["auth",{"_index":132,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["auth.concat(http",{"_index":147,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authent",{"_index":135,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["author",{"_index":198,"title":{},"body":{"injectables/HttpService.html":{}}}],["automat",{"_index":644,"title":{},"body":{"index.html":{}}}],["avail",{"_index":263,"title":{},"body":{"components/MidgardComponent.html":{},"modules.html":{}}}],["bar",{"_index":353,"title":{},"body":{"components/NavBarComponent.html":{},"components/TopBarComponent.html":{}}}],["bar'},{'nam",{"_index":76,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["bar.compon",{"_index":291,"title":{},"body":{"modules/MidgardModule.html":{}}}],["bar.component.html",{"_index":355,"title":{},"body":{"components/NavBarComponent.html":{},"components/TopBarComponent.html":{}}}],["bar.component.scss",{"_index":354,"title":{},"body":{"components/NavBarComponent.html":{},"components/TopBarComponent.html":{}}}],["bar.component.t",{"_index":352,"title":{},"body":{"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:12",{"_index":357,"title":{},"body":{"components/NavBarComponent.html":{},"components/TopBarComponent.html":{}}}],["bar.component.ts:8",{"_index":356,"title":{},"body":{"components/NavBarComponent.html":{},"components/TopBarComponent.html":{}}}],["bar/nav",{"_index":290,"title":{},"body":{"modules/MidgardModule.html":{},"components/NavBarComponent.html":{},"coverage.html":{}}}],["bar/top",{"_index":293,"title":{},"body":{"modules/MidgardModule.html":{},"components/TopBarComponent.html":{},"coverage.html":{}}}],["beacus",{"_index":229,"title":{},"body":{"components/ListComponent.html":{}}}],["befor",{"_index":493,"title":{},"body":{"injectables/Store.html":{}}}],["bodi",{"_index":177,"title":{},"body":{"injectables/HttpService.html":{}}}],["boolean",{"_index":123,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/MidgardState.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":5,"title":{},"body":{"modules/CrudModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"overview.html":{}}}],["brows",{"_index":671,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":304,"title":{},"body":{"modules/MidgardModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":302,"title":{},"body":{"modules/MidgardModule.html":{}}}],["build",{"_index":649,"title":{},"body":{"index.html":{}}}],["cac`h",{"_index":121,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["cach",{"_index":104,"title":{},"body":{"modules/GraphQLModule.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cache.writeopt",{"_index":369,"title":{},"body":{"classes/ReduxCache.html":{}}}],["case",{"_index":117,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["catcherror",{"_index":194,"title":{},"body":{"injectables/HttpService.html":{}}}],["catcherror((error",{"_index":202,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["celltempl",{"_index":558,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["chang",{"_index":233,"title":{},"body":{"components/ListComponent.html":{},"injectables/Store.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":667,"title":{},"body":{"index.html":{}}}],["children",{"_index":317,"title":{},"body":{"modules/MidgardRoutingModule.html":{}}}],["class",{"_index":34,"title":{"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{}},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":400,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["cli",{"_index":634,"title":{},"body":{"index.html":{}}}],["client",{"_index":343,"title":{},"body":{"modules/MidgardTranslationModule.html":{},"miscellaneous/functions.html":{}}}],["clonedeep",{"_index":376,"title":{},"body":{"classes/ReduxCache.html":{}}}],["cluster_crudmodul",{"_index":8,"title":{},"body":{"modules/CrudModule.html":{},"overview.html":{}}}],["cluster_crudmodule_declar",{"_index":9,"title":{},"body":{"modules/CrudModule.html":{},"overview.html":{}}}],["cluster_crudmodule_export",{"_index":10,"title":{},"body":{"modules/CrudModule.html":{},"overview.html":{}}}],["cluster_midgardmodul",{"_index":273,"title":{},"body":{"modules/MidgardModule.html":{},"overview.html":{}}}],["cluster_midgardmodule_declar",{"_index":274,"title":{},"body":{"modules/MidgardModule.html":{},"overview.html":{}}}],["cluster_midgardmodule_export",{"_index":276,"title":{},"body":{"modules/MidgardModule.html":{},"overview.html":{}}}],["cluster_midgardmodule_import",{"_index":275,"title":{},"body":{"modules/MidgardModule.html":{},"overview.html":{}}}],["cluster_midgardtranslationmodul",{"_index":334,"title":{},"body":{"modules/MidgardTranslationModule.html":{},"overview.html":{}}}],["cluster_midgardtranslationmodule_declar",{"_index":335,"title":{},"body":{"modules/MidgardTranslationModule.html":{},"overview.html":{}}}],["code",{"_index":646,"title":{},"body":{"index.html":{}}}],["column",{"_index":551,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["combin",{"_index":476,"title":{},"body":{"injectables/Store.html":{}}}],["combinedep",{"_index":478,"title":{},"body":{"injectables/Store.html":{}}}],["combinedreduc",{"_index":474,"title":{},"body":{"injectables/Store.html":{}}}],["combineep",{"_index":455,"title":{},"body":{"injectables/Store.html":{}}}],["combineepics(...ep",{"_index":479,"title":{},"body":{"injectables/Store.html":{}}}],["combineepics(loadworkflowlevel1dataep",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commonmodul",{"_index":25,"title":{},"body":{"modules/CrudModule.html":{},"modules/MidgardModule.html":{}}}],["complet",{"_index":504,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["compon",{"_index":33,"title":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardRoutingModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["component_templ",{"_index":66,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["components/nav",{"_index":289,"title":{},"body":{"modules/MidgardModule.html":{}}}],["components/top",{"_index":292,"title":{},"body":{"modules/MidgardModule.html":{}}}],["composewithdevtool",{"_index":457,"title":{},"body":{"injectables/Store.html":{}}}],["config",{"_index":367,"title":{},"body":{"classes/ReduxCache.html":{}}}],["console.log('graphql",{"_index":548,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["const",{"_index":32,"title":{},"body":{"modules/CrudModule.html":{},"modules/GraphQLModule.html":{},"injectables/HttpService.html":{},"modules/MidgardRoutingModule.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":426,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["constructor",{"_index":55,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["constructor(apollo",{"_index":536,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["constructor(config",{"_index":364,"title":{},"body":{"classes/ReduxCache.html":{}}}],["constructor(http",{"_index":514,"title":{},"body":{"components/TranslationLoader.html":{}}}],["constructor(priv",{"_index":520,"title":{},"body":{"components/TranslationLoader.html":{}}}],["constructor(reduxcacheconfig",{"_index":406,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["constructor(stor",{"_index":217,"title":{},"body":{"components/ListComponent.html":{}}}],["constructor(transl",{"_index":250,"title":{},"body":{"components/MidgardComponent.html":{}}}],["contact",{"_index":188,"title":{},"body":{"injectables/HttpService.html":{},"modules/MidgardRoutingModule.html":{},"components/NavBarComponent.html":{}}}],["contactsep",{"_index":466,"title":{},"body":{"injectables/Store.html":{}}}],["contactsreduc",{"_index":464,"title":{},"body":{"injectables/Store.html":{}}}],["context",{"_index":110,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["convert",{"_index":454,"title":{},"body":{"injectables/Store.html":{}}}],["core",{"_index":192,"title":{},"body":{"injectables/HttpService.html":{},"injectables/Store.html":{}}}],["coverag",{"_index":566,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":477,"title":{},"body":{"injectables/Store.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["create_d",{"_index":529,"title":{},"body":{"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["createapollo",{"_index":152,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createapollo(httplink",{"_index":128,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["createepicmiddlewar",{"_index":456,"title":{},"body":{"injectables/Store.html":{}}}],["createtranslateload",{"_index":349,"title":{},"body":{"modules/MidgardTranslationModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(httpservic",{"_index":345,"title":{},"body":{"modules/MidgardTranslationModule.html":{},"miscellaneous/functions.html":{}}}],["crud",{"_index":46,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["crudmodul",{"_index":1,"title":{"modules/CrudModule.html":{}},"body":{"modules/CrudModule.html":{},"modules/MidgardModule.html":{},"modules.html":{},"overview.html":{}}}],["current",{"_index":260,"title":{},"body":{"components/MidgardComponent.html":{}}}],["data",{"_index":189,"title":{},"body":{"injectables/HttpService.html":{},"components/ListComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"components/WorkflowLevel1Component.html":{},"miscellaneous/functions.html":{}}}],["dataid",{"_index":384,"title":{},"body":{"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["dataidfromobject",{"_index":391,"title":{},"body":{"classes/ReduxCache.html":{}}}],["dataload",{"_index":327,"title":{},"body":{"interfaces/MidgardState.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":556,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["declar",{"_index":4,"title":{},"body":{"modules/CrudModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"overview.html":{}}}],["default",{"_index":182,"title":{},"body":{"injectables/HttpService.html":{},"components/ListComponent.html":{},"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":56,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["definetableopt",{"_index":535,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["delet",{"_index":401,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["delete(dataid",{"_index":410,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["dep",{"_index":153,"title":{},"body":{"modules/GraphQLModule.html":{},"modules/MidgardTranslationModule.html":{}}}],["depend",{"_index":2,"title":{"dependencies.html":{}},"body":{"modules/CrudModule.html":{},"components/ListComponent.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":175,"title":{},"body":{"injectables/HttpService.html":{},"modules/MidgardTranslationModule.html":{},"injectables/Store.html":{},"miscellaneous/functions.html":{}}}],["detail",{"_index":47,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail'},{'nam",{"_index":68,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["detail.component.css",{"_index":49,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail.component.html",{"_index":51,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail/detail.compon",{"_index":27,"title":{},"body":{"modules/CrudModule.html":{}}}],["detailcompon",{"_index":11,"title":{"components/DetailComponent.html":{}},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":641,"title":{},"body":{"index.html":{}}}],["develop",{"_index":637,"title":{},"body":{"index.html":{}}}],["devtool",{"_index":458,"title":{},"body":{"injectables/Store.html":{}}}],["direct",{"_index":64,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":648,"title":{},"body":{"index.html":{}}}],["directori",{"_index":652,"title":{},"body":{"index.html":{}}}],["dispatch",{"_index":438,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["dispos",{"_index":449,"title":{},"body":{"injectables/Store.html":{}}}],["dist",{"_index":651,"title":{},"body":{"index.html":{}}}],["document",{"_index":389,"title":{},"body":{"classes/ReduxCache.html":{},"coverage.html":{}}}],["dom",{"_index":38,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["dynam",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":187,"title":{},"body":{"injectables/HttpService.html":{}}}],["e2",{"_index":661,"title":{},"body":{"index.html":{}}}],["element",{"_index":63,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["emit",{"_index":447,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":660,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":186,"title":{},"body":{"injectables/HttpService.html":{},"components/TranslationLoader.html":{}}}],["enhanc",{"_index":484,"title":{},"body":{"injectables/Store.html":{}}}],["environ",{"_index":113,"title":{},"body":{"modules/GraphQLModule.html":{},"modules/MidgardTranslationModule.html":{}}}],["environment.api_url}/graphql",{"_index":116,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["environment.api_url}/i18n",{"_index":347,"title":{},"body":{"modules/MidgardTranslationModule.html":{}}}],["environment.api_url}/workflowlevel1/`).pip",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.api_url}/workflowlevel2/`).pip",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["epic",{"_index":473,"title":{},"body":{"injectables/Store.html":{}}}],["epicmiddlewar",{"_index":480,"title":{},"body":{"injectables/Store.html":{}}}],["epicmiddleware.run(combinedep",{"_index":485,"title":{},"body":{"injectables/Store.html":{}}}],["error",{"_index":173,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/functions.html":{}}}],["error(err",{"_index":502,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["exampl",{"_index":141,"title":{},"body":{"modules/GraphQLModule.html":{},"components/WorkflowLevel1Component.html":{}}}],["execut",{"_index":657,"title":{},"body":{"index.html":{}}}],["exist",{"_index":144,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["export",{"_index":7,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"overview.html":{}}}],["extend",{"_index":362,"title":{},"body":{"classes/ReduxCache.html":{}}}],["extens",{"_index":459,"title":{},"body":{"injectables/Store.html":{}}}],["fail",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fallback",{"_index":257,"title":{},"body":{"components/MidgardComponent.html":{}}}],["fals",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":555,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["fix",{"_index":232,"title":{},"body":{"components/ListComponent.html":{}}}],["flag",{"_index":654,"title":{},"body":{"index.html":{}}}],["flex",{"_index":553,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["forroot",{"_index":271,"title":{},"body":{"modules/MidgardHttpModule.html":{},"modules/MigardStoreModule.html":{}}}],["found",{"_index":259,"title":{},"body":{"components/MidgardComponent.html":{}}}],["fragmentmatcherfunct",{"_index":393,"title":{},"body":{"classes/ReduxCache.html":{}}}],["function",{"_index":127,"title":{"miscellaneous/functions.html":{}},"body":{"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"modules/MidgardTranslationModule.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["further",{"_index":663,"title":{},"body":{"index.html":{}}}],["gener",{"_index":633,"title":{},"body":{"index.html":{}}}],["get",{"_index":518,"title":{"index.html":{}},"body":{"components/TranslationLoader.html":{}}}],["get(dataid",{"_index":412,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["get,post,put",{"_index":185,"title":{},"body":{"injectables/HttpService.html":{}}}],["getreduc",{"_index":402,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["getstat",{"_index":439,"title":{},"body":{"injectables/Store.html":{}}}],["gettransl",{"_index":513,"title":{},"body":{"components/TranslationLoader.html":{}}}],["gettranslation(lang",{"_index":516,"title":{},"body":{"components/TranslationLoader.html":{}}}],["go",{"_index":666,"title":{},"body":{"index.html":{}}}],["gql",{"_index":542,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["graph",{"_index":672,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":120,"title":{},"body":{"modules/GraphQLModule.html":{},"components/WorkflowLevel1Component.html":{},"miscellaneous/functions.html":{}}}],["graphqlmodul",{"_index":90,"title":{"modules/GraphQLModule.html":{}},"body":{"modules/GraphQLModule.html":{},"modules/MidgardModule.html":{},"modules.html":{},"overview.html":{}}}],["handl",{"_index":172,"title":{},"body":{"injectables/HttpService.html":{}}}],["handleerror",{"_index":168,"title":{},"body":{"injectables/HttpService.html":{}}}],["handleerror(error",{"_index":170,"title":{},"body":{"injectables/HttpService.html":{}}}],["happen",{"_index":494,"title":{},"body":{"injectables/Store.html":{}}}],["hardcod",{"_index":138,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["header",{"_index":134,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/HttpService.html":{}}}],["help",{"_index":664,"title":{},"body":{"index.html":{}}}],["html",{"_index":62,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["http",{"_index":100,"title":{"interfaces/Http.html":{}},"body":{"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"modules/MidgardTranslationModule.html":{},"components/TranslationLoader.html":{},"coverage.html":{}}}],["http.request(url",{"_index":199,"title":{},"body":{"injectables/HttpService.html":{}}}],["http/http.servic",{"_index":340,"title":{},"body":{"modules/MidgardTranslationModule.html":{},"components/TranslationLoader.html":{}}}],["http://localhost:4200",{"_index":643,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":339,"title":{},"body":{"modules/MidgardTranslationModule.html":{}}}],["httpclientmodul",{"_index":298,"title":{},"body":{"modules/MidgardModule.html":{}}}],["httpheader",{"_index":111,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httpheaders().set('author",{"_index":146,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httplink",{"_index":98,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["httplink.creat",{"_index":131,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httplinkmodul",{"_index":97,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httpservic",{"_index":165,"title":{"injectables/HttpService.html":{}},"body":{"injectables/HttpService.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardTranslationModule.html":{},"components/TranslationLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpservice.makerequest('get",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":530,"title":{},"body":{"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{}}}],["identifi",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":41,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"components/TopBarComponent.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["index",{"_index":52,"title":{"index.html":{}},"body":{"components/DetailComponent.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"interfaces/MidgardState.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{}}}],["init",{"_index":448,"title":{},"body":{"injectables/Store.html":{}}}],["initialst",{"_index":575,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":164,"title":{"injectables/HttpService.html":{},"injectables/Store.html":{}},"body":{"injectables/HttpService.html":{},"injectables/Store.html":{},"coverage.html":{},"overview.html":{}}}],["injectiontoken",{"_index":92,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["inmemori",{"_index":105,"title":{},"body":{"modules/GraphQLModule.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["inmemorycach",{"_index":103,"title":{},"body":{"modules/GraphQLModule.html":{},"classes/ReduxCache.html":{},"miscellaneous/functions.html":{}}}],["input",{"_index":212,"title":{},"body":{"components/ListComponent.html":{}}}],["instanc",{"_index":145,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/Store.html":{}}}],["interfac",{"_index":154,"title":{"interfaces/Http.html":{},"interfaces/MidgardState.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"interfaces/WorkflowLevel1.html":{},"interfaces/WorkflowLevel2.html":{}},"body":{"interfaces/Http.html":{},"interfaces/MidgardState.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"interfaces/WorkflowLevel1.html":{},"interfaces/WorkflowLevel2.html":{},"coverage.html":{},"overview.html":{}}}],["intialias",{"_index":622,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isn't",{"_index":258,"title":{},"body":{"components/MidgardComponent.html":{}}}],["karma",{"_index":659,"title":{},"body":{"index.html":{}}}],["key",{"_index":228,"title":{},"body":{"components/ListComponent.html":{},"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["lang",{"_index":262,"title":{},"body":{"components/MidgardComponent.html":{},"components/TranslationLoader.html":{}}}],["languag",{"_index":256,"title":{},"body":{"components/MidgardComponent.html":{}}}],["legend",{"_index":3,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"overview.html":{}}}],["level",{"_index":359,"title":{},"body":{"components/NavBarComponent.html":{}}}],["level1",{"_index":318,"title":{},"body":{"modules/MidgardRoutingModule.html":{},"components/NavBarComponent.html":{},"components/WorkflowLevel1Component.html":{}}}],["level1'},{'nam",{"_index":86,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["level1.compon",{"_index":284,"title":{},"body":{"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{}}}],["level1.component.html",{"_index":534,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["level1.component.scss",{"_index":533,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["level1.component.t",{"_index":532,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"coverage.html":{}}}],["level1.component.ts:15",{"_index":537,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["level1.component.ts:21",{"_index":539,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["level1.component.ts:40",{"_index":538,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["level1.model",{"_index":331,"title":{},"body":{"interfaces/MidgardState.html":{},"components/WorkflowLevel1Component.html":{}}}],["level1.model.t",{"_index":528,"title":{},"body":{"interfaces/WorkflowLevel1.html":{},"coverage.html":{}}}],["level1/state/workflow",{"_index":330,"title":{},"body":{"interfaces/MidgardState.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"coverage.html":{}}}],["level1/workflow",{"_index":283,"title":{},"body":{"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"components/WorkflowLevel1Component.html":{},"coverage.html":{}}}],["level2",{"_index":88,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardRoutingModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["level2.compon",{"_index":286,"title":{},"body":{"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{}}}],["level2.component.html",{"_index":562,"title":{},"body":{"components/WorkflowLevel2Component.html":{}}}],["level2.component.scss",{"_index":561,"title":{},"body":{"components/WorkflowLevel2Component.html":{}}}],["level2.component.t",{"_index":560,"title":{},"body":{"components/WorkflowLevel2Component.html":{},"coverage.html":{}}}],["level2.component.ts:12",{"_index":565,"title":{},"body":{"components/WorkflowLevel2Component.html":{}}}],["level2.component.ts:15",{"_index":564,"title":{},"body":{"components/WorkflowLevel2Component.html":{}}}],["level2.component.ts:9",{"_index":563,"title":{},"body":{"components/WorkflowLevel2Component.html":{}}}],["level2.model",{"_index":333,"title":{},"body":{"interfaces/MidgardState.html":{}}}],["level2.model.t",{"_index":559,"title":{},"body":{"interfaces/WorkflowLevel2.html":{},"coverage.html":{}}}],["level2/state/workflow",{"_index":332,"title":{},"body":{"interfaces/MidgardState.html":{},"interfaces/WorkflowLevel2.html":{},"coverage.html":{}}}],["level2/workflow",{"_index":285,"title":{},"body":{"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{}}}],["libs/contacts/src/lib/contacts.module#contactsmodul",{"_index":321,"title":{},"body":{"modules/MidgardRoutingModule.html":{}}}],["libs/contacts/src/lib/state/contacts.ep",{"_index":467,"title":{},"body":{"injectables/Store.html":{}}}],["libs/contacts/src/lib/state/contacts.reduc",{"_index":465,"title":{},"body":{"injectables/Store.html":{}}}],["libs/freyja/src/lib/table/table.modul",{"_index":31,"title":{},"body":{"modules/CrudModule.html":{}}}],["libs/midgard",{"_index":28,"title":{},"body":{"modules/CrudModule.html":{},"modules/GraphQLModule.html":{},"components/ListComponent.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"interfaces/MidgardState.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/WorkflowLevel1Component.html":{}}}],["libs/products/src/lib/products.module#productsmodul",{"_index":323,"title":{},"body":{"modules/MidgardRoutingModule.html":{}}}],["libs/products/src/lib/state/products.ep",{"_index":471,"title":{},"body":{"injectables/Store.html":{}}}],["libs/products/src/lib/state/products.reduc",{"_index":469,"title":{},"body":{"injectables/Store.html":{}}}],["link",{"_index":99,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["list",{"_index":207,"title":{},"body":{"components/ListComponent.html":{}}}],["list'},{'nam",{"_index":69,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["list.component.css",{"_index":208,"title":{},"body":{"components/ListComponent.html":{}}}],["list.component.html",{"_index":209,"title":{},"body":{"components/ListComponent.html":{}}}],["listcompon",{"_index":13,"title":{"components/ListComponent.html":{}},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["listen",{"_index":489,"title":{},"body":{"injectables/Store.html":{}}}],["load",{"_index":227,"title":{},"body":{"components/ListComponent.html":{},"modules/MidgardTranslationModule.html":{}}}],["load_data_workflowlevel1",{"_index":593,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["load_data_workflowlevel1_commit",{"_index":594,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["load_data_workflowlevel1_fail",{"_index":595,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["load_data_workflowlevel2",{"_index":596,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["load_data_workflowlevel2_commit",{"_index":597,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["load_data_workflowlevel2_fail",{"_index":598,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadact",{"_index":213,"title":{},"body":{"components/ListComponent.html":{}}}],["loadchildren",{"_index":320,"title":{},"body":{"modules/MidgardRoutingModule.html":{}}}],["loader",{"_index":264,"title":{},"body":{"components/MidgardComponent.html":{},"modules/MidgardTranslationModule.html":{},"components/TranslationLoader.html":{}}}],["loader'},{'nam",{"_index":81,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["loader.compon",{"_index":342,"title":{},"body":{"modules/MidgardTranslationModule.html":{}}}],["loader.component.css",{"_index":511,"title":{},"body":{"components/TranslationLoader.html":{}}}],["loader.component.html",{"_index":512,"title":{},"body":{"components/TranslationLoader.html":{}}}],["loader.component.t",{"_index":510,"title":{},"body":{"components/TranslationLoader.html":{},"coverage.html":{}}}],["loader.component.ts:10",{"_index":515,"title":{},"body":{"components/TranslationLoader.html":{}}}],["loader.component.ts:12",{"_index":519,"title":{},"body":{"components/TranslationLoader.html":{}}}],["loader.component.ts:17",{"_index":517,"title":{},"body":{"components/TranslationLoader.html":{}}}],["loader/transl",{"_index":341,"title":{},"body":{"modules/MidgardTranslationModule.html":{},"components/TranslationLoader.html":{},"coverage.html":{}}}],["loadworkflowlevel1data",{"_index":540,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadworkflowlevel1datacommit",{"_index":588,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadworkflowlevel1datacommit(data",{"_index":623,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadworkflowlevel1datacommit(res.data",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadworkflowlevel1dataep",{"_index":600,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadworkflowlevel1datafail",{"_index":589,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadworkflowlevel1datafail(error",{"_index":624,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadworkflowlevel2data",{"_index":590,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadworkflowlevel2datacommit",{"_index":591,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadworkflowlevel2datacommit(data",{"_index":625,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadworkflowlevel2datacommit(res.data",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadworkflowlevel2dataep",{"_index":601,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadworkflowlevel2datafail",{"_index":592,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadworkflowlevel2datafail(error",{"_index":626,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lodash",{"_index":377,"title":{},"body":{"classes/ReduxCache.html":{}}}],["login",{"_index":242,"title":{},"body":{"components/LoginComponent.html":{},"modules/MidgardRoutingModule.html":{}}}],["login'},{'nam",{"_index":71,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["login.component.css",{"_index":243,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":244,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":70,"title":{"components/LoginComponent.html":{}},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["logo",{"_index":507,"title":{},"body":{"components/TopBarComponent.html":{}}}],["makerequest",{"_index":169,"title":{},"body":{"injectables/HttpService.html":{}}}],["makerequest(method",{"_index":176,"title":{},"body":{"injectables/HttpService.html":{}}}],["map(r",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":36,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["memori",{"_index":380,"title":{},"body":{"classes/ReduxCache.html":{}}}],["metadata",{"_index":43,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["method",{"_index":53,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["mg",{"_index":45,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["middlewar",{"_index":481,"title":{},"body":{"injectables/Store.html":{}}}],["midgard",{"_index":191,"title":{},"body":{"injectables/HttpService.html":{},"components/MidgardComponent.html":{},"injectables/Store.html":{}}}],["midgard'},{'nam",{"_index":73,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["midgard.compon",{"_index":281,"title":{},"body":{"modules/MidgardModule.html":{}}}],["midgard.component.html",{"_index":249,"title":{},"body":{"components/MidgardComponent.html":{}}}],["midgard.component.scss",{"_index":248,"title":{},"body":{"components/MidgardComponent.html":{}}}],["midgardapp",{"_index":631,"title":{},"body":{"index.html":{}}}],["midgardcompon",{"_index":72,"title":{"components/MidgardComponent.html":{}},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["midgardep",{"_index":460,"title":{},"body":{"injectables/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["midgardhttpmodul",{"_index":266,"title":{"modules/MidgardHttpModule.html":{}},"body":{"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules.html":{},"overview.html":{}}}],["midgardhttpmodule.forroot",{"_index":306,"title":{},"body":{"modules/MidgardModule.html":{}}}],["midgardmodul",{"_index":272,"title":{"modules/MidgardModule.html":{}},"body":{"modules/MidgardModule.html":{},"modules.html":{},"overview.html":{}}}],["midgardreduc",{"_index":462,"title":{},"body":{"injectables/Store.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["midgardreducer(st",{"_index":627,"title":{},"body":{"miscellaneous/functions.html":{}}}],["midgardrout",{"_index":315,"title":{},"body":{"modules/MidgardRoutingModule.html":{}}}],["midgardroutingmodul",{"_index":277,"title":{"modules/MidgardRoutingModule.html":{}},"body":{"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["midgardst",{"_index":325,"title":{"interfaces/MidgardState.html":{}},"body":{"interfaces/MidgardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["midgardtranslationmodul",{"_index":278,"title":{"modules/MidgardTranslationModule.html":{}},"body":{"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"modules.html":{},"overview.html":{}}}],["migardstoremodul",{"_index":279,"title":{"modules/MigardStoreModule.html":{}},"body":{"modules/MidgardModule.html":{},"modules/MigardStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["migardstoremodule.forroot",{"_index":305,"title":{},"body":{"modules/MidgardModule.html":{}}}],["miscellan",{"_index":614,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":214,"title":{},"body":{"components/ListComponent.html":{}}}],["modul",{"_index":0,"title":{"modules/CrudModule.html":{},"modules/GraphQLModule.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"modules.html":{}},"body":{"modules/CrudModule.html":{},"modules/GraphQLModule.html":{},"components/ListComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":268,"title":{},"body":{"modules/MidgardHttpModule.html":{},"modules/MigardStoreModule.html":{}}}],["more",{"_index":665,"title":{},"body":{"index.html":{}}}],["name",{"_index":67,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nav",{"_index":75,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["navbarcompon",{"_index":74,"title":{"components/NavBarComponent.html":{}},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":642,"title":{},"body":{"index.html":{}}}],["new",{"_index":129,"title":{},"body":{"modules/GraphQLModule.html":{},"modules/MidgardTranslationModule.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newdata",{"_index":419,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["next(stat",{"_index":498,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":639,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":23,"title":{},"body":{"modules/CrudModule.html":{},"modules/GraphQLModule.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{}}}],["ngoninit",{"_index":54,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["ngx",{"_index":254,"title":{},"body":{"components/MidgardComponent.html":{},"modules/MidgardTranslationModule.html":{}}}],["normalizedcach",{"_index":398,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["normalizedcacheobject",{"_index":417,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["null",{"_index":178,"title":{},"body":{"injectables/HttpService.html":{}}}],["number",{"_index":531,"title":{},"body":{"interfaces/WorkflowLevel1.html":{},"interfaces/WorkflowLevel2.html":{}}}],["object",{"_index":163,"title":{},"body":{"interfaces/Http.html":{},"classes/ReduxCache.html":{},"injectables/Store.html":{}}}],["observ",{"_index":158,"title":{},"body":{"interfaces/Http.html":{},"injectables/HttpService.html":{},"injectables/Store.html":{},"components/TranslationLoader.html":{},"miscellaneous/variables.html":{}}}],["observable(observ",{"_index":495,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["observable.create(observ",{"_index":445,"title":{},"body":{"injectables/Store.html":{}}}],["observer.complet",{"_index":505,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["observer.error(err",{"_index":503,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["observer.next(state[reducer][key",{"_index":501,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["observer.next(storeinstance.getst",{"_index":446,"title":{},"body":{"injectables/Store.html":{}}}],["of(loadworkflowlevel1datafail(error",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["of(loadworkflowlevel2datafail(error",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oftype(load_data_workflowlevel1",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oftype(load_data_workflowlevel2",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oldstat",{"_index":492,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["oldstate[reducer][key",{"_index":500,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["oninit",{"_index":42,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["option",{"_index":162,"title":{},"body":{"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/MidgardComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"components/TranslationLoader.html":{},"components/WorkflowLevel1Component.html":{},"miscellaneous/functions.html":{}}}],["options).pip",{"_index":200,"title":{},"body":{"injectables/HttpService.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/CrudModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":673,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrit",{"_index":379,"title":{},"body":{"classes/ReduxCache.html":{}}}],["packag",{"_index":605,"title":{"dependencies.html":{}},"body":{}}],["pages/login/login.compon",{"_index":288,"title":{},"body":{"modules/MidgardModule.html":{}}}],["pages/user/user.compon",{"_index":287,"title":{},"body":{"modules/MidgardModule.html":{}}}],["pages/workflow",{"_index":282,"title":{},"body":{"modules/MidgardModule.html":{}}}],["param",{"_index":122,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/HttpService.html":{},"modules/MidgardTranslationModule.html":{},"injectables/Store.html":{},"miscellaneous/functions.html":{}}}],["paramet",{"_index":174,"title":{},"body":{"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/MidgardComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"injectables/Store.html":{},"components/TranslationLoader.html":{},"components/WorkflowLevel1Component.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":316,"title":{},"body":{"modules/MidgardRoutingModule.html":{}}}],["privat",{"_index":167,"title":{},"body":{"injectables/HttpService.html":{},"components/ListComponent.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["prod",{"_index":653,"title":{},"body":{"index.html":{}}}],["product",{"_index":322,"title":{},"body":{"modules/MidgardRoutingModule.html":{},"components/NavBarComponent.html":{},"index.html":{}}}],["productsep",{"_index":470,"title":{},"body":{"injectables/Store.html":{}}}],["productsreduc",{"_index":468,"title":{},"body":{"injectables/Store.html":{}}}],["profil",{"_index":508,"title":{},"body":{"components/TopBarComponent.html":{}}}],["project",{"_index":632,"title":{},"body":{"index.html":{}}}],["projects/.../constants.t",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../crud.module.t",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../graphql.module.t",{"_index":616,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../midgard.actions.t",{"_index":618,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../midgard.epics.t",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../midgard.reducer.t",{"_index":619,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../reducer.t",{"_index":615,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../reduxcache.t",{"_index":679,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../reduxnormalizedcache.t",{"_index":620,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../store.t",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../translation.module.t",{"_index":617,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/midgard",{"_index":20,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["prop",{"_index":552,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["properti",{"_index":143,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"components/ListComponent.html":{},"interfaces/MidgardState.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TranslationLoader.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"miscellaneous/variables.html":{}}}],["protractor",{"_index":662,"title":{},"body":{"index.html":{}}}],["provid",{"_index":6,"title":{},"body":{"modules/CrudModule.html":{},"modules/GraphQLModule.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"overview.html":{}}}],["public",{"_index":210,"title":{},"body":{"components/ListComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TranslationLoader.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["queri",{"_index":545,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["read",{"_index":140,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["readm",{"_index":668,"title":{},"body":{"index.html":{}}}],["reduc",{"_index":215,"title":{},"body":{"components/ListComponent.html":{},"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["redux",{"_index":108,"title":{},"body":{"modules/GraphQLModule.html":{},"components/ListComponent.html":{},"injectables/Store.html":{},"miscellaneous/functions.html":{}}}],["redux.applymiddleware(epicmiddlewar",{"_index":483,"title":{},"body":{"injectables/Store.html":{}}}],["redux.combinereducers(reduc",{"_index":475,"title":{},"body":{"injectables/Store.html":{}}}],["redux.createstor",{"_index":482,"title":{},"body":{"injectables/Store.html":{}}}],["redux/constants.t",{"_index":573,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["redux/reducer.t",{"_index":574,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["redux/reduxcache.t",{"_index":361,"title":{},"body":{"classes/ReduxCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["redux/reduxcache.ts:18",{"_index":366,"title":{},"body":{"classes/ReduxCache.html":{}}}],["redux/reduxcache.ts:25",{"_index":370,"title":{},"body":{"classes/ReduxCache.html":{}}}],["redux/reduxnormalizedcache.t",{"_index":397,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["redux/reduxnormalizedcache.ts:19",{"_index":408,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["redux/reduxnormalizedcache.ts:20",{"_index":407,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["redux/reduxnormalizedcache.ts:26",{"_index":422,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["redux/reduxnormalizedcache.ts:29",{"_index":413,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["redux/reduxnormalizedcache.ts:32",{"_index":421,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["redux/reduxnormalizedcache.ts:38",{"_index":411,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["redux/reduxnormalizedcache.ts:44",{"_index":409,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["redux/reduxnormalizedcache.ts:49",{"_index":418,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["redux/reduxnormalizedcache.ts:56",{"_index":415,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["reduxcach",{"_index":106,"title":{"classes/ReduxCache.html":{}},"body":{"modules/GraphQLModule.html":{},"classes/ReduxCache.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["reduxcache({stor",{"_index":130,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["reduxcacheconfig",{"_index":365,"title":{},"body":{"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["reduxcacheconfig.reduxrootselector",{"_index":428,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["reduxcacheconfig.stor",{"_index":431,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["reduxnormalizedcach",{"_index":375,"title":{"classes/ReduxNormalizedCache.html":{}},"body":{"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"coverage.html":{}}}],["reduxnormalizedcache(reduxcacheconfig",{"_index":436,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["reduxnormalizedcacheconfig",{"_index":373,"title":{"interfaces/ReduxNormalizedCacheConfig.html":{}},"body":{"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"coverage.html":{}}}],["reduxnormalizedcachefactori",{"_index":374,"title":{},"body":{"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["reduxnormalizedcachefactory(config",{"_index":382,"title":{},"body":{"classes/ReduxCache.html":{}}}],["reduxnormalizedcachefactory(reduxcacheconfig",{"_index":628,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reduxrootselector",{"_index":399,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["reload",{"_index":645,"title":{},"body":{"index.html":{}}}],["replac",{"_index":403,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["replace(newdata",{"_index":416,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["request",{"_index":156,"title":{},"body":{"interfaces/Http.html":{},"injectables/HttpService.html":{},"modules/MidgardTranslationModule.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/CrudModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"overview.html":{}}}],["respons",{"_index":190,"title":{},"body":{"injectables/HttpService.html":{}}}],["result",{"_index":35,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retri",{"_index":196,"title":{},"body":{"injectables/HttpService.html":{}}}],["retry(3",{"_index":201,"title":{},"body":{"injectables/HttpService.html":{}}}],["return",{"_index":59,"title":{},"body":{"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["rout",{"_index":308,"title":{},"body":{"modules/MidgardRoutingModule.html":{}}}],["routermodul",{"_index":310,"title":{},"body":{"modules/MidgardRoutingModule.html":{}}}],["routermodule.forroot(midgardrout",{"_index":324,"title":{},"body":{"modules/MidgardRoutingModule.html":{}}}],["routing.modul",{"_index":297,"title":{},"body":{"modules/MidgardModule.html":{}}}],["routing.module.t",{"_index":307,"title":{},"body":{"modules/MidgardRoutingModule.html":{}}}],["row",{"_index":211,"title":{},"body":{"components/ListComponent.html":{}}}],["run",{"_index":638,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":159,"title":{},"body":{"interfaces/Http.html":{},"injectables/HttpService.html":{},"injectables/Store.html":{},"components/TranslationLoader.html":{}}}],["rxjs/internal/oper",{"_index":197,"title":{},"body":{"injectables/HttpService.html":{}}}],["rxjs/oper",{"_index":195,"title":{},"body":{"injectables/HttpService.html":{}}}],["scaffold",{"_index":647,"title":{},"body":{"index.html":{}}}],["select",{"_index":224,"title":{},"body":{"components/ListComponent.html":{},"injectables/Store.html":{},"components/WorkflowLevel1Component.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["select(this.reduc",{"_index":237,"title":{},"body":{"components/ListComponent.html":{}}}],["selector",{"_index":44,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["send",{"_index":180,"title":{},"body":{"injectables/HttpService.html":{},"modules/MidgardTranslationModule.html":{}}}],["serv",{"_index":640,"title":{},"body":{"index.html":{}}}],["server",{"_index":205,"title":{},"body":{"injectables/HttpService.html":{},"components/TranslationLoader.html":{},"index.html":{}}}],["set",{"_index":404,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["set(dataid",{"_index":420,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["setcontext",{"_index":109,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["setcontext((_",{"_index":133,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["sortabl",{"_index":554,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["sourc",{"_index":18,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["source.subscrib",{"_index":497,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["specif",{"_index":491,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environ",{"_index":114,"title":{},"body":{"modules/GraphQLModule.html":{},"modules/MidgardTranslationModule.html":{}}}],["start",{"_index":630,"title":{"index.html":{}},"body":{}}],["state",{"_index":230,"title":{},"body":{"components/ListComponent.html":{},"injectables/Store.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state[reducer][key",{"_index":499,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":270,"title":{},"body":{"modules/MidgardHttpModule.html":{},"modules/MigardStoreModule.html":{}}}],["store",{"_index":101,"title":{"injectables/Store.html":{}},"body":{"modules/GraphQLModule.html":{},"components/ListComponent.html":{},"modules/MigardStoreModule.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/WorkflowLevel1Component.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["store.observ",{"_index":487,"title":{},"body":{"injectables/Store.html":{}}}],["storeinst",{"_index":472,"title":{},"body":{"injectables/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storeinstance.getst",{"_index":496,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["storeinstance.subscrib",{"_index":450,"title":{},"body":{"injectables/Store.html":{}}}],["storeobject",{"_index":414,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["stream",{"_index":490,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":161,"title":{},"body":{"interfaces/Http.html":{},"injectables/HttpService.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TranslationLoader.html":{},"interfaces/WorkflowLevel1.html":{},"interfaces/WorkflowLevel2.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":48,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["subscrib",{"_index":239,"title":{},"body":{"components/ListComponent.html":{},"injectables/Store.html":{}}}],["subscribe((r",{"_index":547,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["success",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super(config",{"_index":378,"title":{},"body":{"classes/ReduxCache.html":{}}}],["support",{"_index":669,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":670,"title":{},"body":{"modules.html":{}}}],["switchmap((act",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabl",{"_index":225,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["tablemodul",{"_index":30,"title":{},"body":{"modules/CrudModule.html":{}}}],["tableopt",{"_index":216,"title":{},"body":{"components/ListComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":543,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["teardown",{"_index":451,"title":{},"body":{"injectables/Store.html":{}}}],["templat",{"_index":37,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["templateurl",{"_index":50,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["temporari",{"_index":137,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["test",{"_index":656,"title":{},"body":{"index.html":{}}}],["this.apollo.watchqueri",{"_index":544,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["this.broadcastwatch",{"_index":396,"title":{},"body":{"classes/ReduxCache.html":{}}}],["this.config.dataidfromobject",{"_index":392,"title":{},"body":{"classes/ReduxCache.html":{}}}],["this.config.fragmentmatcher.match",{"_index":394,"title":{},"body":{"classes/ReduxCache.html":{}}}],["this.config.storefactory(clonedeep(this.data.toobject",{"_index":383,"title":{},"body":{"classes/ReduxCache.html":{}}}],["this.data",{"_index":381,"title":{},"body":{"classes/ReduxCache.html":{}}}],["this.data.replace(data.toobject",{"_index":395,"title":{},"body":{"classes/ReduxCache.html":{}}}],["this.definetableopt",{"_index":549,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["this.endpoint}/${lang",{"_index":522,"title":{},"body":{"components/TranslationLoader.html":{}}}],["this.getreduc",{"_index":432,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["this.getreducer()[dataid",{"_index":433,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["this.handleerror(error",{"_index":203,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.makerequest('get",{"_index":521,"title":{},"body":{"components/TranslationLoader.html":{}}}],["this.loadact",{"_index":235,"title":{},"body":{"components/ListComponent.html":{}}}],["this.model",{"_index":238,"title":{},"body":{"components/ListComponent.html":{}}}],["this.reduxrootselector",{"_index":427,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["this.row",{"_index":240,"title":{},"body":{"components/ListComponent.html":{}}}],["this.stor",{"_index":430,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["this.store.dispatch",{"_index":234,"title":{},"body":{"components/ListComponent.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["this.store.getstate()[this.reduxrootselector",{"_index":435,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["this.store.observable.pip",{"_index":236,"title":{},"body":{"components/ListComponent.html":{}}}],["this.tableopt",{"_index":550,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["this.toobserv",{"_index":488,"title":{},"body":{"injectables/Store.html":{}}}],["this.transformdocument(write.queri",{"_index":390,"title":{},"body":{"classes/ReduxCache.html":{}}}],["throwerror",{"_index":193,"title":{},"body":{"injectables/HttpService.html":{}}}],["throwerror(error",{"_index":204,"title":{},"body":{"injectables/HttpService.html":{}}}],["token",{"_index":136,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/HttpService.html":{}}}],["toobject",{"_index":405,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["toobserv",{"_index":440,"title":{},"body":{"injectables/Store.html":{}}}],["top",{"_index":78,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["topbarcompon",{"_index":77,"title":{"components/TopBarComponent.html":{}},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["translat",{"_index":80,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardTranslationModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["translate.setdefaultlang('en",{"_index":261,"title":{},"body":{"components/MidgardComponent.html":{}}}],["translate.use('en",{"_index":265,"title":{},"body":{"components/MidgardComponent.html":{}}}],["translate/cor",{"_index":255,"title":{},"body":{"components/MidgardComponent.html":{},"modules/MidgardTranslationModule.html":{}}}],["translatehttpload",{"_index":344,"title":{},"body":{"modules/MidgardTranslationModule.html":{}}}],["translateload",{"_index":337,"title":{},"body":{"modules/MidgardTranslationModule.html":{}}}],["translatemodul",{"_index":338,"title":{},"body":{"modules/MidgardTranslationModule.html":{}}}],["translatemodule.forroot",{"_index":348,"title":{},"body":{"modules/MidgardTranslationModule.html":{}}}],["translateservic",{"_index":251,"title":{},"body":{"components/MidgardComponent.html":{}}}],["translationload",{"_index":79,"title":{"components/TranslationLoader.html":{}},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardTranslationModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["translationloader(httpservic",{"_index":346,"title":{},"body":{"modules/MidgardTranslationModule.html":{}}}],["tree",{"_index":39,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["true",{"_index":150,"title":{},"body":{"modules/GraphQLModule.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["type",{"_index":157,"title":{},"body":{"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/MidgardComponent.html":{},"interfaces/MidgardState.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TranslationLoader.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":677,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefin",{"_index":434,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"miscellaneous/functions.html":{}}}],["unit",{"_index":655,"title":{},"body":{"index.html":{}}}],["unsubscrib",{"_index":452,"title":{},"body":{"injectables/Store.html":{}}}],["uri",{"_index":115,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":160,"title":{},"body":{"interfaces/Http.html":{},"injectables/HttpService.html":{}}}],["us",{"_index":119,"title":{},"body":{"modules/GraphQLModule.html":{},"components/MidgardComponent.html":{},"injectables/Store.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["use_redux_cach",{"_index":148,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usefactori",{"_index":151,"title":{},"body":{"modules/GraphQLModule.html":{},"modules/MidgardTranslationModule.html":{}}}],["user",{"_index":319,"title":{},"body":{"modules/MidgardRoutingModule.html":{},"components/TopBarComponent.html":{},"components/UserComponent.html":{}}}],["user'},{'nam",{"_index":83,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["user.component.css",{"_index":524,"title":{},"body":{"components/UserComponent.html":{}}}],["user.component.html",{"_index":525,"title":{},"body":{"components/UserComponent.html":{}}}],["usercompon",{"_index":82,"title":{"components/UserComponent.html":{}},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["usereduxcach",{"_index":124,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["usevalu",{"_index":149,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["valu",{"_index":183,"title":{},"body":{"injectables/HttpService.html":{},"components/ListComponent.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["valuechang",{"_index":546,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["var",{"_index":65,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["variabl",{"_index":387,"title":{"miscellaneous/variables.html":{}},"body":{"classes/ReduxCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["verb",{"_index":184,"title":{},"body":{"injectables/HttpService.html":{}}}],["version",{"_index":635,"title":{},"body":{"index.html":{}}}],["via",{"_index":658,"title":{},"body":{"index.html":{}}}],["void",{"_index":60,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["want",{"_index":118,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["wether",{"_index":125,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["worflow",{"_index":358,"title":{},"body":{"components/NavBarComponent.html":{}}}],["work",{"_index":61,"title":{},"body":{"components/DetailComponent.html":{},"components/LoginComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel2Component.html":{}}}],["workflow",{"_index":85,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardRoutingModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["workflowlevel1",{"_index":328,"title":{"interfaces/WorkflowLevel1.html":{}},"body":{"interfaces/MidgardState.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["workflowlevel1compon",{"_index":84,"title":{"components/WorkflowLevel1Component.html":{}},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["workflowlevel2",{"_index":329,"title":{"interfaces/WorkflowLevel2.html":{}},"body":{"interfaces/MidgardState.html":{},"interfaces/WorkflowLevel2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["workflowlevel2compon",{"_index":87,"title":{"components/WorkflowLevel2Component.html":{}},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardModule.html":{},"modules/MidgardRoutingModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["write",{"_index":363,"title":{},"body":{"classes/ReduxCache.html":{}}}],["write(writ",{"_index":368,"title":{},"body":{"classes/ReduxCache.html":{}}}],["write.dataid",{"_index":385,"title":{},"body":{"classes/ReduxCache.html":{}}}],["write.result",{"_index":386,"title":{},"body":{"classes/ReduxCache.html":{}}}],["write.vari",{"_index":388,"title":{},"body":{"classes/ReduxCache.html":{}}}],["writeresulttostor",{"_index":372,"title":{},"body":{"classes/ReduxCache.html":{}}}],["ye",{"_index":629,"title":{},"body":{"miscellaneous/functions.html":{}}}],["zone.j",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/CrudModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/CrudModule.html":{"url":"modules/CrudModule.html","title":"module - CrudModule","body":"\n                   \n\n\n\n\n  Modules\n  CrudModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CrudModule\n\n\n\ncluster_CrudModule_declarations\n\n\n\ncluster_CrudModule_exports\n\n\n\n\nDetailComponent\n\nDetailComponent\n\n\n\nCrudModule\n\nCrudModule\n\nCrudModule -->\n\nDetailComponent->CrudModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nCrudModule -->\n\nListComponent->CrudModule\n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCrudModule->DetailComponent \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nCrudModule->ListComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/crud/crud.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DetailComponent\n                            \n                            \n                                ListComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DetailComponent\n                            \n                            \n                                    ListComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DetailComponent } from './detail/detail.component';\nimport { ListComponent } from '@libs/midgard-angular/src/lib/modules/crud/list/list.component';\nimport { TableModule } from '@libs/freyja/src/lib/table/table.module';\n\nconst components = [\n  ListComponent,\n  DetailComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TableModule\n  ],\n  declarations: components,\n  exports: components\n})\nexport class CrudModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailComponent.html":{"url":"components/DetailComponent.html","title":"component - DetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/modules/crud/detail/detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-crud-detail\n            \n\n            \n                styleUrls\n                detail.component.css\n            \n\n\n\n            \n                templateUrl\n                ./detail.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/modules/crud/detail/detail.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/crud/detail/detail.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mg-crud-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  detail works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  detail works!'\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLModule.html":{"url":"modules/GraphQLModule.html","title":"module - GraphQLModule","body":"\n                   \n\n\n\n\n  Modules\n  GraphQLModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/graphql/graphql.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { InjectionToken, NgModule } from '@angular/core';\nimport { ApolloModule, APOLLO_OPTIONS} from 'apollo-angular';\nimport { HttpLinkModule, HttpLink} from 'apollo-angular-link-http';\nimport { Store } from 'projects/midgard-angular/src/lib/modules/store/store';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ReduxCache } from '@libs/midgard-angular/src/lib/modules/graphql/apollo-cache-redux';\nimport { setContext } from 'apollo-link-context';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../../../../src/environments/environment';\n\nconst uri = `${environment.API_URL}/graphql`; // } store - our store in case we want to use it as graphQl cac`he\n * @param {boolean } useReduxCache - wether to use redux as graphQl cache or not\n * @returns {link: ApolloLink; cache: ReduxCache | InMemoryCache}\n */\nexport function createApollo(httpLink: HttpLink, store: Store, useReduxCache) {\n  const cache = (useReduxCache) ? new ReduxCache({store}) : new InMemoryCache();\n  const http = httpLink.create(\n      {\n        uri,\n      }\n    );\n  const auth = setContext((_, { headers }) => {\n    // get the authentication token, this is temporary hardcoded\n    const token = '94a37ce5e4a7a00f59f939fd57b0a3186db92bfd';\n    // return the headers to the context so httpLink can read them\n    // in this example we assume headers property exists\n    // and it is an instance of HttpHeaders\n    if (!token) {\n      return {};\n    } else {\n      return {\n        headers: new HttpHeaders().set('Authorization', `Token ${token}`)\n      };\n    }\n  });\n  return {\n    link: auth.concat(http),\n    cache: cache,\n  };\n}\nexport const USE_REDUX_CACHE = new InjectionToken('');\n\n@NgModule({\n  exports: [ApolloModule, HttpLinkModule],\n  providers: [\n    {\n      provide: USE_REDUX_CACHE,\n      useValue: true\n    },\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink, Store, USE_REDUX_CACHE],\n    },\n  ],\n})\nexport class GraphQLModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Http.html":{"url":"interfaces/Http.html","title":"interface - Http","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Http\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/http/types/http.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        request\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                    \n                                \n                                \n                                    \n                                        request:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface Http {\n  request: (url: string, options?: object) => Observable;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/http/http.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                makeRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/http/http.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            handles request errors\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nrequest error\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    observable of the error\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            makeRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \nmakeRequest(method: string, url: string, body: null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/http/http.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            function to send a Http request to the API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                \nHttp verb of the request (GET,POST,PUT,...)\n\n\n                                                        \n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                \nurl endpoint to send request to e.g ‘contacts’\n\n\n                                                        \n                                                \n                                                \n                                                        body\n                                                        \n                                                                    null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                        \n                                                                \ndata of the request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nresponse of the request or error\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { http } from 'midgard-core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { retry } from 'rxjs/internal/operators';\n\n@Injectable()\nexport class HttpService {\n  /**\n   * function to send a Http request to the API\n   * @param {string} method - Http verb of the request (GET,POST,PUT,...)\n   * @param {string} url - url endpoint to send request to e.g ‘contacts’\n   * @param {any} body - data of the request\n   * @returns {Observable} - response of the request or error\n   */\n  makeRequest(method: string, url: string, body = null): Observable {\n    const headers = {'Authorization' : 'Token 94a37ce5e4a7a00f59f939fd57b0a3186db92bfd'};\n    const options = {\n      method: 'get',\n      data: body,\n      headers: headers,\n    };\n    return http.request(url, options).pipe(\n      retry(3),\n      catchError((error) => this.handleError(error))\n    );\n  }\n\n  /**\n   * handles request errors\n   * @param error - request error\n   * @returns observable of the error\n   */\n  private handleError(error) {\n    if (error) {\n      return throwError(error || 'Server error');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/modules/crud/list/list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-crud-list\n            \n\n            \n                styleUrls\n                list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rows\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loadAction\n                            \n                            \n                                model\n                            \n                            \n                                reducer\n                            \n                            \n                                tableOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/modules/crud/list/list.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loadAction\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/crud/list/list.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/crud/list/list.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reducer\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/crud/list/list.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tableOptions\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/crud/list/list.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/crud/list/list.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rows:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/crud/list/list.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { select, Store } from '@libs/midgard-angular/src/lib/modules/store/store';\n\n@Component({\n  selector: 'mg-crud-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  public rows = [];\n  @Input() tableOptions; // options for the table component\n  @Input() loadAction; // redux action to load data\n  @Input() reducer; // redux reducer to get data from\n  @Input() model; // key of which value will be returned from the reducer\n\n  constructor(\n    private store: Store, // type {any} beacuse the state of the app is not fixed and can be changed depending on the modules\n  ) { }\n\n  ngOnInit() {\n    this.store.dispatch({\n      type: this.loadAction,\n    });\n    this.store.observable.pipe(\n      select(this.reducer, this.model)\n    ).subscribe( (data: any[]) => {\n      this.rows = data;\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/pages/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/pages/login/login.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/pages/login/login.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mg-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  login works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  login works!'\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MidgardComponent.html":{"url":"components/MidgardComponent.html","title":"component - MidgardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MidgardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/midgard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-midgard\n            \n\n            \n                styleUrls\n                midgard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./midgard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/midgard.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/midgard.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n\n@Component({\n  selector: 'mg-midgard',\n  templateUrl: './midgard.component.html',\n  styleUrls: ['./midgard.component.scss']\n})\nexport class MidgardComponent implements OnInit {\n\n  constructor(translate: TranslateService) {\n    // this language will be used as a fallback when a translation isn't found in the current language\n    translate.setDefaultLang('en');\n\n    // the lang to use, if the lang isn't available, it will use the current loader to get them\n    translate.use('en');\n  }\n\n  ngOnInit() {}\n\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MidgardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MidgardHttpModule.html":{"url":"modules/MidgardHttpModule.html","title":"module - MidgardHttpModule","body":"\n                   \n\n\n\n\n  Modules\n  MidgardHttpModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/http/http.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders  } from '@angular/core';\nimport { HttpService } from 'projects/midgard-angular/src/lib/modules/http/http.service';\n\n@NgModule({})\nexport class MidgardHttpModule {\n  constructor() {}\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MidgardHttpModule,\n      providers: [\n        HttpService,\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MidgardModule.html":{"url":"modules/MidgardModule.html","title":"module - MidgardModule","body":"\n                   \n\n\n\n\n  Modules\n  MidgardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MidgardModule\n\n\n\ncluster_MidgardModule_declarations\n\n\n\ncluster_MidgardModule_imports\n\n\n\ncluster_MidgardModule_exports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nMidgardModule\n\nMidgardModule\n\nMidgardModule -->\n\nLoginComponent->MidgardModule\n\n\n\n\n\nMidgardComponent\n\nMidgardComponent\n\nMidgardModule -->\n\nMidgardComponent->MidgardModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nMidgardModule -->\n\nNavBarComponent->MidgardModule\n\n\n\n\n\nTopBarComponent\n\nTopBarComponent\n\nMidgardModule -->\n\nTopBarComponent->MidgardModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nMidgardModule -->\n\nUserComponent->MidgardModule\n\n\n\n\n\nWorkflowLevel1Component\n\nWorkflowLevel1Component\n\nMidgardModule -->\n\nWorkflowLevel1Component->MidgardModule\n\n\n\n\n\nWorkflowLevel2Component\n\nWorkflowLevel2Component\n\nMidgardModule -->\n\nWorkflowLevel2Component->MidgardModule\n\n\n\n\n\nMidgardComponent \n\nMidgardComponent \n\nMidgardComponent  -->\n\nMidgardModule->MidgardComponent \n\n\n\n\n\nCrudModule\n\nCrudModule\n\nMidgardModule -->\n\nCrudModule->MidgardModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nMidgardModule -->\n\nGraphQLModule->MidgardModule\n\n\n\n\n\nMidgardHttpModule\n\nMidgardHttpModule\n\nMidgardModule -->\n\nMidgardHttpModule->MidgardModule\n\n\n\n\n\nMidgardRoutingModule\n\nMidgardRoutingModule\n\nMidgardModule -->\n\nMidgardRoutingModule->MidgardModule\n\n\n\n\n\nMidgardTranslationModule\n\nMidgardTranslationModule\n\nMidgardModule -->\n\nMidgardTranslationModule->MidgardModule\n\n\n\n\n\nMigardStoreModule\n\nMigardStoreModule\n\nMidgardModule -->\n\nMigardStoreModule->MidgardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/midgard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                            \n                                MidgardComponent\n                            \n                            \n                                NavBarComponent\n                            \n                            \n                                TopBarComponent\n                            \n                            \n                                UserComponent\n                            \n                            \n                                WorkflowLevel1Component\n                            \n                            \n                                WorkflowLevel2Component\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CrudModule\n                            \n                            \n                                    GraphQLModule\n                            \n                            \n                                    MidgardHttpModule\n                            \n                            \n                                    MidgardRoutingModule\n                            \n                            \n                                    MidgardTranslationModule\n                            \n                            \n                                    MigardStoreModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MidgardComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MidgardComponent } from './midgard.component';\nimport { WorkflowLevel1Component } from './pages/workflow-level1/workflow-level1.component';\nimport { WorkflowLevel2Component } from './pages/workflow-level2/workflow-level2.component';\nimport { UserComponent } from './pages/user/user.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { TopBarComponent } from './components/top-bar/top-bar.component';\nimport { MigardStoreModule } from '@libs/midgard-angular/src/lib/modules/store/store.module';\nimport { MidgardHttpModule } from '@libs/midgard-angular/src/lib/modules/http/http.module';\nimport { CommonModule } from '@angular/common';\nimport { MidgardRoutingModule } from '@libs/midgard-angular/src/lib/midgard-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GraphQLModule } from '@libs/midgard-angular/src/lib/modules/graphql/graphql.module';\nimport { CrudModule } from '@libs/midgard-angular/src/lib/modules/crud/crud.module';\nimport { MidgardTranslationModule } from '@libs/midgard-angular/src/lib/modules/translation/translation.module';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    CommonModule,\n    MidgardRoutingModule,\n    MigardStoreModule.forRoot(),\n    MidgardHttpModule.forRoot(),\n    MidgardTranslationModule,\n    HttpClientModule,\n    GraphQLModule,\n    CrudModule,\n  ],\n  declarations: [\n    MidgardComponent,\n    NavBarComponent,\n    WorkflowLevel1Component,\n    WorkflowLevel2Component,\n    UserComponent,\n    LoginComponent,\n    TopBarComponent,\n  ],\n  exports: [\n    MidgardComponent\n  ]\n})\nexport class MidgardModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MidgardRoutingModule.html":{"url":"modules/MidgardRoutingModule.html","title":"module - MidgardRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  MidgardRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/midgard-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { Routes } from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport { MidgardComponent } from '@libs/midgard-angular/src/lib/midgard.component';\nimport { LoginComponent } from '@libs/midgard-angular/src/lib/pages/login/login.component';\nimport { WorkflowLevel1Component } from '@libs/midgard-angular/src/lib/pages/workflow-level1/workflow-level1.component';\nimport { WorkflowLevel2Component } from '@libs/midgard-angular/src/lib/pages/workflow-level2/workflow-level2.component';\nimport { UserComponent } from '@libs/midgard-angular/src/lib/pages/user/user.component';\nimport { NgModule } from '@angular/core';\n\nconst midgardRoutes: Routes = [\n  {\n    path: '', component: MidgardComponent, children: [\n      {path: 'login', component: LoginComponent},\n      {path: 'workflow-level1', component: WorkflowLevel1Component},\n      {path: 'workflow-level2', component: WorkflowLevel2Component},\n      {path: 'user', component: UserComponent},\n      {path: 'contacts', loadChildren: '@libs/contacts/src/lib/contacts.module#ContactsModule'},\n      {path: 'products', loadChildren: '@libs/products/src/lib/products.module#ProductsModule'}\n    ],\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(midgardRoutes)],\n  exports: [RouterModule]\n})\nexport class MidgardRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MidgardState.html":{"url":"interfaces/MidgardState.html","title":"interface - MidgardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MidgardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/state/midgard.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dataLoaded\n                                \n                                \n                                        workflowLevel1\n                                \n                                \n                                        workflowLevel2\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dataLoaded\n                                    \n                                \n                                \n                                    \n                                        dataLoaded:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workflowLevel1\n                                    \n                                \n                                \n                                    \n                                        workflowLevel1:     WorkflowLevel1[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WorkflowLevel1[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workflowLevel2\n                                    \n                                \n                                \n                                    \n                                        workflowLevel2:     WorkflowLevel2[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WorkflowLevel2[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { WorkflowLevel1 } from '@libs/midgard-angular/src/lib/pages/workflow-level1/state/workflow-level1.model';\nimport { WorkflowLevel2 } from '@libs/midgard-angular/src/lib/pages/workflow-level2/state/workflow-level2.model';\n\nexport interface MidgardState {\n  workflowLevel1: WorkflowLevel1[];\n  workflowLevel2: WorkflowLevel2[];\n  dataLoaded: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MidgardTranslationModule.html":{"url":"modules/MidgardTranslationModule.html","title":"module - MidgardTranslationModule","body":"\n                   \n\n\n\n\n  Modules\n  MidgardTranslationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MidgardTranslationModule\n\n\n\ncluster_MidgardTranslationModule_declarations\n\n\n\n\nTranslationLoader\n\nTranslationLoader\n\n\n\nMidgardTranslationModule\n\nMidgardTranslationModule\n\nMidgardTranslationModule -->\n\nTranslationLoader->MidgardTranslationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/translation/translation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TranslationLoader\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpService } from '../http/http.service';\nimport { TranslationLoader } from './translation-loader/translation-loader.component';\nimport { environment } from '../../../../../../src/environments/environment';\n\n/**\n * @description loads the translations\n * @param {HttpClient} http - http client to send the request\n * @returns {TranslateHttpLoader}\n */\nexport function createTranslateLoader(httpService: HttpService) {\n  return new TranslationLoader(httpService, `${environment.API_URL}/i18n/`);\n}\n\n@NgModule({\n  imports: [\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpService]\n      }\n    }),\n  ],\n  declarations: [TranslationLoader],\n})\nexport class MidgardTranslationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MigardStoreModule.html":{"url":"modules/MigardStoreModule.html","title":"module - MigardStoreModule","body":"\n                   \n\n\n\n\n  Modules\n  MigardStoreModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/store/store.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders  } from '@angular/core';\nimport { Store } from 'projects/midgard-angular/src/lib/modules/store/store';\n\n@NgModule({})\nexport class MigardStoreModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MigardStoreModule,\n      providers: [\n        Store,\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarComponent.html":{"url":"components/NavBarComponent.html","title":"component - NavBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/components/nav-bar/nav-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-nav-bar\n            \n\n            \n                styleUrls\n                nav-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-bar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/components/nav-bar/nav-bar.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/components/nav-bar/nav-bar.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mg-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      Worflow Level1\n    \n  \n  \n    \n      \n      Worflow Level 2\n    \n  \n\n  \n    \n    Contacts\n  Products\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Worflow Level1                        Worflow Level 2                Contacts  Products'\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReduxCache.html":{"url":"classes/ReduxCache.html","title":"class - ReduxCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReduxCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxCache.ts\n        \n\n\n            \n                Extends\n            \n            \n                    InMemoryCache\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ReduxCacheConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxCache.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ReduxCacheConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            write\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        write(write: Cache.WriteOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxCache.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        write\n                                                        \n                                                                    Cache.WriteOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Cache,\n} from 'apollo-cache';\nimport {\n    ApolloReducerConfig,\n    InMemoryCache,\n    writeResultToStore\n} from 'apollo-cache-inmemory';\n\nimport {\n    ReduxNormalizedCacheConfig,\n    reduxNormalizedCacheFactory\n} from './reduxNormalizedCache';\nimport {cloneDeep} from 'lodash';\n\nexport type ReduxCacheConfig = ApolloReducerConfig & ReduxNormalizedCacheConfig;\n\nexport class ReduxCache extends InMemoryCache {\n    constructor(config: ReduxCacheConfig) {\n        super(config);\n        // Overwrite the in-memory data object\n        this.data = reduxNormalizedCacheFactory(config);\n    }\n\n    public write(write: Cache.WriteOptions): void {\n        const data = this.config.storeFactory(cloneDeep(this.data.toObject()));\n\n        writeResultToStore({\n            dataId: write.dataId,\n            result: write.result,\n            variables: write.variables,\n            document: this.transformDocument(write.query),\n            store: data,\n            dataIdFromObject: this.config.dataIdFromObject,\n            fragmentMatcherFunction: this.config.fragmentMatcher.match,\n        });\n\n\n        this.data.replace(data.toObject());\n        this.broadcastWatches();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReduxNormalizedCache.html":{"url":"classes/ReduxNormalizedCache.html","title":"class - ReduxNormalizedCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReduxNormalizedCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        NormalizedCache\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                reduxRootSelector\n                            \n                            \n                                    Private\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Private\n                                getReducer\n                            \n                            \n                                    Public\n                                replace\n                            \n                            \n                                    Public\n                                set\n                            \n                            \n                                    Public\n                                toObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reduxCacheConfig: ReduxNormalizedCacheConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reduxCacheConfig\n                                                  \n                                                        \n                                                                    ReduxNormalizedCacheConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            reduxRootSelector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reduxRootSelector:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            store\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        store:     Store\n\n                    \n                \n                    \n                        \n                            Type :     Store\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        delete(dataId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(dataId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     StoreObject\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getReducer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            replace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        replace(newData: NormalizedCacheObject)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newData\n                                                        \n                                                                    NormalizedCacheObject\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(dataId: string, value: StoreObject)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    StoreObject\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toObject()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     NormalizedCacheObject\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    NormalizedCache,\n    NormalizedCacheObject,\n    StoreObject\n} from 'apollo-cache-inmemory';\nimport {\n    APOLLO_OVERWRITE,\n    APOLLO_RESET,\n    APOLLO_WRITE\n} from './constants';\nimport { Store } from '@libs/midgard-angular/src/lib/modules/store/store';\n\nexport interface ReduxNormalizedCacheConfig {\n    reduxRootSelector?: string;\n    store: Store;\n}\n\nexport class ReduxNormalizedCache implements NormalizedCache {\n    private store: Store;\n    private reduxRootSelector: string;\n\n    constructor(reduxCacheConfig: ReduxNormalizedCacheConfig) {\n        this.reduxRootSelector = reduxCacheConfig.reduxRootSelector || 'apolloReducer';\n        this.store = reduxCacheConfig.store;\n    }\n    public toObject(): NormalizedCacheObject {\n        return this.getReducer();\n    }\n    public get(dataId: string): StoreObject {\n        return this.getReducer()[dataId];\n    }\n    public set(dataId: string, value: StoreObject) {\n        this.store.dispatch({\n            type: APOLLO_WRITE,\n            data: { [dataId]: value }\n        });\n    }\n    public delete(dataId: string): void {\n        this.store.dispatch({\n            type: APOLLO_WRITE,\n            data: { [dataId]: undefined }\n        });\n    }\n    public clear(): void {\n        this.store.dispatch({\n            type: APOLLO_RESET,\n        });\n    }\n    public replace(newData: NormalizedCacheObject): void {\n        const data = newData || {};\n        this.store.dispatch({\n            type: APOLLO_OVERWRITE,\n            data\n        });\n    }\n    private getReducer(): any {\n        return this.store.getState()[this.reduxRootSelector];\n    }\n}\n\nexport function reduxNormalizedCacheFactory(\n    reduxCacheConfig?: ReduxNormalizedCacheConfig\n): NormalizedCache {\n    return new ReduxNormalizedCache(reduxCacheConfig);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReduxNormalizedCacheConfig.html":{"url":"interfaces/ReduxNormalizedCacheConfig.html","title":"interface - ReduxNormalizedCacheConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReduxNormalizedCacheConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        reduxRootSelector\n                                \n                                \n                                        store\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        reduxRootSelector\n                                    \n                                \n                                \n                                    \n                                        reduxRootSelector:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        store\n                                    \n                                \n                                \n                                    \n                                        store:     Store\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Store\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    NormalizedCache,\n    NormalizedCacheObject,\n    StoreObject\n} from 'apollo-cache-inmemory';\nimport {\n    APOLLO_OVERWRITE,\n    APOLLO_RESET,\n    APOLLO_WRITE\n} from './constants';\nimport { Store } from '@libs/midgard-angular/src/lib/modules/store/store';\n\nexport interface ReduxNormalizedCacheConfig {\n    reduxRootSelector?: string;\n    store: Store;\n}\n\nexport class ReduxNormalizedCache implements NormalizedCache {\n    private store: Store;\n    private reduxRootSelector: string;\n\n    constructor(reduxCacheConfig: ReduxNormalizedCacheConfig) {\n        this.reduxRootSelector = reduxCacheConfig.reduxRootSelector || 'apolloReducer';\n        this.store = reduxCacheConfig.store;\n    }\n    public toObject(): NormalizedCacheObject {\n        return this.getReducer();\n    }\n    public get(dataId: string): StoreObject {\n        return this.getReducer()[dataId];\n    }\n    public set(dataId: string, value: StoreObject) {\n        this.store.dispatch({\n            type: APOLLO_WRITE,\n            data: { [dataId]: value }\n        });\n    }\n    public delete(dataId: string): void {\n        this.store.dispatch({\n            type: APOLLO_WRITE,\n            data: { [dataId]: undefined }\n        });\n    }\n    public clear(): void {\n        this.store.dispatch({\n            type: APOLLO_RESET,\n        });\n    }\n    public replace(newData: NormalizedCacheObject): void {\n        const data = newData || {};\n        this.store.dispatch({\n            type: APOLLO_OVERWRITE,\n            data\n        });\n    }\n    private getReducer(): any {\n        return this.store.getState()[this.reduxRootSelector];\n    }\n}\n\nexport function reduxNormalizedCacheFactory(\n    reduxCacheConfig?: ReduxNormalizedCacheConfig\n): NormalizedCache {\n    return new ReduxNormalizedCache(reduxCacheConfig);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Store.html":{"url":"injectables/Store.html","title":"injectable - Store","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Store\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/store/store.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                            \n                                getState\n                            \n                            \n                                    Public\n                                observable\n                            \n                            \n                                subscribe\n                            \n                            \n                                toObservable\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/modules/store/store.ts:18\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dispatch:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/store/store.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getState:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/store/store.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            observable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        observable:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/store/store.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscribe:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/store/store.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toObservable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toObservable:     \n\n                    \n                \n                    \n                        \n                            Default value : (): Observable => {\n    return Observable.create(observer => {\n      observer.next(storeInstance.getState()); // emits the inital value\n\n      const dispose = storeInstance.subscribe(() => {\n        observer.next(storeInstance.getState());\n      });\n      return dispose; // teardown function to unsubscribe to the observable\n    });\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/store/store.ts:56\n                            \n                        \n\n                \n                    \n                        converts redux store to an Observable\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        store\n                                                        \n                                                                \nthe redux store to be converted to observable\n\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { redux } from 'midgard-core';\nimport { combineEpics, createEpicMiddleware } from 'redux-observable';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { midgardEpics } from '@libs/midgard-angular/src/lib/state/midgard.epics';\nimport { midgardReducer } from '@libs/midgard-angular/src/lib/state/midgard.reducer';\nimport { Observable } from 'rxjs';\nimport { apolloReducer } from '@libs/midgard-angular/src/lib/modules/graphql/apollo-cache-redux';\nimport { contactsReducer } from '@libs/contacts/src/lib/state/contacts.reducer';\nimport { contactsEpics } from '@libs/contacts/src/lib/state/contacts.epics';\nimport { productsReducer } from '@libs/products/src/lib/state/products.reducer';\nimport { productsEpics } from '@libs/products/src/lib/state/products.epics';\n\nlet storeInstance: Store;\n\n@Injectable()\nexport class Store {\n  public observable: Observable; // observable store\n  constructor() {\n    const reducers = {\n      apolloReducer,\n      midgardReducer,\n      contactsReducer,\n      productsReducer\n    };\n    const epics = [\n      midgardEpics,\n      contactsEpics,\n      productsEpics\n    ];\n    const combinedReducers = redux.combineReducers(reducers); // combine the reducers to a reducer that can be used when creating the store\n    const combinedEpics = combineEpics(...epics); // combine redux-observable epics\n    const epicMiddleware = createEpicMiddleware(); // create an instance of redux-observable middleware\n    const store = redux.createStore(\n      combinedReducers,\n      composeWithDevTools(\n        redux.applyMiddleware(epicMiddleware),\n        // other store enhancers if any\n      )\n    );\n    epicMiddleware.run(combinedEpics); // activate redux-observable epics\n    store.observable = this.toObservable();\n    storeInstance = store;\n    return store;\n  }\n\n  subscribe: (listener: () => void) => {};\n  dispatch: (action: any) => {};\n  getState: () => any;\n\n  /**\n   * converts redux store to an Observable\n   * @param {Store} store - the redux store to be converted to observable\n   * @returns {Observable}\n   */\n  toObservable = (): Observable => {\n    return Observable.create(observer => {\n      observer.next(storeInstance.getState()); // emits the inital value\n\n      const dispose = storeInstance.subscribe(() => {\n        observer.next(storeInstance.getState());\n      });\n      return dispose; // teardown function to unsubscribe to the observable\n    });\n  }\n}\n\n/**\n * a function that returns a stream of the state of a specific reducer and key\n * @param {string} reducer - the reducer of the state to be selected\n * @param {string} key - key of which value will be returned\n * @param {object} oldState - the state before changes happen\n * @returns {(source: Observable) => Observable}\n */\nexport const select = (reducer: string, key: string) => (source: Observable) =>\n  new Observable(observer => {\n    const oldState = storeInstance.getState();\n    return source.subscribe({\n      next(state: any) {\n        // emit value only when the state of the selected property is changed\n        if (state[reducer][key] !== oldState[reducer][key]) {\n          observer.next(state[reducer][key]);\n        }\n      },\n      error(err) { observer.error(err); },\n      complete() { observer.complete(); }\n    });\n  });\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopBarComponent.html":{"url":"components/TopBarComponent.html","title":"component - TopBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/components/top-bar/top-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-top-bar\n            \n\n            \n                styleUrls\n                top-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./top-bar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/components/top-bar/top-bar.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/components/top-bar/top-bar.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mg-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.scss']\n})\nexport class TopBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  Logo\n  User Profile\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Logo  User Profile'\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TranslationLoader.html":{"url":"components/TranslationLoader.html","title":"component - TranslationLoader","body":"\n                   \n\n\n\n\n\n  Components\n  TranslationLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/modules/translation/translation-loader/translation-loader.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-translation-loader\n            \n\n            \n                styleUrls\n                translation-loader.component.css\n            \n\n\n\n            \n                templateUrl\n                ./translation-loader.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                endpoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, endpoint: string)\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/modules/translation/translation-loader/translation-loader.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endpoint\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTranslation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTranslation(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/translation/translation-loader/translation-loader.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Gets the translations from the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endpoint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endpoint:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/translation/translation-loader/translation-loader.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { HttpService } from '../../http/http.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'mg-translation-loader',\n  templateUrl: './translation-loader.component.html',\n  styleUrls: ['./translation-loader.component.css']\n})\nexport class TranslationLoader {\n\n  constructor(private http: HttpService, public endpoint: string) {}\n\n  /**\n   * Gets the translations from the server\n   */\n  public getTranslation(lang: string): Observable {\n    return this.http.makeRequest('get', `${this.endpoint}/${lang}`);\n  }\n}\n\n    \n\n    \n        \n  translation-loader works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  translation-loader works!'\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TranslationLoader'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/pages/user/user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-user\n            \n\n            \n                styleUrls\n                user.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/pages/user/user.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/pages/user/user.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mg-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  user works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  user works!'\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkflowLevel1.html":{"url":"interfaces/WorkflowLevel1.html","title":"interface - WorkflowLevel1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WorkflowLevel1\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/pages/workflow-level1/state/workflow-level1.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        create_date\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create_date\n                                    \n                                \n                                \n                                    \n                                        create_date:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WorkflowLevel1 {\n  id: number;\n  name: string;\n  type: string;\n  create_date: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkflowLevel1Component.html":{"url":"components/WorkflowLevel1Component.html","title":"component - WorkflowLevel1Component","body":"\n                   \n\n\n\n\n\n  Components\n  WorkflowLevel1Component\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/pages/workflow-level1/workflow-level1.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-workflow-level1\n            \n\n            \n                styleUrls\n                workflow-level1.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./workflow-level1.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tableOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineTableOptions\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apollo: Apollo)\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/pages/workflow-level1/workflow-level1.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apollo\n                                                  \n                                                        \n                                                                    Apollo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defineTableOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        defineTableOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/pages/workflow-level1/workflow-level1.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/pages/workflow-level1/workflow-level1.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tableOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/pages/workflow-level1/workflow-level1.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@libs/midgard-angular/src/lib/modules/store/store';\nimport { loadWorkflowLevel1Data } from '@libs/midgard-angular/src/lib/state/midgard.actions';\nimport { WorkflowLevel1 } from '@libs/midgard-angular/src/lib/pages/workflow-level1/state/workflow-level1.model';\nimport gql from 'graphql-tag';\nimport { Apollo } from 'apollo-angular';\n\n@Component({\n  selector: 'mg-workflow-level1',\n  templateUrl: './workflow-level1.component.html',\n  styleUrls: ['./workflow-level1.component.scss']\n})\nexport class WorkflowLevel1Component implements OnInit {\n\n  public tableOptions;\n\n  constructor(\n    private apollo: Apollo\n  ) { }\n\n  ngOnInit() {\n    // graphQl example\n    this.apollo.watchQuery({\n      query: gql`\n        {\n          workflowlevel1s {\n            id\n            name\n          }\n        }\n      `\n    })\n    .valueChanges\n    .subscribe((res: any) => {\n      console.log('graphQL data');\n    });\n    this.defineTableOptions();\n  }\n\n  private defineTableOptions() {\n    this.tableOptions = {\n      columns: [\n        {name: 'Name', prop: 'name', flex: 2, sortable: true, filtering: true},\n        {name: 'Type', prop: 'type', flex: 2, sortable: true},\n        {name: 'Date Created', prop: 'create_date', index: 1, flex: 1, cellTemplate: 'date', sortable: true}\n      ]\n    };\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WorkflowLevel1Component'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkflowLevel2.html":{"url":"interfaces/WorkflowLevel2.html","title":"interface - WorkflowLevel2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WorkflowLevel2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/pages/workflow-level2/state/workflow-level2.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WorkflowLevel2 {\n  id: number;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkflowLevel2Component.html":{"url":"components/WorkflowLevel2Component.html","title":"component - WorkflowLevel2Component","body":"\n                   \n\n\n\n\n\n  Components\n  WorkflowLevel2Component\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/pages/workflow-level2/workflow-level2.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-workflow-level2\n            \n\n            \n                styleUrls\n                workflow-level2.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./workflow-level2.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tableOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineTableOptions\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/pages/workflow-level2/workflow-level2.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defineTableOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        defineTableOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/pages/workflow-level2/workflow-level2.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/pages/workflow-level2/workflow-level2.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tableOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/pages/workflow-level2/workflow-level2.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mg-workflow-level2',\n  templateUrl: './workflow-level2.component.html',\n  styleUrls: ['./workflow-level2.component.scss']\n})\nexport class WorkflowLevel2Component implements OnInit {\n  public tableOptions;\n  constructor() {}\n\n  ngOnInit() {\n    this.defineTableOptions();\n  }\n  private defineTableOptions() {\n    this.tableOptions = {\n      columns: [\n        {name: 'Name', prop: 'name', flex: 2, sortable: true},\n        {name: 'Type', prop: 'type', flex: 2, sortable: true},\n        {name: 'Date Created', prop: 'create_date', index: 1, flex: 1, cellTemplate: 'date', sortable: true}\n      ]\n    };\n  }\n\n}\n\n    \n\n    \n        \n  workflow-level2 works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  workflow-level2 works!'\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WorkflowLevel2Component'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/midgard-angular/src/lib/components/nav-bar/nav-bar.component.ts\n            \n            \n                component\n            \n            \n                NavBarComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/components/top-bar/top-bar.component.ts\n            \n            \n                component\n            \n            \n                TopBarComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/midgard.component.ts\n            \n            \n                component\n            \n            \n                MidgardComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/crud/crud.module.ts\n            \n            \n                variable\n            \n            \n                components\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/crud/detail/detail.component.ts\n            \n            \n                component\n            \n            \n                DetailComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/crud/list/list.component.ts\n            \n            \n                component\n            \n            \n                ListComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/constants.ts\n            \n            \n                variable\n            \n            \n                APOLLO_OVERWRITE\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/constants.ts\n            \n            \n                variable\n            \n            \n                APOLLO_RESET\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/constants.ts\n            \n            \n                variable\n            \n            \n                APOLLO_WRITE\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reducer.ts\n            \n            \n                function\n            \n            \n                apolloReducer\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reducer.ts\n            \n            \n                variable\n            \n            \n                initialState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxCache.ts\n            \n            \n                class\n            \n            \n                ReduxCache\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts\n            \n            \n                class\n            \n            \n                ReduxNormalizedCache\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts\n            \n            \n                interface\n            \n            \n                ReduxNormalizedCacheConfig\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts\n            \n            \n                function\n            \n            \n                reduxNormalizedCacheFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/graphql.module.ts\n            \n            \n                function\n            \n            \n                createApollo\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/graphql.module.ts\n            \n            \n                variable\n            \n            \n                uri\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/graphql.module.ts\n            \n            \n                variable\n            \n            \n                USE_REDUX_CACHE\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/http/http.service.ts\n            \n            \n                injectable\n            \n            \n                HttpService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/http/types/http.ts\n            \n            \n                interface\n            \n            \n                Http\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/store/store.ts\n            \n            \n                injectable\n            \n            \n                Store\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/store/store.ts\n            \n            \n                variable\n            \n            \n                select\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/store/store.ts\n            \n            \n                variable\n            \n            \n                storeInstance\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/translation/translation-loader/translation-loader.component.ts\n            \n            \n                component\n            \n            \n                TranslationLoader\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/translation/translation.module.ts\n            \n            \n                function\n            \n            \n                createTranslateLoader\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/pages/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/pages/user/user.component.ts\n            \n            \n                component\n            \n            \n                UserComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/pages/workflow-level1/state/workflow-level1.model.ts\n            \n            \n                interface\n            \n            \n                WorkflowLevel1\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/pages/workflow-level1/workflow-level1.component.ts\n            \n            \n                component\n            \n            \n                WorkflowLevel1Component\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/pages/workflow-level2/state/workflow-level2.model.ts\n            \n            \n                interface\n            \n            \n                WorkflowLevel2\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/pages/workflow-level2/workflow-level2.component.ts\n            \n            \n                component\n            \n            \n                WorkflowLevel2Component\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                function\n            \n            \n                loadWorkflowLevel1Data\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                function\n            \n            \n                loadWorkflowLevel1DataCommit\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                function\n            \n            \n                loadWorkflowLevel1DataFail\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                function\n            \n            \n                loadWorkflowLevel2Data\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                function\n            \n            \n                loadWorkflowLevel2DataCommit\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                function\n            \n            \n                loadWorkflowLevel2DataFail\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                variable\n            \n            \n                LOAD_DATA_WORKFLOWLEVEL1\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                variable\n            \n            \n                LOAD_DATA_WORKFLOWLEVEL1_COMMIT\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                variable\n            \n            \n                LOAD_DATA_WORKFLOWLEVEL1_FAIL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                variable\n            \n            \n                LOAD_DATA_WORKFLOWLEVEL2\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                variable\n            \n            \n                LOAD_DATA_WORKFLOWLEVEL2_COMMIT\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                variable\n            \n            \n                LOAD_DATA_WORKFLOWLEVEL2_FAIL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.epics.ts\n            \n            \n                variable\n            \n            \n                httpService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.epics.ts\n            \n            \n                variable\n            \n            \n                loadWorkflowLevel1DataEpic\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.epics.ts\n            \n            \n                variable\n            \n            \n                loadWorkflowLevel2DataEpic\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.epics.ts\n            \n            \n                variable\n            \n            \n                midgardEpics\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.model.ts\n            \n            \n                interface\n            \n            \n                MidgardState\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.reducer.ts\n            \n            \n                function\n            \n            \n                midgardReducer\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.reducer.ts\n            \n            \n                variable\n            \n            \n                initialState\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/common : ^6.1.10\n        \n            @angular/compiler : ^6.1.10\n        \n            @angular/core : ^6.1.10\n        \n            @angular/forms : ^6.1.10\n        \n            @angular/http : ^6.1.10\n        \n            @angular/platform-browser : ^6.1.10\n        \n            @angular/platform-browser-dynamic : ^6.1.10\n        \n            @angular/router : ^6.1.10\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apolloReducer   (projects/.../reducer.ts)\n                        \n                        \n                            createApollo   (projects/.../graphql.module.ts)\n                        \n                        \n                            createTranslateLoader   (projects/.../translation.module.ts)\n                        \n                        \n                            loadWorkflowLevel1Data   (projects/.../midgard.actions.ts)\n                        \n                        \n                            loadWorkflowLevel1DataCommit   (projects/.../midgard.actions.ts)\n                        \n                        \n                            loadWorkflowLevel1DataFail   (projects/.../midgard.actions.ts)\n                        \n                        \n                            loadWorkflowLevel2Data   (projects/.../midgard.actions.ts)\n                        \n                        \n                            loadWorkflowLevel2DataCommit   (projects/.../midgard.actions.ts)\n                        \n                        \n                            loadWorkflowLevel2DataFail   (projects/.../midgard.actions.ts)\n                        \n                        \n                            midgardReducer   (projects/.../midgard.reducer.ts)\n                        \n                        \n                            reduxNormalizedCacheFactory   (projects/.../reduxNormalizedCache.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            apolloReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \napolloReducer(state: , action: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/midgard-angular/src/lib/modules/graphql/graphql.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createApollo\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateApollo(httpLink: undefined, store: undefined, useReduxCache: )\n                    \n                \n\n\n\n\n                \n                    \n                            a function that will intialiase apollo graphQl client\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpLink\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        store\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nour store in case we want to use it as graphQl cac`he\n@param {boolean } useReduxCache - wether to use redux as graphQl cache or not\n@returns {link: ApolloLink; cache: ReduxCache | InMemoryCache}\n*\n\n\n\n\n                                                        \n                                                \n                                                \n                                                        useReduxCache\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/midgard-angular/src/lib/modules/translation/translation.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTranslateLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTranslateLoader(httpService: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/midgard-angular/src/lib/state/midgard.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loadWorkflowLevel1Data\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWorkflowLevel1Data()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWorkflowLevel1DataCommit\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWorkflowLevel1DataCommit(data: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWorkflowLevel1DataFail\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWorkflowLevel1DataFail(error: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWorkflowLevel2Data\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWorkflowLevel2Data()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWorkflowLevel2DataCommit\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWorkflowLevel2DataCommit(data: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWorkflowLevel2DataFail\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWorkflowLevel2DataFail(error: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/midgard-angular/src/lib/state/midgard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            midgardReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nmidgardReducer(state: , action: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reduxNormalizedCacheFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nreduxNormalizedCacheFactory(reduxCacheConfig?: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reduxCacheConfig\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMidgardApp\nThis project was generated with Angular CLI version 6.1.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CrudModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MidgardHttpModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MidgardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MidgardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MidgardTranslationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MigardStoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CrudModule\n\n\n\ncluster_CrudModule_declarations\n\n\n\ncluster_CrudModule_exports\n\n\n\ncluster_MidgardModule\n\n\n\ncluster_MidgardModule_declarations\n\n\n\ncluster_MidgardModule_imports\n\n\n\ncluster_MidgardModule_exports\n\n\n\ncluster_MidgardTranslationModule\n\n\n\ncluster_MidgardTranslationModule_declarations\n\n\n\n\nDetailComponent\n\nDetailComponent\n\n\n\nCrudModule\n\nCrudModule\n\nCrudModule -->\n\nDetailComponent->CrudModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nCrudModule -->\n\nListComponent->CrudModule\n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCrudModule->DetailComponent \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nCrudModule->ListComponent \n\n\n\n\n\nMidgardModule\n\nMidgardModule\n\nMidgardModule -->\n\nCrudModule->MidgardModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nMidgardModule -->\n\nLoginComponent->MidgardModule\n\n\n\n\n\nMidgardComponent\n\nMidgardComponent\n\nMidgardModule -->\n\nMidgardComponent->MidgardModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nMidgardModule -->\n\nNavBarComponent->MidgardModule\n\n\n\n\n\nTopBarComponent\n\nTopBarComponent\n\nMidgardModule -->\n\nTopBarComponent->MidgardModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nMidgardModule -->\n\nUserComponent->MidgardModule\n\n\n\n\n\nWorkflowLevel1Component\n\nWorkflowLevel1Component\n\nMidgardModule -->\n\nWorkflowLevel1Component->MidgardModule\n\n\n\n\n\nWorkflowLevel2Component\n\nWorkflowLevel2Component\n\nMidgardModule -->\n\nWorkflowLevel2Component->MidgardModule\n\n\n\n\n\nMidgardComponent \n\nMidgardComponent \n\nMidgardComponent  -->\n\nMidgardModule->MidgardComponent \n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nMidgardModule -->\n\nGraphQLModule->MidgardModule\n\n\n\n\n\nMidgardHttpModule\n\nMidgardHttpModule\n\nMidgardModule -->\n\nMidgardHttpModule->MidgardModule\n\n\n\n\n\nMidgardRoutingModule\n\nMidgardRoutingModule\n\nMidgardModule -->\n\nMidgardRoutingModule->MidgardModule\n\n\n\n\n\nMidgardTranslationModule\n\nMidgardTranslationModule\n\nMidgardModule -->\n\nMidgardTranslationModule->MidgardModule\n\n\n\n\n\nMigardStoreModule\n\nMigardStoreModule\n\nMidgardModule -->\n\nMigardStoreModule->MidgardModule\n\n\n\n\n\nTranslationLoader\n\nTranslationLoader\n\nMidgardTranslationModule -->\n\nTranslationLoader->MidgardTranslationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ReduxCacheConfig   (projects/.../reduxCache.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxCache.ts\n    \n        \n            \n                \n                    \n                        \n                        ReduxCacheConfig\n                    \n                \n                \n                    \n                        ReduxCacheConfig:     \n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APOLLO_OVERWRITE   (projects/.../constants.ts)\n                        \n                        \n                            APOLLO_RESET   (projects/.../constants.ts)\n                        \n                        \n                            APOLLO_WRITE   (projects/.../constants.ts)\n                        \n                        \n                            components   (projects/.../crud.module.ts)\n                        \n                        \n                            httpService   (projects/.../midgard.epics.ts)\n                        \n                        \n                            initialState   (projects/.../midgard.reducer.ts)\n                        \n                        \n                            initialState   (projects/.../reducer.ts)\n                        \n                        \n                            LOAD_DATA_WORKFLOWLEVEL1   (projects/.../midgard.actions.ts)\n                        \n                        \n                            LOAD_DATA_WORKFLOWLEVEL1_COMMIT   (projects/.../midgard.actions.ts)\n                        \n                        \n                            LOAD_DATA_WORKFLOWLEVEL1_FAIL   (projects/.../midgard.actions.ts)\n                        \n                        \n                            LOAD_DATA_WORKFLOWLEVEL2   (projects/.../midgard.actions.ts)\n                        \n                        \n                            LOAD_DATA_WORKFLOWLEVEL2_COMMIT   (projects/.../midgard.actions.ts)\n                        \n                        \n                            LOAD_DATA_WORKFLOWLEVEL2_FAIL   (projects/.../midgard.actions.ts)\n                        \n                        \n                            loadWorkflowLevel1DataEpic   (projects/.../midgard.epics.ts)\n                        \n                        \n                            loadWorkflowLevel2DataEpic   (projects/.../midgard.epics.ts)\n                        \n                        \n                            midgardEpics   (projects/.../midgard.epics.ts)\n                        \n                        \n                            select   (projects/.../store.ts)\n                        \n                        \n                            storeInstance   (projects/.../store.ts)\n                        \n                        \n                            uri   (projects/.../graphql.module.ts)\n                        \n                        \n                            USE_REDUX_CACHE   (projects/.../graphql.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            APOLLO_OVERWRITE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        APOLLO_OVERWRITE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'APOLLO_OVERWRITE'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            APOLLO_RESET\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        APOLLO_RESET:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'APOLLO_RESET'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            APOLLO_WRITE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        APOLLO_WRITE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'APOLLO_WRITE'\n                        \n                    \n\n\n            \n        \n\n    projects/midgard-angular/src/lib/modules/crud/crud.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ListComponent,\n  DetailComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/midgard-angular/src/lib/state/midgard.epics.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpService:     \n\n                    \n                \n                    \n                        \n                            Default value : new HttpService()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWorkflowLevel1DataEpic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadWorkflowLevel1DataEpic:     \n\n                    \n                \n                    \n                        \n                            Default value : action$ => {\n  return action$.pipe(\n    ofType(LOAD_DATA_WORKFLOWLEVEL1),\n    switchMap((action: any) => {\n      return httpService.makeRequest('get', `${environment.API_URL}/workflowlevel1/`).pipe(\n        // If successful, dispatch success action with result\n        map(res => loadWorkflowLevel1DataCommit(res.data)),\n        // If request fails, dispatch failed action\n        catchError((error) => of(loadWorkflowLevel1DataFail(error)))\n      );\n    })\n  );\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWorkflowLevel2DataEpic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadWorkflowLevel2DataEpic:     \n\n                    \n                \n                    \n                        \n                            Default value : action$ => {\n  return action$.pipe(\n    ofType(LOAD_DATA_WORKFLOWLEVEL2),\n    switchMap((action: any) => {\n      return httpService.makeRequest('get', `${environment.API_URL}/workflowlevel2/`).pipe(\n        // If successful, dispatch success action with result\n        map(res => loadWorkflowLevel2DataCommit(res.data)),\n        // If request fails, dispatch failed action\n        catchError((error) => of(loadWorkflowLevel2DataFail(error)))\n      );\n    })\n  );\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            midgardEpics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        midgardEpics:     \n\n                    \n                \n                    \n                        \n                            Default value : combineEpics(loadWorkflowLevel1DataEpic, loadWorkflowLevel2DataEpic)\n                        \n                    \n\n\n            \n        \n\n    projects/midgard-angular/src/lib/state/midgard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialState:     MidgardState\n\n                    \n                \n                    \n                        \n                            Type :     MidgardState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  workflowLevel1: [],\n  workflowLevel2: [],\n  dataLoaded: false\n}\n                        \n                    \n\n\n            \n        \n\n    projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialState:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n\n\n            \n        \n\n    projects/midgard-angular/src/lib/state/midgard.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOAD_DATA_WORKFLOWLEVEL1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOAD_DATA_WORKFLOWLEVEL1:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LOAD_DATA_WORKFLOWLEVEL1'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOAD_DATA_WORKFLOWLEVEL1_COMMIT\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOAD_DATA_WORKFLOWLEVEL1_COMMIT:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LOAD_DATA_WORKFLOWLEVEL1_COMMIT'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOAD_DATA_WORKFLOWLEVEL1_FAIL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOAD_DATA_WORKFLOWLEVEL1_FAIL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LOAD_DATA_WORKFLOWLEVEL1_FAIL'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOAD_DATA_WORKFLOWLEVEL2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOAD_DATA_WORKFLOWLEVEL2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LOAD_DATA_WORKFLOWLEVEL2'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOAD_DATA_WORKFLOWLEVEL2_COMMIT\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOAD_DATA_WORKFLOWLEVEL2_COMMIT:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LOAD_DATA_WORKFLOWLEVEL2_COMMIT'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOAD_DATA_WORKFLOWLEVEL2_FAIL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOAD_DATA_WORKFLOWLEVEL2_FAIL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LOAD_DATA_WORKFLOWLEVEL2_FAIL'\n                        \n                    \n\n\n            \n        \n\n    projects/midgard-angular/src/lib/modules/store/store.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        select:     \n\n                    \n                \n                    \n                        \n                            Default value : (reducer: string, key: string) => (source: Observable) =>\n  new Observable(observer => {\n    const oldState = storeInstance.getState();\n    return source.subscribe({\n      next(state: any) {\n        // emit value only when the state of the selected property is changed\n        if (state[reducer][key] !== oldState[reducer][key]) {\n          observer.next(state[reducer][key]);\n        }\n      },\n      error(err) { observer.error(err); },\n      complete() { observer.complete(); }\n    });\n  })\n                        \n                    \n\n                \n                    \n                        a function that returns a stream of the state of a specific reducer and key\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        storeInstance:     Store\n\n                    \n                \n                    \n                        \n                            Type :     Store\n\n                        \n                    \n\n\n            \n        \n\n    projects/midgard-angular/src/lib/modules/graphql/graphql.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uri:     \n\n                    \n                \n                    \n                        \n                            Default value : `${environment.API_URL}/graphql`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USE_REDUX_CACHE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        USE_REDUX_CACHE:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('')\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
