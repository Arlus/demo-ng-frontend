var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/modules/CrudModule.html",[0,0.744,1,1.876]],["body/modules/CrudModule.html",[0,1.104,1,3.683,2,1.767,3,0.996,4,3.439,5,2.365,6,1.767,7,0.449,8,3.052,9,3.052,10,3.052,11,1.6,12,0.031,13,1.6,14,3.088,15,2.365,16,2.13,17,0.336,18,0.248,19,0.248,20,0.166,21,2.658,22,0.709,23,2.526,24,0.65,25,3.986,26,2.658,27,3.649,28,1.491,29,3.649,30,4.766,31,3.649,32,1.621,33,0.489,34,0.336,35,0.023,36,0.023]],["title/components/DetailComponent.html",[11,0.809,33,0.296]],["body/components/DetailComponent.html",[3,0.894,7,0.261,11,1.356,12,0.031,13,0.824,17,0.302,18,0.223,19,0.223,20,0.229,22,0.388,24,0.583,33,0.519,34,0.302,35,0.021,36,0.021,37,1.233,38,1.233,39,1.233,40,2.738,41,1.54,42,2.054,43,1.233,44,2.368,45,2.368,46,2.029,47,5.388,48,1.669,49,4.434,50,1.669,51,4.434,52,0.388,53,1.312,54,2.201,55,1.373,56,1.211,57,3.274,58,3.274,59,0.481,60,0.969,61,2.588,62,1.669,63,1.669,64,1.669,65,2.029,66,1.233,67,0.865,68,1.233,69,1.233,70,0.894,71,1.233,72,0.894,73,1.233,74,0.894,75,1.233,76,1.669,77,0.894,78,1.233,79,0.894,80,1.137,81,1.233,82,0.894,83,1.233,84,0.894,85,1.669,86,1.233,87,0.894,88,1.233,89,1.233]],["title/modules/GraphQLModule.html",[0,0.744,90,1.876]],["body/modules/GraphQLModule.html",[0,0.64,6,2.224,7,0.4,12,0.032,17,0.255,18,0.188,19,0.188,20,0.179,22,0.698,23,2.089,24,0.492,28,1.129,32,2.445,34,0.255,35,0.019,36,0.019,59,0.777,90,2.3,91,1.791,92,3.296,93,3.941,94,3.941,95,2.655,96,2.871,97,3.941,98,4.188,99,4.188,100,1.909,101,1.629,102,1.465,103,3.346,104,2.314,105,1.791,106,2.3,107,1.129,108,2.554,109,2.763,110,3.941,111,3.941,112,2.013,113,2.311,114,2.311,115,2.871,116,2.311,117,2.311,118,2.311,119,2.3,120,2.871,121,2.311,122,1.613,123,2.013,124,3.841,125,2.311,126,2.311,127,0.96,128,2.311,129,2.224,130,2.763,131,2.763,132,2.763,133,2.763,134,4.188,135,2.763,136,4.428,137,2.763,138,2.763,139,2.311,140,2.763,141,2.311,142,2.763,143,0.818,144,2.763,145,2.311,146,2.763,147,2.763,148,3.346,149,2.763,150,2.013,151,2.311,152,2.013,153,2.311]],["title/interfaces/Http.html",[100,1.556,154,0.951]],["body/interfaces/Http.html",[7,0.362,12,0.031,17,0.418,18,0.308,19,0.308,20,0.206,22,0.536,35,0.026,36,0.026,52,0.536,100,2.644,127,1.896,143,1.616,154,1.616,155,3.789,156,3.941,157,0.884,158,3.186,159,2.936,160,3.789,161,1.851,162,1.706,163,3.301]],["title/injectables/HttpService.html",[164,1.704,165,1.427]],["body/injectables/HttpService.html",[7,0.22,12,0.032,17,0.254,18,0.187,19,0.187,20,0.209,22,0.626,24,0.491,32,1.748,34,0.254,35,0.019,36,0.019,52,0.326,53,1.566,56,1.074,59,0.808,67,0.767,100,2.562,122,2.92,127,1.367,134,3.837,136,2.306,139,2.306,156,4.021,157,0.538,158,3.21,159,1.787,160,4.6,161,2.365,162,1.727,164,2.432,165,1.748,166,2.306,167,2.432,168,3.935,169,3.935,170,3.935,171,2.757,172,3.935,173,5.108,174,1.608,175,2.55,176,3.935,177,5.29,178,5.003,179,2.757,180,4.184,181,3.935,182,1.787,183,1.462,184,3.935,185,3.935,186,3.291,187,3.935,188,3.291,189,2.222,190,3.935,191,2.009,192,2.306,193,2.757,194,2.757,195,2.757,196,2.757,197,2.757,198,2.757,199,2.757,200,2.757,201,2.757,202,2.306,203,2.757,204,2.757,205,2.009]],["title/components/ListComponent.html",[13,0.809,33,0.296]],["body/components/ListComponent.html",[0,0.591,2,1.237,3,0.697,7,0.204,11,0.643,12,0.031,13,1.215,17,0.235,18,0.174,19,0.174,20,0.258,22,0.441,24,0.455,28,1.043,33,0.494,34,0.235,35,0.018,36,0.018,37,0.961,38,0.961,39,0.961,41,1.293,42,1.795,43,0.961,44,2.266,45,2.266,46,1.817,48,1.401,50,1.401,52,0.302,53,1.102,54,1.972,55,1.016,56,1.51,59,0.547,60,0.756,62,1.401,63,1.401,64,1.401,65,1.817,66,0.961,67,0.857,68,0.961,69,0.961,70,0.697,71,0.961,72,0.697,73,0.961,74,0.697,75,0.961,76,1.401,77,0.697,78,0.961,79,0.697,80,0.887,81,0.961,82,0.697,83,0.961,84,0.697,85,1.401,86,0.961,87,0.697,88,0.961,89,0.961,101,1.586,102,1.354,108,2.412,143,1.102,157,0.941,162,1.401,167,1.354,174,1.043,182,1.654,183,1.973,189,2.338,206,2.135,207,3.722,208,3.722,209,3.722,210,1.951,211,4.827,212,5.531,213,4.393,214,4.393,215,3.739,216,3.2,217,2.553,218,3.722,219,2.553,220,2.553,221,2.553,222,2.553,223,2.553,224,1.49,225,2.135,226,1.654,227,2.135,228,1.86,229,2.553,230,1.654,231,2.135,232,2.553,233,1.654,234,1.86,235,2.553,236,2.553,237,2.553,238,2.553,239,2.135,240,2.553]],["title/components/LoginComponent.html",[33,0.296,70,0.877]],["body/components/LoginComponent.html",[3,0.899,7,0.263,11,0.828,12,0.031,13,0.828,17,0.303,18,0.224,19,0.224,20,0.229,22,0.39,24,0.586,33,0.52,34,0.303,35,0.021,36,0.021,37,1.239,38,1.239,39,1.239,41,1.546,42,2.06,43,1.239,44,2.37,45,2.37,46,1.675,48,1.675,50,1.675,52,0.39,53,1.317,54,2.206,55,1.377,56,1.215,59,0.483,60,0.974,61,2.597,62,1.675,63,1.675,64,1.675,65,2.033,66,1.239,67,0.868,68,1.239,69,1.239,70,1.474,71,1.239,72,0.899,73,1.239,74,0.899,75,1.239,76,1.675,77,0.899,78,1.239,79,0.899,80,1.143,81,1.239,82,0.899,83,1.239,84,0.899,85,1.675,86,1.239,87,0.899,88,1.239,89,1.239,241,2.753,242,5.4,243,4.45,244,4.45,245,3.291,246,3.291]],["title/components/MidgardComponent.html",[33,0.296,72,0.877]],["body/components/MidgardComponent.html",[3,0.832,7,0.243,11,0.767,12,0.031,13,0.767,17,0.281,18,0.207,19,0.207,20,0.22,22,0.5,24,0.543,33,0.506,34,0.281,35,0.02,36,0.02,37,1.147,38,1.147,39,1.147,41,1.466,42,1.979,43,1.147,44,2.341,45,2.341,46,1.589,48,1.589,50,1.589,52,0.361,53,1.249,54,2.136,55,0.832,56,1.153,59,0.448,60,0.902,62,1.589,63,1.589,64,1.589,65,1.968,66,1.147,67,0.944,68,1.147,69,1.147,70,0.832,71,1.147,72,1.428,73,1.147,74,0.832,75,1.147,76,1.589,77,0.832,78,1.147,79,0.832,80,1.682,81,1.147,82,0.832,83,1.147,84,0.832,85,1.589,86,1.147,87,0.832,88,1.147,89,1.147,119,2.827,157,0.594,162,1.147,174,1.245,191,3.075,247,2.549,248,4.221,249,4.221,250,4.221,251,5.228,252,3.047,253,3.047,254,2.549,255,2.549,256,4.221,257,3.047,258,4.221,259,3.047,260,4.221,261,3.047,262,3.53,263,2.549,264,2.22,265,3.047]],["title/modules/MidgardHttpModule.html",[0,0.744,266,1.876]],["body/modules/MidgardHttpModule.html",[0,1.024,6,2.141,7,0.353,12,0.031,17,0.408,18,0.301,19,0.301,20,0.245,22,0.637,23,3.073,24,0.788,34,0.408,35,0.026,36,0.026,55,1.207,59,0.649,165,2.389,266,3.384,267,4.421,268,4.498,269,4.421,270,3.697,271,3.697]],["title/modules/MidgardModule.html",[0,0.744,272,2.082]],["body/modules/MidgardModule.html",[0,0.871,1,3.143,2,1.254,3,0.707,4,2.869,5,1.678,6,1.254,7,0.388,12,0.032,14,2.437,15,1.678,16,1.511,17,0.239,18,0.176,19,0.176,20,0.118,22,0.744,23,1.994,24,0.461,25,3.145,26,1.886,28,2.2,34,0.239,35,0.018,36,0.018,70,1.47,72,1.648,74,1.47,77,1.47,82,1.47,84,1.47,87,1.47,90,3.143,112,1.886,266,3.013,272,4.209,273,2.166,274,2.166,275,2.166,276,2.166,277,3.143,278,3.013,279,2.589,280,2.589,281,3.761,282,1.886,283,2.589,284,1.886,285,2.589,286,2.589,287,2.589,288,2.589,289,1.886,290,3.761,291,2.589,292,1.886,293,2.589,294,2.589,295,2.74,296,1.886,297,2.589,298,3.761,299,2.589,300,2.589,301,2.589,302,2.589,303,2.589]],["title/interfaces/MidgardState.html",[154,0.951,304,2.082]],["body/interfaces/MidgardState.html",[7,0.333,12,0.031,17,0.385,18,0.284,19,0.284,20,0.19,22,0.615,28,2.121,35,0.025,36,0.025,52,0.494,123,4.117,143,1.537,154,1.537,157,1.102,304,3.365,305,3.492,306,4.945,307,3.369,308,3.709,309,2.753,310,2.705,311,3.492,312,3.041,313,4.175]],["title/modules/MidgardTranslationModule.html",[0,0.744,277,1.876]],["body/modules/MidgardTranslationModule.html",[0,1.08,2,1.709,3,0.963,4,3.382,5,2.286,6,2.257,7,0.417,12,0.032,14,3.02,15,2.286,16,2.059,17,0.325,18,0.24,19,0.24,20,0.16,22,0.716,23,2.471,24,0.628,34,0.325,35,0.022,36,0.022,59,0.684,79,1.619,80,1.619,100,2.257,112,2.57,113,2.951,114,2.951,122,2.059,127,1.225,129,1.567,151,2.951,153,2.951,156,2.286,165,2.319,175,2.286,180,2.951,227,2.951,254,2.951,255,2.951,264,2.57,277,3.462,314,2.951,315,2.951,316,2.57,317,4.661,318,3.528,319,4.661,320,2.951,321,2.57,322,3.528,323,2.951,324,3.528,325,2.951,326,3.528,327,3.528,328,3.528,329,2.57]],["title/modules/MigardStoreModule.html",[0,0.744,278,1.876]],["body/modules/MigardStoreModule.html",[0,1.031,6,2.156,7,0.355,12,0.031,17,0.41,18,0.303,19,0.303,20,0.246,22,0.639,23,3.083,24,0.793,34,0.41,35,0.026,36,0.026,59,0.654,101,1.599,102,2.36,268,4.517,270,3.723,271,3.723,278,3.394,330,4.452]],["title/components/NavBarComponent.html",[33,0.296,74,0.877]],["body/components/NavBarComponent.html",[3,0.85,7,0.249,11,0.784,12,0.031,13,0.784,17,0.287,18,0.212,19,0.212,20,0.223,22,0.369,24,0.555,33,0.51,34,0.287,35,0.02,36,0.02,37,1.173,38,1.173,39,1.173,41,1.488,42,2.002,43,1.173,44,2.349,45,2.349,46,1.613,48,1.613,50,1.613,52,0.369,53,1.268,54,2.156,55,1.338,56,1.17,59,0.457,60,0.922,62,1.613,63,1.613,64,1.613,65,1.987,66,1.173,67,0.836,68,1.173,69,1.173,70,0.85,71,1.173,72,0.85,73,1.173,74,1.441,75,2.205,76,1.613,77,0.85,78,1.173,79,0.85,80,1.082,81,1.173,82,0.85,83,1.173,84,0.85,85,1.613,86,1.173,87,0.85,88,1.173,89,1.173,188,3.584,289,3.569,331,4.097,332,2.269,333,3.584,334,3.584,335,3.584,336,2.605,337,2.605,338,5.277,339,3.584,340,4.285,341,2.777,342,3.584]],["title/classes/ReduxCache.html",[34,0.296,106,1.876]],["body/classes/ReduxCache.html",[7,0.362,12,0.031,17,0.312,18,0.23,19,0.23,20,0.233,22,0.647,32,1.505,34,0.418,35,0.024,36,0.022,52,0.401,53,1.343,55,0.925,56,1.239,59,0.497,60,1.343,67,0.885,95,2.405,101,1.003,103,3.726,104,2.395,105,2.195,106,2.648,107,2.09,157,0.997,162,1.708,163,2.468,174,1.853,189,2.477,210,2.272,343,2.468,344,4.537,345,5.115,346,4.537,347,3.189,348,3.387,349,3.387,350,4.537,351,5.115,352,3.387,353,4.537,354,4.537,355,2.648,356,1.977,357,1.977,358,3.387,359,3.387,360,3.387,361,3.387,362,3.387,363,3.387,364,3.387,365,3.387,366,2.468,367,3.387,368,3.387,369,2.195,370,3.387,371,2.833,372,3.387,373,3.387,374,3.387,375,3.387,376,3.387,377,3.387,378,3.387]],["title/classes/ReduxNormalizedCache.html",[34,0.296,357,1.876]],["body/classes/ReduxNormalizedCache.html",[7,0.322,12,0.031,17,0.204,18,0.15,19,0.15,20,0.262,22,0.478,28,0.904,32,0.983,34,0.308,35,0.016,36,0.016,41,1.162,52,0.262,53,0.99,55,0.604,56,1.549,59,0.846,60,1.562,67,0.942,95,1.173,101,1.679,102,1.173,104,2.387,105,1.433,107,2.355,127,0.768,129,0.983,143,0.99,154,0.655,157,1.124,161,2.414,162,1.819,167,2.95,174,1.974,183,2.385,189,2.179,210,2.731,234,3.278,347,1.953,355,2.821,356,1.291,357,1.953,366,3.521,379,1.433,380,3.763,381,4.042,382,3.763,383,3.346,384,3.763,385,3.346,386,3.346,387,3.763,388,2.798,389,3.346,390,2.212,391,2.212,392,2.798,393,2.212,394,2.798,395,2.212,396,4.251,397,2.212,398,2.798,399,4.251,400,2.212,401,2.798,402,2.798,403,2.212,404,2.212,405,2.168,406,2.168,407,2.615,408,1.85,409,1.85,410,1.85,411,1.291,412,1.85,413,1.85,414,1.85,415,1.85,416,1.612,417,1.85,418,1.85]],["title/interfaces/ReduxNormalizedCacheConfig.html",[154,0.951,355,1.876]],["body/interfaces/ReduxNormalizedCacheConfig.html",[7,0.385,12,0.032,17,0.279,18,0.206,19,0.206,20,0.138,22,0.571,28,1.236,32,1.344,34,0.279,35,0.02,36,0.02,41,1.051,52,0.358,59,0.765,60,1.428,95,1.604,101,1.803,102,1.604,104,1.716,105,1.961,107,1.236,127,1.051,129,1.344,143,1.243,154,1.243,157,1.105,161,2.375,162,1.581,167,2.558,183,2.227,189,2.524,210,2.517,234,3.797,347,1.766,355,3.042,356,1.766,357,1.766,366,3.06,379,1.961,380,4.035,381,4.58,382,2.53,384,2.53,387,2.53,388,2.53,392,2.53,394,2.53,396,4.035,398,2.53,399,4.035,401,2.53,402,2.53,405,2.722,406,2.722,407,3.126,408,2.53,409,2.53,410,2.53,411,1.766,412,2.53,413,2.53,414,2.53,415,2.53,416,2.204,417,2.53,418,2.53]],["title/injectables/Store.html",[101,0.951,164,1.704]],["body/injectables/Store.html",[7,0.239,12,0.032,17,0.176,18,0.251,19,0.13,20,0.228,22,0.668,24,0.341,28,1.506,32,2.423,34,0.176,35,0.014,36,0.014,52,0.226,55,1.006,56,1.31,59,0.801,60,0.566,67,0.373,101,1.749,104,0.782,107,0.782,108,3.602,119,1.117,122,2.433,127,1.852,129,0.85,143,1.091,145,1.6,157,0.813,158,3.632,159,1.24,161,1.703,163,1.394,164,1.954,174,0.782,175,1.24,182,1.24,183,2.398,191,1.394,192,1.6,210,1.637,215,3.652,224,2.151,226,1.24,228,3.037,230,2.701,233,1.939,239,3.486,411,1.747,419,1.394,420,3.486,421,4.169,422,4.169,423,2.993,424,1.913,425,1.913,426,1.913,427,2.993,428,4.169,429,3.083,430,2.993,431,4.169,432,2.993,433,2.993,434,2.993,435,1.913,436,4.169,437,1.913,438,2.993,439,2.993,440,1.913,441,1.913,442,2.18,443,1.913,444,2.18,445,1.913,446,2.993,447,1.913,448,2.993,449,1.913,450,2.993,451,1.913,452,2.993,453,1.913,454,2.18,455,3.686,456,2.993,457,1.913,458,2.993,459,2.18,460,1.913,461,1.913,462,1.913,463,1.913,464,1.913,465,1.913,466,1.913,467,1.913,468,1.913,469,1.913,470,1.913,471,1.913,472,1.6,473,1.6,474,2.503,475,1.913,476,1.913,477,1.6,478,1.6,479,1.6,480,1.6,481,1.6,482,1.6,483,1.6,484,1.6,485,1.6,486,1.6,487,1.6]],["title/components/TopBarComponent.html",[33,0.296,77,0.877]],["body/components/TopBarComponent.html",[3,0.867,7,0.254,11,0.8,12,0.031,13,0.8,17,0.293,18,0.216,19,0.216,20,0.225,22,0.376,24,0.566,33,0.514,34,0.293,35,0.021,36,0.021,37,1.196,38,1.196,39,1.196,41,1.509,42,2.022,43,1.196,44,2.357,45,2.357,46,1.635,48,1.635,50,1.635,52,0.376,53,1.286,54,2.174,55,1.352,56,1.186,59,0.466,60,0.94,62,1.635,63,1.635,64,1.635,65,2.003,66,1.196,67,0.847,68,1.196,69,1.196,70,0.867,71,1.196,72,0.867,73,1.196,74,0.867,75,1.196,76,1.635,77,1.453,78,2.217,79,0.867,80,1.103,81,1.196,82,0.867,83,1.196,84,0.867,85,1.635,86,1.196,87,0.867,88,1.196,89,1.196,292,3.606,332,2.314,333,3.633,334,3.633,335,3.633,336,2.657,337,2.657,488,4.139,489,4.343,490,3.633,491,4.343]],["title/components/TranslationLoader.html",[33,0.296,79,0.877]],["body/components/TranslationLoader.html",[3,0.751,7,0.22,11,0.693,12,0.031,13,0.693,17,0.254,18,0.187,19,0.187,20,0.227,22,0.542,24,0.49,33,0.487,34,0.254,35,0.019,36,0.019,37,1.036,38,1.036,39,1.036,43,1.036,44,2.299,45,2.299,46,1.479,48,1.479,50,1.479,52,0.326,53,1.163,55,0.751,56,1.251,59,0.577,61,2.293,62,1.479,63,1.479,64,1.479,65,1.882,66,1.036,67,0.975,68,1.036,69,1.036,70,0.751,71,1.036,72,0.751,73,1.036,74,0.751,75,1.036,76,1.479,77,0.751,78,1.036,79,1.365,80,2.099,81,1.036,82,0.751,83,1.036,84,0.751,85,1.479,86,1.036,87,0.751,88,1.036,89,1.036,100,1.903,143,1.163,157,0.894,158,2.674,159,1.783,161,2.363,162,1.479,165,2.22,174,1.605,186,4.597,205,2.862,210,2.441,262,2.301,264,3.641,320,2.301,321,3.641,492,4.18,493,2.301,494,3.929,495,3.929,496,3.929,497,2.752,498,2.752,499,3.929,500,2.752,501,3.286,502,2.752,503,2.752,504,2.752,505,2.752]],["title/components/UserComponent.html",[33,0.296,82,0.877]],["body/components/UserComponent.html",[3,0.899,7,0.263,11,0.828,12,0.031,13,0.828,17,0.303,18,0.224,19,0.224,20,0.229,22,0.39,24,0.586,33,0.52,34,0.303,35,0.021,36,0.021,37,1.239,38,1.239,39,1.239,41,1.546,42,2.06,43,1.239,44,2.37,45,2.37,46,1.675,48,1.675,50,1.675,52,0.39,53,1.317,54,2.206,55,1.377,56,1.215,59,0.483,60,0.974,61,2.597,62,1.675,63,1.675,64,1.675,65,2.033,66,1.239,67,0.868,68,1.239,69,1.239,70,0.899,71,1.239,72,0.899,73,1.239,74,0.899,75,1.239,76,1.675,77,0.899,78,1.239,79,0.899,80,1.143,81,1.239,82,1.474,83,1.239,84,0.899,85,1.675,86,1.239,87,0.899,88,1.239,89,1.239,490,4.516,506,2.753,507,4.45,508,4.45,509,3.291,510,3.291]],["title/interfaces/WorkflowLevel1.html",[154,0.951,307,1.704]],["body/interfaces/WorkflowLevel1.html",[7,0.339,12,0.03,17,0.391,18,0.289,19,0.289,20,0.193,35,0.025,36,0.025,52,0.502,67,1.16,143,1.553,154,1.553,157,1.243,161,2.625,307,2.781,309,2.25,310,2.75,511,3.55,512,4.333,513,4.333,514,4.762]],["title/components/WorkflowLevel1Component.html",[33,0.296,84,0.877]],["body/components/WorkflowLevel1Component.html",[3,0.655,7,0.192,11,0.604,12,0.031,13,0.604,17,0.221,18,0.163,19,0.163,20,0.228,22,0.62,24,0.427,28,1.731,33,0.461,34,0.221,35,0.017,36,0.017,37,0.903,38,0.903,39,0.903,41,1.235,42,1.731,43,0.903,44,2.238,45,2.238,46,1.339,48,1.339,50,1.339,52,0.421,53,1.052,54,1.914,55,0.971,56,1.279,59,0.522,60,1.052,62,1.339,63,1.339,64,1.339,65,1.764,66,0.903,67,1.109,68,0.903,69,0.903,70,0.655,71,0.903,72,0.655,73,0.903,74,0.655,75,0.903,76,1.339,77,0.655,78,0.903,79,0.655,80,0.833,81,0.903,82,0.655,83,0.903,84,1.279,85,2.097,86,0.903,87,0.655,88,0.903,89,0.903,95,2.875,96,1.748,101,0.71,102,1.272,120,2.591,141,2.007,143,1.052,150,3.413,157,0.826,162,0.903,167,2.484,174,0.98,189,1.162,210,1.882,216,3.413,224,1.401,282,3.645,307,1.885,309,2.778,310,1.555,311,2.007,339,2.974,341,2.304,459,1.748,512,1.748,513,1.748,515,2.007,516,3.556,517,3.556,518,3.919,519,2.399,520,3.556,521,2.399,522,2.399,523,1.748,524,2.399,525,3.556,526,2.399,527,2.399,528,2.399,529,2.399,530,2.399,531,2.399,532,2.007,533,2.007,534,2.007,535,3.543,536,3.543,537,3.543,538,2.399,539,2.974,540,2.974,541,2.007]],["title/interfaces/WorkflowLevel2.html",[154,0.951,308,1.876]],["body/interfaces/WorkflowLevel2.html",[7,0.361,12,0.03,17,0.416,18,0.307,19,0.307,20,0.205,35,0.026,36,0.026,52,0.534,67,1.185,143,1.612,154,1.612,157,1.062,161,2.39,308,3.18,309,2.394,312,3.289,513,4.426,514,4.893,542,3.776]],["title/components/WorkflowLevel2Component.html",[33,0.296,87,0.877]],["body/components/WorkflowLevel2Component.html",[3,0.743,7,0.217,11,0.685,12,0.031,13,0.685,17,0.251,18,0.185,19,0.185,20,0.239,22,0.322,24,0.485,33,0.485,34,0.251,35,0.019,36,0.019,37,1.025,38,1.025,39,1.025,41,1.354,42,1.861,43,1.025,44,2.294,45,2.294,46,1.468,48,1.468,50,1.468,52,0.461,53,1.154,54,2.032,55,1.244,56,1.358,59,0.573,60,1.154,61,2.276,62,1.468,63,1.468,64,1.468,65,1.872,66,1.025,67,1.1,68,1.025,69,1.025,70,0.743,71,1.025,72,0.743,73,1.025,74,0.743,75,1.025,76,1.468,77,0.743,78,1.025,79,0.743,80,0.946,81,1.025,82,0.743,83,1.025,84,0.743,85,2.243,86,1.025,87,1.358,88,1.982,89,1.025,143,1.154,150,3.318,157,0.76,167,2.415,210,2.023,216,3.623,284,3.835,309,2.79,341,2.526,459,1.983,512,1.983,518,4.159,532,2.277,533,2.277,534,2.277,535,3.809,536,3.809,537,3.809,539,3.261,540,3.261,541,2.277,543,2.277,544,3.899,545,3.899,546,3.899,547,2.722,548,2.722]],["title/coverage.html",[549,3.661]],["body/coverage.html",[11,0.496,12,0.031,13,0.496,19,0.134,20,0.298,21,1.437,33,0.516,34,0.283,35,0.015,36,0.015,40,1.65,70,0.539,72,0.539,74,0.539,77,0.539,79,0.539,82,0.539,84,0.539,87,0.539,91,2.435,100,0.955,101,0.584,104,2.199,106,1.151,107,2.199,115,1.437,127,1.946,129,0.876,148,1.437,152,1.437,154,1.358,155,1.65,157,0.385,164,1.625,165,1.361,166,1.65,206,1.65,224,1.151,225,1.65,241,1.65,247,1.65,282,1.437,284,1.437,289,1.437,292,1.437,295,1.437,296,1.437,304,1.278,305,1.65,307,1.046,308,1.151,309,2.247,310,1.278,312,1.437,316,1.437,321,1.437,329,1.437,331,1.65,332,2.233,343,1.437,355,1.151,356,1.151,357,1.151,369,3.979,371,1.65,379,2.435,405,1.278,406,1.278,407,1.278,411,1.151,419,2.738,442,1.437,444,1.437,454,1.437,488,1.65,492,1.65,493,1.65,506,1.65,511,1.65,515,1.65,523,1.437,542,1.65,543,1.65,549,1.65,550,1.973,551,1.973,552,6.515,553,5.382,554,1.65,555,6.342,556,1.973,557,3.143,558,2.233,559,2.563,560,1.973,561,3.065,562,3.065,563,1.973,564,1.973,565,1.973,566,1.973,567,1.973,568,1.973,569,1.973,570,3.758,571,4.145,572,1.65,573,1.65,574,1.65,575,1.65,576,1.65,577,1.65,578,1.65,579,1.65,580,1.65,581,1.65,582,1.65,583,3.544,584,1.65,585,1.65,586,1.973,587,2.233,588,1.973]],["title/dependencies.html",[2,1.871,589,2.687]],["body/dependencies.html",[2,2.194,12,0.031,24,0.807,26,3.301,35,0.026,36,0.026,590,4.531,591,6.494,592,4.531,593,4.531,594,4.531,595,5.459,596,4.566,597,4.531,598,4.531,599,4.531,600,4.531]],["title/miscellaneous/functions.html",[127,1.342,601,1.425]],["body/miscellaneous/functions.html",[12,0.031,20,0.261,35,0.02,36,0.02,52,0.371,59,0.461,67,1.183,91,2.033,95,1.663,98,2.624,99,2.624,101,1.455,103,2.286,104,2.163,106,1.831,107,1.76,108,2.033,117,2.624,118,2.624,119,2.514,120,3.583,121,2.624,122,1.831,123,2.286,124,4.113,125,2.624,126,2.624,127,1.496,128,2.624,152,3.138,157,0.612,162,2.283,165,1.394,173,3.602,174,2.478,175,2.033,189,2.086,226,3.43,230,2.791,316,2.286,323,2.624,325,2.624,329,3.138,347,1.831,356,2.514,379,2.033,411,2.514,416,3.856,444,3.138,523,3.583,558,2.286,571,2.286,572,3.602,573,3.602,574,4.113,575,3.602,576,3.602,587,2.286,601,1.663,602,2.624,603,2.624,604,3.137,605,4.793,606,2.624,607,3.137,608,3.137,609,3.137,610,3.137,611,3.137,612,3.137,613,3.137,614,3.137,615,3.137,616,3.137]],["title/index.html",[52,0.318,501,2.247,617,2.687]],["body/index.html",[12,0.023,16,2.193,18,0.255,19,0.255,33,0.496,35,0.023,36,0.023,67,0.733,96,3.92,101,1.112,119,3.141,129,1.669,205,3.538,231,3.142,233,2.434,342,3.142,618,3.757,619,4.856,620,5.689,621,5.381,622,3.757,623,3.757,624,3.757,625,6.14,626,6.14,627,3.757,628,3.757,629,3.757,630,3.757,631,3.757,632,3.757,633,3.757,634,3.757,635,3.757,636,5.891,637,3.757,638,3.757,639,3.757,640,3.757,641,3.757,642,4.856,643,5.891,644,4.856,645,4.856,646,3.757,647,5.689,648,3.757,649,3.757,650,3.757,651,5.381,652,3.757,653,3.757,654,3.757,655,3.757]],["title/modules.html",[0,1.014]],["body/modules.html",[0,1.073,1,2.702,12,0.026,35,0.026,36,0.026,90,2.702,263,4.946,266,2.702,272,3,277,2.702,278,2.702,596,4.946,656,5.914,657,5.914,658,6.354,659,5.914]],["title/overview.html",[660,3.661]],["body/overview.html",[0,1.029,1,3.574,2,1.59,3,0.896,4,2.127,5,2.127,6,1.59,7,0.262,8,2.745,9,2.745,10,2.745,11,1.495,12,0.031,13,1.495,14,2.878,15,2.127,16,1.916,33,0.303,34,0.303,35,0.021,36,0.021,70,1.375,72,1.622,74,1.375,77,1.375,79,1.375,82,1.375,84,1.375,87,1.375,90,2.938,154,0.972,164,1.74,266,2.938,272,4.276,273,2.745,274,2.745,275,2.745,276,2.745,277,3.289,278,2.938,314,2.745,315,2.745,341,2.878,660,2.745,661,3.283,662,3.283,663,3.283]],["title/miscellaneous/typealiases.html",[601,1.425,664,3.863]],["body/miscellaneous/typealiases.html",[12,0.027,20,0.224,35,0.027,36,0.027,52,0.582,104,2.008,107,2.008,157,0.958,343,3.581,347,3.539,601,2.606,665,4.915,666,4.915]],["title/miscellaneous/variables.html",[369,2.503,601,1.425]],["body/miscellaneous/variables.html",[11,0.52,12,0.032,13,0.52,18,0.14,20,0.248,21,1.505,32,0.917,33,0.357,35,0.021,36,0.015,52,0.244,59,0.727,91,1.338,92,1.727,101,0.94,104,1.297,107,1.297,115,2.818,116,1.727,127,0.717,129,1.718,143,0.611,148,2.818,156,2.058,157,1.136,158,1.205,161,2.513,165,1.929,182,3.986,183,3.277,202,2.656,215,2.313,224,2.535,226,3.207,228,2.313,230,2.058,233,1.338,295,2.818,296,1.505,304,2.058,306,1.727,307,1.095,308,1.205,369,1.338,405,2.814,406,2.814,407,2.814,419,1.505,420,3.632,429,1.727,442,2.818,454,2.818,472,1.727,473,1.727,474,1.727,477,1.727,478,1.727,479,1.727,480,1.727,481,1.727,482,1.727,483,1.727,484,1.727,485,1.727,486,1.727,487,1.727,554,2.656,557,1.727,558,1.505,559,4.139,571,1.505,577,3.632,578,3.632,579,3.632,580,3.632,581,3.632,582,3.632,583,1.727,584,3.235,585,3.632,587,1.505,601,1.095,602,1.727,603,2.656,605,4.139,606,1.727,667,3.869,668,2.065,669,4.342,670,2.065,671,3.175,672,3.175,673,2.065,674,3.175,675,3.175,676,2.065,677,4.342,678,3.175,679,2.065,680,4.342,681,2.065,682,2.065,683,2.065,684,2.065,685,2.065,686,2.065,687,2.065,688,2.065]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":540,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["1/1",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":662,"title":{},"body":{"overview.html":{}}}],["100",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":341,"title":{},"body":{"components/NavBarComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"overview.html":{}}}],["2/3",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":663,"title":{},"body":{"overview.html":{}}}],["6",{"_index":661,"title":{},"body":{"overview.html":{}}}],["6.1.10",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["6.1.5",{"_index":623,"title":{},"body":{"index.html":{}}}],["66",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["94a37ce5e4a7a00f59f939fd57b0a3186db92bfd",{"_index":139,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/HttpService.html":{}}}],["action",{"_index":226,"title":{},"body":{"components/ListComponent.html":{},"injectables/Store.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["action$.pip",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activ",{"_index":468,"title":{},"body":{"injectables/Store.html":{}}}],["actual_compon",{"_index":89,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["alias",{"_index":665,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":96,"title":{},"body":{"modules/GraphQLModule.html":{},"components/WorkflowLevel1Component.html":{},"index.html":{}}}],["angular/anim",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":26,"title":{},"body":{"modules/CrudModule.html":{},"modules/MidgardModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":112,"title":{},"body":{"modules/GraphQLModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{}}}],["angular/compil",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":24,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"dependencies.html":{}}}],["angular/form",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["angular/src/lib/components/nav",{"_index":331,"title":{},"body":{"components/NavBarComponent.html":{},"coverage.html":{}}}],["angular/src/lib/components/top",{"_index":488,"title":{},"body":{"components/TopBarComponent.html":{},"coverage.html":{}}}],["angular/src/lib/midgard",{"_index":296,"title":{},"body":{"modules/MidgardModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["angular/src/lib/midgard.component.t",{"_index":247,"title":{},"body":{"components/MidgardComponent.html":{},"coverage.html":{}}}],["angular/src/lib/midgard.component.ts:10",{"_index":252,"title":{},"body":{"components/MidgardComponent.html":{}}}],["angular/src/lib/midgard.component.ts:20",{"_index":253,"title":{},"body":{"components/MidgardComponent.html":{}}}],["angular/src/lib/midgard.module.t",{"_index":279,"title":{},"body":{"modules/MidgardModule.html":{}}}],["angular/src/lib/modules/crud/crud.modul",{"_index":300,"title":{},"body":{"modules/MidgardModule.html":{}}}],["angular/src/lib/modules/crud/crud.module.t",{"_index":21,"title":{},"body":{"modules/CrudModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["angular/src/lib/modules/crud/detail/detail.component.t",{"_index":40,"title":{},"body":{"components/DetailComponent.html":{},"coverage.html":{}}}],["angular/src/lib/modules/crud/detail/detail.component.ts:12",{"_index":58,"title":{},"body":{"components/DetailComponent.html":{}}}],["angular/src/lib/modules/crud/detail/detail.component.ts:8",{"_index":57,"title":{},"body":{"components/DetailComponent.html":{}}}],["angular/src/lib/modules/crud/list/list.compon",{"_index":29,"title":{},"body":{"modules/CrudModule.html":{}}}],["angular/src/lib/modules/crud/list/list.component.t",{"_index":206,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["angular/src/lib/modules/crud/list/list.component.ts:11",{"_index":223,"title":{},"body":{"components/ListComponent.html":{}}}],["angular/src/lib/modules/crud/list/list.component.ts:12",{"_index":221,"title":{},"body":{"components/ListComponent.html":{}}}],["angular/src/lib/modules/crud/list/list.component.ts:13",{"_index":219,"title":{},"body":{"components/ListComponent.html":{}}}],["angular/src/lib/modules/crud/list/list.component.ts:14",{"_index":220,"title":{},"body":{"components/ListComponent.html":{}}}],["angular/src/lib/modules/crud/list/list.component.ts:15",{"_index":218,"title":{},"body":{"components/ListComponent.html":{}}}],["angular/src/lib/modules/crud/list/list.component.ts:21",{"_index":222,"title":{},"body":{"components/ListComponent.html":{}}}],["angular/src/lib/modules/graphql/apollo",{"_index":107,"title":{},"body":{"modules/GraphQLModule.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["angular/src/lib/modules/graphql/graphql.modul",{"_index":299,"title":{},"body":{"modules/MidgardModule.html":{}}}],["angular/src/lib/modules/graphql/graphql.module.t",{"_index":91,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["angular/src/lib/modules/http/http.modul",{"_index":294,"title":{},"body":{"modules/MidgardModule.html":{}}}],["angular/src/lib/modules/http/http.module.t",{"_index":267,"title":{},"body":{"modules/MidgardHttpModule.html":{}}}],["angular/src/lib/modules/http/http.servic",{"_index":269,"title":{},"body":{"modules/MidgardHttpModule.html":{}}}],["angular/src/lib/modules/http/http.service.t",{"_index":166,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["angular/src/lib/modules/http/http.service.ts:16",{"_index":179,"title":{},"body":{"injectables/HttpService.html":{}}}],["angular/src/lib/modules/http/http.service.ts:34",{"_index":171,"title":{},"body":{"injectables/HttpService.html":{}}}],["angular/src/lib/modules/http/types/http.t",{"_index":155,"title":{},"body":{"interfaces/Http.html":{},"coverage.html":{}}}],["angular/src/lib/modules/store/stor",{"_index":102,"title":{},"body":{"modules/GraphQLModule.html":{},"components/ListComponent.html":{},"modules/MigardStoreModule.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"components/WorkflowLevel1Component.html":{}}}],["angular/src/lib/modules/store/store.modul",{"_index":293,"title":{},"body":{"modules/MidgardModule.html":{}}}],["angular/src/lib/modules/store/store.module.t",{"_index":330,"title":{},"body":{"modules/MigardStoreModule.html":{}}}],["angular/src/lib/modules/store/store.t",{"_index":419,"title":{},"body":{"injectables/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["angular/src/lib/modules/store/store.ts:18",{"_index":423,"title":{},"body":{"injectables/Store.html":{}}}],["angular/src/lib/modules/store/store.ts:47",{"_index":426,"title":{},"body":{"injectables/Store.html":{}}}],["angular/src/lib/modules/store/store.ts:48",{"_index":424,"title":{},"body":{"injectables/Store.html":{}}}],["angular/src/lib/modules/store/store.ts:49",{"_index":425,"title":{},"body":{"injectables/Store.html":{}}}],["angular/src/lib/modules/store/store.ts:56",{"_index":435,"title":{},"body":{"injectables/Store.html":{}}}],["angular/src/lib/modules/translation/transl",{"_index":492,"title":{},"body":{"components/TranslationLoader.html":{},"coverage.html":{}}}],["angular/src/lib/modules/translation/translation.modul",{"_index":301,"title":{},"body":{"modules/MidgardModule.html":{}}}],["angular/src/lib/modules/translation/translation.module.t",{"_index":316,"title":{},"body":{"modules/MidgardTranslationModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["angular/src/lib/pages/login/login.component.t",{"_index":241,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["angular/src/lib/pages/login/login.component.ts:12",{"_index":246,"title":{},"body":{"components/LoginComponent.html":{}}}],["angular/src/lib/pages/login/login.component.ts:8",{"_index":245,"title":{},"body":{"components/LoginComponent.html":{}}}],["angular/src/lib/pages/user/user.component.t",{"_index":506,"title":{},"body":{"components/UserComponent.html":{},"coverage.html":{}}}],["angular/src/lib/pages/user/user.component.ts:12",{"_index":510,"title":{},"body":{"components/UserComponent.html":{}}}],["angular/src/lib/pages/user/user.component.ts:8",{"_index":509,"title":{},"body":{"components/UserComponent.html":{}}}],["angular/src/lib/pages/workflow",{"_index":309,"title":{},"body":{"interfaces/MidgardState.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{}}}],["angular/src/lib/state/midgard.act",{"_index":524,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["angular/src/lib/state/midgard.actions.t",{"_index":571,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["angular/src/lib/state/midgard.ep",{"_index":443,"title":{},"body":{"injectables/Store.html":{}}}],["angular/src/lib/state/midgard.epics.t",{"_index":583,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angular/src/lib/state/midgard.model.t",{"_index":305,"title":{},"body":{"interfaces/MidgardState.html":{},"coverage.html":{}}}],["angular/src/lib/state/midgard.reduc",{"_index":445,"title":{},"body":{"injectables/Store.html":{}}}],["angular/src/lib/state/midgard.reducer.t",{"_index":587,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":181,"title":{},"body":{"injectables/HttpService.html":{}}}],["apollo",{"_index":95,"title":{},"body":{"modules/GraphQLModule.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"components/WorkflowLevel1Component.html":{},"miscellaneous/functions.html":{}}}],["apollo_opt",{"_index":94,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo_overwrit",{"_index":405,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apollo_reset",{"_index":406,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apollo_writ",{"_index":407,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apollolink",{"_index":126,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["apollomodul",{"_index":93,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apolloreduc",{"_index":411,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apolloreducer(st",{"_index":608,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apolloreducerconfig",{"_index":353,"title":{},"body":{"classes/ReduxCache.html":{}}}],["app",{"_index":231,"title":{},"body":{"components/ListComponent.html":{},"index.html":{}}}],["artifact",{"_index":637,"title":{},"body":{"index.html":{}}}],["assum",{"_index":142,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["auth",{"_index":132,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["auth.concat(http",{"_index":147,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authent",{"_index":135,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["author",{"_index":198,"title":{},"body":{"injectables/HttpService.html":{}}}],["automat",{"_index":631,"title":{},"body":{"index.html":{}}}],["avail",{"_index":263,"title":{},"body":{"components/MidgardComponent.html":{},"modules.html":{}}}],["bar",{"_index":333,"title":{},"body":{"components/NavBarComponent.html":{},"components/TopBarComponent.html":{}}}],["bar'},{'nam",{"_index":76,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["bar.compon",{"_index":290,"title":{},"body":{"modules/MidgardModule.html":{}}}],["bar.component.html",{"_index":335,"title":{},"body":{"components/NavBarComponent.html":{},"components/TopBarComponent.html":{}}}],["bar.component.scss",{"_index":334,"title":{},"body":{"components/NavBarComponent.html":{},"components/TopBarComponent.html":{}}}],["bar.component.t",{"_index":332,"title":{},"body":{"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:12",{"_index":337,"title":{},"body":{"components/NavBarComponent.html":{},"components/TopBarComponent.html":{}}}],["bar.component.ts:8",{"_index":336,"title":{},"body":{"components/NavBarComponent.html":{},"components/TopBarComponent.html":{}}}],["bar/nav",{"_index":289,"title":{},"body":{"modules/MidgardModule.html":{},"components/NavBarComponent.html":{},"coverage.html":{}}}],["bar/top",{"_index":292,"title":{},"body":{"modules/MidgardModule.html":{},"components/TopBarComponent.html":{},"coverage.html":{}}}],["beacus",{"_index":229,"title":{},"body":{"components/ListComponent.html":{}}}],["befor",{"_index":475,"title":{},"body":{"injectables/Store.html":{}}}],["bodi",{"_index":177,"title":{},"body":{"injectables/HttpService.html":{}}}],["boolean",{"_index":123,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/MidgardState.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":5,"title":{},"body":{"modules/CrudModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"overview.html":{}}}],["brows",{"_index":658,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":596,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":636,"title":{},"body":{"index.html":{}}}],["cac`h",{"_index":121,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["cach",{"_index":104,"title":{},"body":{"modules/GraphQLModule.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cache.writeopt",{"_index":351,"title":{},"body":{"classes/ReduxCache.html":{}}}],["case",{"_index":117,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["catcherror",{"_index":194,"title":{},"body":{"injectables/HttpService.html":{}}}],["catcherror((error",{"_index":202,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["celltempl",{"_index":541,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["chang",{"_index":233,"title":{},"body":{"components/ListComponent.html":{},"injectables/Store.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":654,"title":{},"body":{"index.html":{}}}],["class",{"_index":34,"title":{"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{}},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":382,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["cli",{"_index":621,"title":{},"body":{"index.html":{}}}],["client",{"_index":323,"title":{},"body":{"modules/MidgardTranslationModule.html":{},"miscellaneous/functions.html":{}}}],["clonedeep",{"_index":358,"title":{},"body":{"classes/ReduxCache.html":{}}}],["cluster_crudmodul",{"_index":8,"title":{},"body":{"modules/CrudModule.html":{},"overview.html":{}}}],["cluster_crudmodule_declar",{"_index":9,"title":{},"body":{"modules/CrudModule.html":{},"overview.html":{}}}],["cluster_crudmodule_export",{"_index":10,"title":{},"body":{"modules/CrudModule.html":{},"overview.html":{}}}],["cluster_midgardmodul",{"_index":273,"title":{},"body":{"modules/MidgardModule.html":{},"overview.html":{}}}],["cluster_midgardmodule_declar",{"_index":274,"title":{},"body":{"modules/MidgardModule.html":{},"overview.html":{}}}],["cluster_midgardmodule_export",{"_index":276,"title":{},"body":{"modules/MidgardModule.html":{},"overview.html":{}}}],["cluster_midgardmodule_import",{"_index":275,"title":{},"body":{"modules/MidgardModule.html":{},"overview.html":{}}}],["cluster_midgardtranslationmodul",{"_index":314,"title":{},"body":{"modules/MidgardTranslationModule.html":{},"overview.html":{}}}],["cluster_midgardtranslationmodule_declar",{"_index":315,"title":{},"body":{"modules/MidgardTranslationModule.html":{},"overview.html":{}}}],["code",{"_index":633,"title":{},"body":{"index.html":{}}}],["column",{"_index":534,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["combin",{"_index":458,"title":{},"body":{"injectables/Store.html":{}}}],["combinedep",{"_index":460,"title":{},"body":{"injectables/Store.html":{}}}],["combinedreduc",{"_index":456,"title":{},"body":{"injectables/Store.html":{}}}],["combineep",{"_index":437,"title":{},"body":{"injectables/Store.html":{}}}],["combineepics(...ep",{"_index":461,"title":{},"body":{"injectables/Store.html":{}}}],["combineepics(loadworkflowlevel1dataep",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commonmodul",{"_index":25,"title":{},"body":{"modules/CrudModule.html":{},"modules/MidgardModule.html":{}}}],["complet",{"_index":486,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["compon",{"_index":33,"title":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["component_templ",{"_index":66,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["components/nav",{"_index":288,"title":{},"body":{"modules/MidgardModule.html":{}}}],["components/top",{"_index":291,"title":{},"body":{"modules/MidgardModule.html":{}}}],["composewithdevtool",{"_index":439,"title":{},"body":{"injectables/Store.html":{}}}],["config",{"_index":349,"title":{},"body":{"classes/ReduxCache.html":{}}}],["console.log('graphql",{"_index":531,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["const",{"_index":32,"title":{},"body":{"modules/CrudModule.html":{},"modules/GraphQLModule.html":{},"injectables/HttpService.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":408,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["constructor",{"_index":55,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["constructor(apollo",{"_index":519,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["constructor(config",{"_index":346,"title":{},"body":{"classes/ReduxCache.html":{}}}],["constructor(http",{"_index":497,"title":{},"body":{"components/TranslationLoader.html":{}}}],["constructor(priv",{"_index":503,"title":{},"body":{"components/TranslationLoader.html":{}}}],["constructor(reduxcacheconfig",{"_index":388,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["constructor(stor",{"_index":217,"title":{},"body":{"components/ListComponent.html":{}}}],["constructor(transl",{"_index":250,"title":{},"body":{"components/MidgardComponent.html":{}}}],["contact",{"_index":188,"title":{},"body":{"injectables/HttpService.html":{},"components/NavBarComponent.html":{}}}],["contactsep",{"_index":448,"title":{},"body":{"injectables/Store.html":{}}}],["contactsreduc",{"_index":446,"title":{},"body":{"injectables/Store.html":{}}}],["context",{"_index":110,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["convert",{"_index":436,"title":{},"body":{"injectables/Store.html":{}}}],["core",{"_index":192,"title":{},"body":{"injectables/HttpService.html":{},"injectables/Store.html":{}}}],["coverag",{"_index":549,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":459,"title":{},"body":{"injectables/Store.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["create_d",{"_index":512,"title":{},"body":{"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["createapollo",{"_index":152,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createapollo(httplink",{"_index":128,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["createepicmiddlewar",{"_index":438,"title":{},"body":{"injectables/Store.html":{}}}],["createtranslateload",{"_index":329,"title":{},"body":{"modules/MidgardTranslationModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(httpservic",{"_index":325,"title":{},"body":{"modules/MidgardTranslationModule.html":{},"miscellaneous/functions.html":{}}}],["crud",{"_index":46,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["crudmodul",{"_index":1,"title":{"modules/CrudModule.html":{}},"body":{"modules/CrudModule.html":{},"modules/MidgardModule.html":{},"modules.html":{},"overview.html":{}}}],["current",{"_index":260,"title":{},"body":{"components/MidgardComponent.html":{}}}],["data",{"_index":189,"title":{},"body":{"injectables/HttpService.html":{},"components/ListComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"components/WorkflowLevel1Component.html":{},"miscellaneous/functions.html":{}}}],["dataid",{"_index":366,"title":{},"body":{"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["dataidfromobject",{"_index":373,"title":{},"body":{"classes/ReduxCache.html":{}}}],["dataload",{"_index":306,"title":{},"body":{"interfaces/MidgardState.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":539,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["declar",{"_index":4,"title":{},"body":{"modules/CrudModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"overview.html":{}}}],["default",{"_index":182,"title":{},"body":{"injectables/HttpService.html":{},"components/ListComponent.html":{},"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":56,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["definetableopt",{"_index":518,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["delet",{"_index":383,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["delete(dataid",{"_index":392,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["dep",{"_index":153,"title":{},"body":{"modules/GraphQLModule.html":{},"modules/MidgardTranslationModule.html":{}}}],["depend",{"_index":2,"title":{"dependencies.html":{}},"body":{"modules/CrudModule.html":{},"components/ListComponent.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":175,"title":{},"body":{"injectables/HttpService.html":{},"modules/MidgardTranslationModule.html":{},"injectables/Store.html":{},"miscellaneous/functions.html":{}}}],["detail",{"_index":47,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail'},{'nam",{"_index":68,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["detail.component.css",{"_index":49,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail.component.html",{"_index":51,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail/detail.compon",{"_index":27,"title":{},"body":{"modules/CrudModule.html":{}}}],["detailcompon",{"_index":11,"title":{"components/DetailComponent.html":{}},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":628,"title":{},"body":{"index.html":{}}}],["develop",{"_index":624,"title":{},"body":{"index.html":{}}}],["devtool",{"_index":440,"title":{},"body":{"injectables/Store.html":{}}}],["direct",{"_index":64,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":635,"title":{},"body":{"index.html":{}}}],["directori",{"_index":639,"title":{},"body":{"index.html":{}}}],["dispatch",{"_index":420,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["dispos",{"_index":431,"title":{},"body":{"injectables/Store.html":{}}}],["dist",{"_index":638,"title":{},"body":{"index.html":{}}}],["document",{"_index":371,"title":{},"body":{"classes/ReduxCache.html":{},"coverage.html":{}}}],["dom",{"_index":38,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["dynam",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":187,"title":{},"body":{"injectables/HttpService.html":{}}}],["e2",{"_index":648,"title":{},"body":{"index.html":{}}}],["element",{"_index":63,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["emit",{"_index":429,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":647,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":186,"title":{},"body":{"injectables/HttpService.html":{},"components/TranslationLoader.html":{}}}],["enhanc",{"_index":466,"title":{},"body":{"injectables/Store.html":{}}}],["environ",{"_index":113,"title":{},"body":{"modules/GraphQLModule.html":{},"modules/MidgardTranslationModule.html":{}}}],["environment.api_url}/graphql",{"_index":116,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["environment.api_url}/i18n",{"_index":327,"title":{},"body":{"modules/MidgardTranslationModule.html":{}}}],["environment.api_url}/workflowlevel1/`).pip",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.api_url}/workflowlevel2/`).pip",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["epic",{"_index":455,"title":{},"body":{"injectables/Store.html":{}}}],["epicmiddlewar",{"_index":462,"title":{},"body":{"injectables/Store.html":{}}}],["epicmiddleware.run(combinedep",{"_index":467,"title":{},"body":{"injectables/Store.html":{}}}],["error",{"_index":173,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/functions.html":{}}}],["error(err",{"_index":484,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["exampl",{"_index":141,"title":{},"body":{"modules/GraphQLModule.html":{},"components/WorkflowLevel1Component.html":{}}}],["execut",{"_index":644,"title":{},"body":{"index.html":{}}}],["exist",{"_index":144,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["export",{"_index":7,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"overview.html":{}}}],["extend",{"_index":344,"title":{},"body":{"classes/ReduxCache.html":{}}}],["extens",{"_index":441,"title":{},"body":{"injectables/Store.html":{}}}],["fail",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fallback",{"_index":257,"title":{},"body":{"components/MidgardComponent.html":{}}}],["fals",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":538,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["fix",{"_index":232,"title":{},"body":{"components/ListComponent.html":{}}}],["flag",{"_index":641,"title":{},"body":{"index.html":{}}}],["flex",{"_index":536,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["forroot",{"_index":271,"title":{},"body":{"modules/MidgardHttpModule.html":{},"modules/MigardStoreModule.html":{}}}],["found",{"_index":259,"title":{},"body":{"components/MidgardComponent.html":{}}}],["fragmentmatcherfunct",{"_index":375,"title":{},"body":{"classes/ReduxCache.html":{}}}],["function",{"_index":127,"title":{"miscellaneous/functions.html":{}},"body":{"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"modules/MidgardTranslationModule.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["further",{"_index":650,"title":{},"body":{"index.html":{}}}],["gener",{"_index":620,"title":{},"body":{"index.html":{}}}],["get",{"_index":501,"title":{"index.html":{}},"body":{"components/TranslationLoader.html":{}}}],["get(dataid",{"_index":394,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["get,post,put",{"_index":185,"title":{},"body":{"injectables/HttpService.html":{}}}],["getreduc",{"_index":384,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["getstat",{"_index":421,"title":{},"body":{"injectables/Store.html":{}}}],["gettransl",{"_index":496,"title":{},"body":{"components/TranslationLoader.html":{}}}],["gettranslation(lang",{"_index":499,"title":{},"body":{"components/TranslationLoader.html":{}}}],["go",{"_index":653,"title":{},"body":{"index.html":{}}}],["gql",{"_index":525,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["graph",{"_index":659,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":120,"title":{},"body":{"modules/GraphQLModule.html":{},"components/WorkflowLevel1Component.html":{},"miscellaneous/functions.html":{}}}],["graphqlmodul",{"_index":90,"title":{"modules/GraphQLModule.html":{}},"body":{"modules/GraphQLModule.html":{},"modules/MidgardModule.html":{},"modules.html":{},"overview.html":{}}}],["handl",{"_index":172,"title":{},"body":{"injectables/HttpService.html":{}}}],["handleerror",{"_index":168,"title":{},"body":{"injectables/HttpService.html":{}}}],["handleerror(error",{"_index":170,"title":{},"body":{"injectables/HttpService.html":{}}}],["happen",{"_index":476,"title":{},"body":{"injectables/Store.html":{}}}],["hardcod",{"_index":138,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["header",{"_index":134,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/HttpService.html":{}}}],["help",{"_index":651,"title":{},"body":{"index.html":{}}}],["html",{"_index":62,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["http",{"_index":100,"title":{"interfaces/Http.html":{}},"body":{"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"modules/MidgardTranslationModule.html":{},"components/TranslationLoader.html":{},"coverage.html":{}}}],["http.request(url",{"_index":199,"title":{},"body":{"injectables/HttpService.html":{}}}],["http/http.servic",{"_index":320,"title":{},"body":{"modules/MidgardTranslationModule.html":{},"components/TranslationLoader.html":{}}}],["http://localhost:4200",{"_index":630,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":319,"title":{},"body":{"modules/MidgardTranslationModule.html":{}}}],["httpclientmodul",{"_index":298,"title":{},"body":{"modules/MidgardModule.html":{}}}],["httpheader",{"_index":111,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httpheaders().set('author",{"_index":146,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httplink",{"_index":98,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["httplink.creat",{"_index":131,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httplinkmodul",{"_index":97,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httpservic",{"_index":165,"title":{"injectables/HttpService.html":{}},"body":{"injectables/HttpService.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardTranslationModule.html":{},"components/TranslationLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpservice.makerequest('get",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":513,"title":{},"body":{"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{}}}],["identifi",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":41,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"components/TopBarComponent.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["index",{"_index":52,"title":{"index.html":{}},"body":{"components/DetailComponent.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"interfaces/MidgardState.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{}}}],["init",{"_index":430,"title":{},"body":{"injectables/Store.html":{}}}],["initialst",{"_index":559,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":164,"title":{"injectables/HttpService.html":{},"injectables/Store.html":{}},"body":{"injectables/HttpService.html":{},"injectables/Store.html":{},"coverage.html":{},"overview.html":{}}}],["injectiontoken",{"_index":92,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["inmemori",{"_index":105,"title":{},"body":{"modules/GraphQLModule.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["inmemorycach",{"_index":103,"title":{},"body":{"modules/GraphQLModule.html":{},"classes/ReduxCache.html":{},"miscellaneous/functions.html":{}}}],["input",{"_index":212,"title":{},"body":{"components/ListComponent.html":{}}}],["instanc",{"_index":145,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/Store.html":{}}}],["interfac",{"_index":154,"title":{"interfaces/Http.html":{},"interfaces/MidgardState.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"interfaces/WorkflowLevel1.html":{},"interfaces/WorkflowLevel2.html":{}},"body":{"interfaces/Http.html":{},"interfaces/MidgardState.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"interfaces/WorkflowLevel1.html":{},"interfaces/WorkflowLevel2.html":{},"coverage.html":{},"overview.html":{}}}],["intialias",{"_index":609,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isn't",{"_index":258,"title":{},"body":{"components/MidgardComponent.html":{}}}],["karma",{"_index":646,"title":{},"body":{"index.html":{}}}],["key",{"_index":228,"title":{},"body":{"components/ListComponent.html":{},"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["lang",{"_index":262,"title":{},"body":{"components/MidgardComponent.html":{},"components/TranslationLoader.html":{}}}],["languag",{"_index":256,"title":{},"body":{"components/MidgardComponent.html":{}}}],["legend",{"_index":3,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"overview.html":{}}}],["level",{"_index":340,"title":{},"body":{"components/NavBarComponent.html":{}}}],["level1",{"_index":339,"title":{},"body":{"components/NavBarComponent.html":{},"components/WorkflowLevel1Component.html":{}}}],["level1'},{'nam",{"_index":86,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["level1.compon",{"_index":283,"title":{},"body":{"modules/MidgardModule.html":{}}}],["level1.component.html",{"_index":517,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["level1.component.scss",{"_index":516,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["level1.component.t",{"_index":515,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"coverage.html":{}}}],["level1.component.ts:15",{"_index":520,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["level1.component.ts:21",{"_index":522,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["level1.component.ts:40",{"_index":521,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["level1.model",{"_index":311,"title":{},"body":{"interfaces/MidgardState.html":{},"components/WorkflowLevel1Component.html":{}}}],["level1.model.t",{"_index":511,"title":{},"body":{"interfaces/WorkflowLevel1.html":{},"coverage.html":{}}}],["level1/state/workflow",{"_index":310,"title":{},"body":{"interfaces/MidgardState.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"coverage.html":{}}}],["level1/workflow",{"_index":282,"title":{},"body":{"modules/MidgardModule.html":{},"components/WorkflowLevel1Component.html":{},"coverage.html":{}}}],["level2",{"_index":88,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["level2.compon",{"_index":285,"title":{},"body":{"modules/MidgardModule.html":{}}}],["level2.component.html",{"_index":545,"title":{},"body":{"components/WorkflowLevel2Component.html":{}}}],["level2.component.scss",{"_index":544,"title":{},"body":{"components/WorkflowLevel2Component.html":{}}}],["level2.component.t",{"_index":543,"title":{},"body":{"components/WorkflowLevel2Component.html":{},"coverage.html":{}}}],["level2.component.ts:12",{"_index":548,"title":{},"body":{"components/WorkflowLevel2Component.html":{}}}],["level2.component.ts:15",{"_index":547,"title":{},"body":{"components/WorkflowLevel2Component.html":{}}}],["level2.component.ts:9",{"_index":546,"title":{},"body":{"components/WorkflowLevel2Component.html":{}}}],["level2.model",{"_index":313,"title":{},"body":{"interfaces/MidgardState.html":{}}}],["level2.model.t",{"_index":542,"title":{},"body":{"interfaces/WorkflowLevel2.html":{},"coverage.html":{}}}],["level2/state/workflow",{"_index":312,"title":{},"body":{"interfaces/MidgardState.html":{},"interfaces/WorkflowLevel2.html":{},"coverage.html":{}}}],["level2/workflow",{"_index":284,"title":{},"body":{"modules/MidgardModule.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{}}}],["libs/contacts/src/lib/state/contacts.ep",{"_index":449,"title":{},"body":{"injectables/Store.html":{}}}],["libs/contacts/src/lib/state/contacts.reduc",{"_index":447,"title":{},"body":{"injectables/Store.html":{}}}],["libs/freyja/src/lib/table/table.modul",{"_index":31,"title":{},"body":{"modules/CrudModule.html":{}}}],["libs/midgard",{"_index":28,"title":{},"body":{"modules/CrudModule.html":{},"modules/GraphQLModule.html":{},"components/ListComponent.html":{},"modules/MidgardModule.html":{},"interfaces/MidgardState.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/WorkflowLevel1Component.html":{}}}],["libs/products/src/lib/state/products.ep",{"_index":453,"title":{},"body":{"injectables/Store.html":{}}}],["libs/products/src/lib/state/products.reduc",{"_index":451,"title":{},"body":{"injectables/Store.html":{}}}],["link",{"_index":99,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["list",{"_index":207,"title":{},"body":{"components/ListComponent.html":{}}}],["list'},{'nam",{"_index":69,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["list.component.css",{"_index":208,"title":{},"body":{"components/ListComponent.html":{}}}],["list.component.html",{"_index":209,"title":{},"body":{"components/ListComponent.html":{}}}],["listcompon",{"_index":13,"title":{"components/ListComponent.html":{}},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["listen",{"_index":471,"title":{},"body":{"injectables/Store.html":{}}}],["load",{"_index":227,"title":{},"body":{"components/ListComponent.html":{},"modules/MidgardTranslationModule.html":{}}}],["load_data_workflowlevel1",{"_index":577,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["load_data_workflowlevel1_commit",{"_index":578,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["load_data_workflowlevel1_fail",{"_index":579,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["load_data_workflowlevel2",{"_index":580,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["load_data_workflowlevel2_commit",{"_index":581,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["load_data_workflowlevel2_fail",{"_index":582,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadact",{"_index":213,"title":{},"body":{"components/ListComponent.html":{}}}],["loader",{"_index":264,"title":{},"body":{"components/MidgardComponent.html":{},"modules/MidgardTranslationModule.html":{},"components/TranslationLoader.html":{}}}],["loader'},{'nam",{"_index":81,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["loader.compon",{"_index":322,"title":{},"body":{"modules/MidgardTranslationModule.html":{}}}],["loader.component.css",{"_index":494,"title":{},"body":{"components/TranslationLoader.html":{}}}],["loader.component.html",{"_index":495,"title":{},"body":{"components/TranslationLoader.html":{}}}],["loader.component.t",{"_index":493,"title":{},"body":{"components/TranslationLoader.html":{},"coverage.html":{}}}],["loader.component.ts:10",{"_index":498,"title":{},"body":{"components/TranslationLoader.html":{}}}],["loader.component.ts:12",{"_index":502,"title":{},"body":{"components/TranslationLoader.html":{}}}],["loader.component.ts:17",{"_index":500,"title":{},"body":{"components/TranslationLoader.html":{}}}],["loader/transl",{"_index":321,"title":{},"body":{"modules/MidgardTranslationModule.html":{},"components/TranslationLoader.html":{},"coverage.html":{}}}],["loadworkflowlevel1data",{"_index":523,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadworkflowlevel1datacommit",{"_index":572,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadworkflowlevel1datacommit(data",{"_index":610,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadworkflowlevel1datacommit(res.data",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadworkflowlevel1dataep",{"_index":584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadworkflowlevel1datafail",{"_index":573,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadworkflowlevel1datafail(error",{"_index":611,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadworkflowlevel2data",{"_index":574,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadworkflowlevel2datacommit",{"_index":575,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadworkflowlevel2datacommit(data",{"_index":612,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loadworkflowlevel2datacommit(res.data",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadworkflowlevel2dataep",{"_index":585,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadworkflowlevel2datafail",{"_index":576,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadworkflowlevel2datafail(error",{"_index":613,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lodash",{"_index":359,"title":{},"body":{"classes/ReduxCache.html":{}}}],["login",{"_index":242,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":71,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["login.component.css",{"_index":243,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":244,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":70,"title":{"components/LoginComponent.html":{}},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["logo",{"_index":489,"title":{},"body":{"components/TopBarComponent.html":{}}}],["makerequest",{"_index":169,"title":{},"body":{"injectables/HttpService.html":{}}}],["makerequest(method",{"_index":176,"title":{},"body":{"injectables/HttpService.html":{}}}],["map(r",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":36,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["memori",{"_index":362,"title":{},"body":{"classes/ReduxCache.html":{}}}],["metadata",{"_index":43,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["method",{"_index":53,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["mg",{"_index":45,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["middlewar",{"_index":463,"title":{},"body":{"injectables/Store.html":{}}}],["midgard",{"_index":191,"title":{},"body":{"injectables/HttpService.html":{},"components/MidgardComponent.html":{},"injectables/Store.html":{}}}],["midgard'},{'nam",{"_index":73,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["midgard.compon",{"_index":280,"title":{},"body":{"modules/MidgardModule.html":{}}}],["midgard.component.html",{"_index":249,"title":{},"body":{"components/MidgardComponent.html":{}}}],["midgard.component.scss",{"_index":248,"title":{},"body":{"components/MidgardComponent.html":{}}}],["midgardapp",{"_index":618,"title":{},"body":{"index.html":{}}}],["midgardcompon",{"_index":72,"title":{"components/MidgardComponent.html":{}},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["midgardep",{"_index":442,"title":{},"body":{"injectables/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["midgardhttpmodul",{"_index":266,"title":{"modules/MidgardHttpModule.html":{}},"body":{"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules.html":{},"overview.html":{}}}],["midgardhttpmodule.forroot",{"_index":303,"title":{},"body":{"modules/MidgardModule.html":{}}}],["midgardmodul",{"_index":272,"title":{"modules/MidgardModule.html":{}},"body":{"modules/MidgardModule.html":{},"modules.html":{},"overview.html":{}}}],["midgardreduc",{"_index":444,"title":{},"body":{"injectables/Store.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["midgardreducer(st",{"_index":614,"title":{},"body":{"miscellaneous/functions.html":{}}}],["midgardroutingmodul",{"_index":295,"title":{},"body":{"modules/MidgardModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["midgardst",{"_index":304,"title":{"interfaces/MidgardState.html":{}},"body":{"interfaces/MidgardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["midgardtranslationmodul",{"_index":277,"title":{"modules/MidgardTranslationModule.html":{}},"body":{"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"modules.html":{},"overview.html":{}}}],["migardstoremodul",{"_index":278,"title":{"modules/MigardStoreModule.html":{}},"body":{"modules/MidgardModule.html":{},"modules/MigardStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["migardstoremodule.forroot",{"_index":302,"title":{},"body":{"modules/MidgardModule.html":{}}}],["miscellan",{"_index":601,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":214,"title":{},"body":{"components/ListComponent.html":{}}}],["modul",{"_index":0,"title":{"modules/CrudModule.html":{},"modules/GraphQLModule.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"modules.html":{}},"body":{"modules/CrudModule.html":{},"modules/GraphQLModule.html":{},"components/ListComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":268,"title":{},"body":{"modules/MidgardHttpModule.html":{},"modules/MigardStoreModule.html":{}}}],["more",{"_index":652,"title":{},"body":{"index.html":{}}}],["name",{"_index":67,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nav",{"_index":75,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["navbarcompon",{"_index":74,"title":{"components/NavBarComponent.html":{}},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":629,"title":{},"body":{"index.html":{}}}],["new",{"_index":129,"title":{},"body":{"modules/GraphQLModule.html":{},"modules/MidgardTranslationModule.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newdata",{"_index":401,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["next(stat",{"_index":480,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":626,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":23,"title":{},"body":{"modules/CrudModule.html":{},"modules/GraphQLModule.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{}}}],["ngoninit",{"_index":54,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["ngx",{"_index":254,"title":{},"body":{"components/MidgardComponent.html":{},"modules/MidgardTranslationModule.html":{}}}],["normalizedcach",{"_index":380,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["normalizedcacheobject",{"_index":399,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["null",{"_index":178,"title":{},"body":{"injectables/HttpService.html":{}}}],["number",{"_index":514,"title":{},"body":{"interfaces/WorkflowLevel1.html":{},"interfaces/WorkflowLevel2.html":{}}}],["object",{"_index":163,"title":{},"body":{"interfaces/Http.html":{},"classes/ReduxCache.html":{},"injectables/Store.html":{}}}],["observ",{"_index":158,"title":{},"body":{"interfaces/Http.html":{},"injectables/HttpService.html":{},"injectables/Store.html":{},"components/TranslationLoader.html":{},"miscellaneous/variables.html":{}}}],["observable(observ",{"_index":477,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["observable.create(observ",{"_index":427,"title":{},"body":{"injectables/Store.html":{}}}],["observer.complet",{"_index":487,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["observer.error(err",{"_index":485,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["observer.next(state[reducer][key",{"_index":483,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["observer.next(storeinstance.getst",{"_index":428,"title":{},"body":{"injectables/Store.html":{}}}],["of(loadworkflowlevel1datafail(error",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["of(loadworkflowlevel2datafail(error",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oftype(load_data_workflowlevel1",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oftype(load_data_workflowlevel2",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oldstat",{"_index":474,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["oldstate[reducer][key",{"_index":482,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["oninit",{"_index":42,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["option",{"_index":162,"title":{},"body":{"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/MidgardComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"components/TranslationLoader.html":{},"components/WorkflowLevel1Component.html":{},"miscellaneous/functions.html":{}}}],["options).pip",{"_index":200,"title":{},"body":{"injectables/HttpService.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/CrudModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":660,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrit",{"_index":361,"title":{},"body":{"classes/ReduxCache.html":{}}}],["packag",{"_index":589,"title":{"dependencies.html":{}},"body":{}}],["pages/login/login.compon",{"_index":287,"title":{},"body":{"modules/MidgardModule.html":{}}}],["pages/user/user.compon",{"_index":286,"title":{},"body":{"modules/MidgardModule.html":{}}}],["pages/workflow",{"_index":281,"title":{},"body":{"modules/MidgardModule.html":{}}}],["param",{"_index":122,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/HttpService.html":{},"modules/MidgardTranslationModule.html":{},"injectables/Store.html":{},"miscellaneous/functions.html":{}}}],["paramet",{"_index":174,"title":{},"body":{"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/MidgardComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"injectables/Store.html":{},"components/TranslationLoader.html":{},"components/WorkflowLevel1Component.html":{},"miscellaneous/functions.html":{}}}],["privat",{"_index":167,"title":{},"body":{"injectables/HttpService.html":{},"components/ListComponent.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["prod",{"_index":640,"title":{},"body":{"index.html":{}}}],["product",{"_index":342,"title":{},"body":{"components/NavBarComponent.html":{},"index.html":{}}}],["productsep",{"_index":452,"title":{},"body":{"injectables/Store.html":{}}}],["productsreduc",{"_index":450,"title":{},"body":{"injectables/Store.html":{}}}],["profil",{"_index":491,"title":{},"body":{"components/TopBarComponent.html":{}}}],["project",{"_index":619,"title":{},"body":{"index.html":{}}}],["projects/.../constants.t",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../crud.module.t",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../graphql.module.t",{"_index":603,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../midgard",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../midgard.actions.t",{"_index":605,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../midgard.epics.t",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../midgard.reducer.t",{"_index":606,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../reducer.t",{"_index":602,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../reduxcache.t",{"_index":666,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../reduxnormalizedcache.t",{"_index":607,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../store.t",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../translation.module.t",{"_index":604,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/midgard",{"_index":20,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["prop",{"_index":535,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["properti",{"_index":143,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"components/ListComponent.html":{},"interfaces/MidgardState.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TranslationLoader.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"miscellaneous/variables.html":{}}}],["protractor",{"_index":649,"title":{},"body":{"index.html":{}}}],["provid",{"_index":6,"title":{},"body":{"modules/CrudModule.html":{},"modules/GraphQLModule.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"overview.html":{}}}],["public",{"_index":210,"title":{},"body":{"components/ListComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TranslationLoader.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["queri",{"_index":528,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["read",{"_index":140,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["readm",{"_index":655,"title":{},"body":{"index.html":{}}}],["reduc",{"_index":215,"title":{},"body":{"components/ListComponent.html":{},"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["redux",{"_index":108,"title":{},"body":{"modules/GraphQLModule.html":{},"components/ListComponent.html":{},"injectables/Store.html":{},"miscellaneous/functions.html":{}}}],["redux.applymiddleware(epicmiddlewar",{"_index":465,"title":{},"body":{"injectables/Store.html":{}}}],["redux.combinereducers(reduc",{"_index":457,"title":{},"body":{"injectables/Store.html":{}}}],["redux.createstor",{"_index":464,"title":{},"body":{"injectables/Store.html":{}}}],["redux/constants.t",{"_index":557,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["redux/reducer.t",{"_index":558,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["redux/reduxcache.t",{"_index":343,"title":{},"body":{"classes/ReduxCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["redux/reduxcache.ts:18",{"_index":348,"title":{},"body":{"classes/ReduxCache.html":{}}}],["redux/reduxcache.ts:25",{"_index":352,"title":{},"body":{"classes/ReduxCache.html":{}}}],["redux/reduxnormalizedcache.t",{"_index":379,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["redux/reduxnormalizedcache.ts:19",{"_index":390,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["redux/reduxnormalizedcache.ts:20",{"_index":389,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["redux/reduxnormalizedcache.ts:26",{"_index":404,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["redux/reduxnormalizedcache.ts:29",{"_index":395,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["redux/reduxnormalizedcache.ts:32",{"_index":403,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["redux/reduxnormalizedcache.ts:38",{"_index":393,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["redux/reduxnormalizedcache.ts:44",{"_index":391,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["redux/reduxnormalizedcache.ts:49",{"_index":400,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["redux/reduxnormalizedcache.ts:56",{"_index":397,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["reduxcach",{"_index":106,"title":{"classes/ReduxCache.html":{}},"body":{"modules/GraphQLModule.html":{},"classes/ReduxCache.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["reduxcache({stor",{"_index":130,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["reduxcacheconfig",{"_index":347,"title":{},"body":{"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["reduxcacheconfig.reduxrootselector",{"_index":410,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["reduxcacheconfig.stor",{"_index":413,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["reduxnormalizedcach",{"_index":357,"title":{"classes/ReduxNormalizedCache.html":{}},"body":{"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"coverage.html":{}}}],["reduxnormalizedcache(reduxcacheconfig",{"_index":418,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["reduxnormalizedcacheconfig",{"_index":355,"title":{"interfaces/ReduxNormalizedCacheConfig.html":{}},"body":{"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"coverage.html":{}}}],["reduxnormalizedcachefactori",{"_index":356,"title":{},"body":{"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["reduxnormalizedcachefactory(config",{"_index":364,"title":{},"body":{"classes/ReduxCache.html":{}}}],["reduxnormalizedcachefactory(reduxcacheconfig",{"_index":615,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reduxrootselector",{"_index":381,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["reload",{"_index":632,"title":{},"body":{"index.html":{}}}],["replac",{"_index":385,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["replace(newdata",{"_index":398,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["request",{"_index":156,"title":{},"body":{"interfaces/Http.html":{},"injectables/HttpService.html":{},"modules/MidgardTranslationModule.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/CrudModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"overview.html":{}}}],["respons",{"_index":190,"title":{},"body":{"injectables/HttpService.html":{}}}],["result",{"_index":35,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retri",{"_index":196,"title":{},"body":{"injectables/HttpService.html":{}}}],["retry(3",{"_index":201,"title":{},"body":{"injectables/HttpService.html":{}}}],["return",{"_index":59,"title":{},"body":{"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["routermodule.forchild(midgardrout",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routing.modul",{"_index":297,"title":{},"body":{"modules/MidgardModule.html":{}}}],["routing.module.t",{"_index":554,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":211,"title":{},"body":{"components/ListComponent.html":{}}}],["run",{"_index":625,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":159,"title":{},"body":{"interfaces/Http.html":{},"injectables/HttpService.html":{},"injectables/Store.html":{},"components/TranslationLoader.html":{}}}],["rxjs/internal/oper",{"_index":197,"title":{},"body":{"injectables/HttpService.html":{}}}],["rxjs/oper",{"_index":195,"title":{},"body":{"injectables/HttpService.html":{}}}],["scaffold",{"_index":634,"title":{},"body":{"index.html":{}}}],["select",{"_index":224,"title":{},"body":{"components/ListComponent.html":{},"injectables/Store.html":{},"components/WorkflowLevel1Component.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["select(this.reduc",{"_index":237,"title":{},"body":{"components/ListComponent.html":{}}}],["selector",{"_index":44,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["send",{"_index":180,"title":{},"body":{"injectables/HttpService.html":{},"modules/MidgardTranslationModule.html":{}}}],["serv",{"_index":627,"title":{},"body":{"index.html":{}}}],["server",{"_index":205,"title":{},"body":{"injectables/HttpService.html":{},"components/TranslationLoader.html":{},"index.html":{}}}],["set",{"_index":386,"title":{},"body":{"classes/ReduxNormalizedCache.html":{}}}],["set(dataid",{"_index":402,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["setcontext",{"_index":109,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["setcontext((_",{"_index":133,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["sortabl",{"_index":537,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["sourc",{"_index":18,"title":{},"body":{"modules/CrudModule.html":{},"components/DetailComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardHttpModule.html":{},"modules/MidgardModule.html":{},"interfaces/MidgardState.html":{},"modules/MidgardTranslationModule.html":{},"modules/MigardStoreModule.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["source.subscrib",{"_index":479,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["specif",{"_index":473,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environ",{"_index":114,"title":{},"body":{"modules/GraphQLModule.html":{},"modules/MidgardTranslationModule.html":{}}}],["start",{"_index":617,"title":{"index.html":{}},"body":{}}],["state",{"_index":230,"title":{},"body":{"components/ListComponent.html":{},"injectables/Store.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state[reducer][key",{"_index":481,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":270,"title":{},"body":{"modules/MidgardHttpModule.html":{},"modules/MigardStoreModule.html":{}}}],["store",{"_index":101,"title":{"injectables/Store.html":{}},"body":{"modules/GraphQLModule.html":{},"components/ListComponent.html":{},"modules/MigardStoreModule.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/WorkflowLevel1Component.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["store.observ",{"_index":469,"title":{},"body":{"injectables/Store.html":{}}}],["storeinst",{"_index":454,"title":{},"body":{"injectables/Store.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storeinstance.getst",{"_index":478,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["storeinstance.subscrib",{"_index":432,"title":{},"body":{"injectables/Store.html":{}}}],["storeobject",{"_index":396,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["stream",{"_index":472,"title":{},"body":{"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":161,"title":{},"body":{"interfaces/Http.html":{},"injectables/HttpService.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TranslationLoader.html":{},"interfaces/WorkflowLevel1.html":{},"interfaces/WorkflowLevel2.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":48,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["subscrib",{"_index":239,"title":{},"body":{"components/ListComponent.html":{},"injectables/Store.html":{}}}],["subscribe((r",{"_index":530,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["success",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super(config",{"_index":360,"title":{},"body":{"classes/ReduxCache.html":{}}}],["support",{"_index":656,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":657,"title":{},"body":{"modules.html":{}}}],["switchmap((act",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabl",{"_index":225,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["tablemodul",{"_index":30,"title":{},"body":{"modules/CrudModule.html":{}}}],["tableopt",{"_index":216,"title":{},"body":{"components/ListComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":526,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["teardown",{"_index":433,"title":{},"body":{"injectables/Store.html":{}}}],["templat",{"_index":37,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["templateurl",{"_index":50,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["temporari",{"_index":137,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["test",{"_index":643,"title":{},"body":{"index.html":{}}}],["this.apollo.watchqueri",{"_index":527,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["this.broadcastwatch",{"_index":378,"title":{},"body":{"classes/ReduxCache.html":{}}}],["this.config.dataidfromobject",{"_index":374,"title":{},"body":{"classes/ReduxCache.html":{}}}],["this.config.fragmentmatcher.match",{"_index":376,"title":{},"body":{"classes/ReduxCache.html":{}}}],["this.config.storefactory(clonedeep(this.data.toobject",{"_index":365,"title":{},"body":{"classes/ReduxCache.html":{}}}],["this.data",{"_index":363,"title":{},"body":{"classes/ReduxCache.html":{}}}],["this.data.replace(data.toobject",{"_index":377,"title":{},"body":{"classes/ReduxCache.html":{}}}],["this.definetableopt",{"_index":532,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["this.endpoint}/${lang",{"_index":505,"title":{},"body":{"components/TranslationLoader.html":{}}}],["this.getreduc",{"_index":414,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["this.getreducer()[dataid",{"_index":415,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["this.handleerror(error",{"_index":203,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.makerequest('get",{"_index":504,"title":{},"body":{"components/TranslationLoader.html":{}}}],["this.loadact",{"_index":235,"title":{},"body":{"components/ListComponent.html":{}}}],["this.model",{"_index":238,"title":{},"body":{"components/ListComponent.html":{}}}],["this.reduxrootselector",{"_index":409,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["this.row",{"_index":240,"title":{},"body":{"components/ListComponent.html":{}}}],["this.stor",{"_index":412,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["this.store.dispatch",{"_index":234,"title":{},"body":{"components/ListComponent.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["this.store.getstate()[this.reduxrootselector",{"_index":417,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["this.store.observable.pip",{"_index":236,"title":{},"body":{"components/ListComponent.html":{}}}],["this.tableopt",{"_index":533,"title":{},"body":{"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["this.toobserv",{"_index":470,"title":{},"body":{"injectables/Store.html":{}}}],["this.transformdocument(write.queri",{"_index":372,"title":{},"body":{"classes/ReduxCache.html":{}}}],["throwerror",{"_index":193,"title":{},"body":{"injectables/HttpService.html":{}}}],["throwerror(error",{"_index":204,"title":{},"body":{"injectables/HttpService.html":{}}}],["token",{"_index":136,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/HttpService.html":{}}}],["toobject",{"_index":387,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{}}}],["toobserv",{"_index":422,"title":{},"body":{"injectables/Store.html":{}}}],["top",{"_index":78,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["topbarcompon",{"_index":77,"title":{"components/TopBarComponent.html":{}},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["translat",{"_index":80,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardTranslationModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["translate.setdefaultlang('en",{"_index":261,"title":{},"body":{"components/MidgardComponent.html":{}}}],["translate.use('en",{"_index":265,"title":{},"body":{"components/MidgardComponent.html":{}}}],["translate/cor",{"_index":255,"title":{},"body":{"components/MidgardComponent.html":{},"modules/MidgardTranslationModule.html":{}}}],["translatehttpload",{"_index":324,"title":{},"body":{"modules/MidgardTranslationModule.html":{}}}],["translateload",{"_index":317,"title":{},"body":{"modules/MidgardTranslationModule.html":{}}}],["translatemodul",{"_index":318,"title":{},"body":{"modules/MidgardTranslationModule.html":{}}}],["translatemodule.forroot",{"_index":328,"title":{},"body":{"modules/MidgardTranslationModule.html":{}}}],["translateservic",{"_index":251,"title":{},"body":{"components/MidgardComponent.html":{}}}],["translationload",{"_index":79,"title":{"components/TranslationLoader.html":{}},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardTranslationModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["translationloader(httpservic",{"_index":326,"title":{},"body":{"modules/MidgardTranslationModule.html":{}}}],["tree",{"_index":39,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["true",{"_index":150,"title":{},"body":{"modules/GraphQLModule.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["type",{"_index":157,"title":{},"body":{"interfaces/Http.html":{},"injectables/HttpService.html":{},"components/ListComponent.html":{},"components/MidgardComponent.html":{},"interfaces/MidgardState.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TranslationLoader.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"interfaces/WorkflowLevel2.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":664,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefin",{"_index":416,"title":{},"body":{"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"miscellaneous/functions.html":{}}}],["unit",{"_index":642,"title":{},"body":{"index.html":{}}}],["unsubscrib",{"_index":434,"title":{},"body":{"injectables/Store.html":{}}}],["uri",{"_index":115,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":160,"title":{},"body":{"interfaces/Http.html":{},"injectables/HttpService.html":{}}}],["us",{"_index":119,"title":{},"body":{"modules/GraphQLModule.html":{},"components/MidgardComponent.html":{},"injectables/Store.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["use_redux_cach",{"_index":148,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usefactori",{"_index":151,"title":{},"body":{"modules/GraphQLModule.html":{},"modules/MidgardTranslationModule.html":{}}}],["user",{"_index":490,"title":{},"body":{"components/TopBarComponent.html":{},"components/UserComponent.html":{}}}],["user'},{'nam",{"_index":83,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["user.component.css",{"_index":507,"title":{},"body":{"components/UserComponent.html":{}}}],["user.component.html",{"_index":508,"title":{},"body":{"components/UserComponent.html":{}}}],["usercompon",{"_index":82,"title":{"components/UserComponent.html":{}},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["usereduxcach",{"_index":124,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["usevalu",{"_index":149,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["valu",{"_index":183,"title":{},"body":{"injectables/HttpService.html":{},"components/ListComponent.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"miscellaneous/variables.html":{}}}],["valuechang",{"_index":529,"title":{},"body":{"components/WorkflowLevel1Component.html":{}}}],["var",{"_index":65,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["variabl",{"_index":369,"title":{"miscellaneous/variables.html":{}},"body":{"classes/ReduxCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["verb",{"_index":184,"title":{},"body":{"injectables/HttpService.html":{}}}],["version",{"_index":622,"title":{},"body":{"index.html":{}}}],["via",{"_index":645,"title":{},"body":{"index.html":{}}}],["void",{"_index":60,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"classes/ReduxCache.html":{},"classes/ReduxNormalizedCache.html":{},"interfaces/ReduxNormalizedCacheConfig.html":{},"injectables/Store.html":{},"components/TopBarComponent.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["want",{"_index":118,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["wether",{"_index":125,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["worflow",{"_index":338,"title":{},"body":{"components/NavBarComponent.html":{}}}],["work",{"_index":61,"title":{},"body":{"components/DetailComponent.html":{},"components/LoginComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel2Component.html":{}}}],["workflow",{"_index":85,"title":{},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{}}}],["workflowlevel1",{"_index":307,"title":{"interfaces/WorkflowLevel1.html":{}},"body":{"interfaces/MidgardState.html":{},"interfaces/WorkflowLevel1.html":{},"components/WorkflowLevel1Component.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["workflowlevel1compon",{"_index":84,"title":{"components/WorkflowLevel1Component.html":{}},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["workflowlevel2",{"_index":308,"title":{"interfaces/WorkflowLevel2.html":{}},"body":{"interfaces/MidgardState.html":{},"interfaces/WorkflowLevel2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["workflowlevel2compon",{"_index":87,"title":{"components/WorkflowLevel2Component.html":{}},"body":{"components/DetailComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MidgardComponent.html":{},"modules/MidgardModule.html":{},"components/NavBarComponent.html":{},"components/TopBarComponent.html":{},"components/TranslationLoader.html":{},"components/UserComponent.html":{},"components/WorkflowLevel1Component.html":{},"components/WorkflowLevel2Component.html":{},"coverage.html":{},"overview.html":{}}}],["write",{"_index":345,"title":{},"body":{"classes/ReduxCache.html":{}}}],["write(writ",{"_index":350,"title":{},"body":{"classes/ReduxCache.html":{}}}],["write.dataid",{"_index":367,"title":{},"body":{"classes/ReduxCache.html":{}}}],["write.result",{"_index":368,"title":{},"body":{"classes/ReduxCache.html":{}}}],["write.vari",{"_index":370,"title":{},"body":{"classes/ReduxCache.html":{}}}],["writeresulttostor",{"_index":354,"title":{},"body":{"classes/ReduxCache.html":{}}}],["ye",{"_index":616,"title":{},"body":{"miscellaneous/functions.html":{}}}],["zone.j",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/CrudModule.html":{},"modules/MidgardModule.html":{},"modules/MidgardTranslationModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/CrudModule.html":{"url":"modules/CrudModule.html","title":"module - CrudModule","body":"\n                   \n\n\n\n\n  Modules\n  CrudModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CrudModule\n\n\n\ncluster_CrudModule_declarations\n\n\n\ncluster_CrudModule_exports\n\n\n\n\nDetailComponent\n\nDetailComponent\n\n\n\nCrudModule\n\nCrudModule\n\nCrudModule -->\n\nDetailComponent->CrudModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nCrudModule -->\n\nListComponent->CrudModule\n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCrudModule->DetailComponent \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nCrudModule->ListComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/crud/crud.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DetailComponent\n                            \n                            \n                                ListComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DetailComponent\n                            \n                            \n                                    ListComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DetailComponent } from './detail/detail.component';\nimport { ListComponent } from '@libs/midgard-angular/src/lib/modules/crud/list/list.component';\nimport { TableModule } from '@libs/freyja/src/lib/table/table.module';\n\nconst components = [\n  ListComponent,\n  DetailComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TableModule\n  ],\n  declarations: components,\n  exports: components\n})\nexport class CrudModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailComponent.html":{"url":"components/DetailComponent.html","title":"component - DetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/modules/crud/detail/detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-crud-detail\n            \n\n            \n                styleUrls\n                detail.component.css\n            \n\n\n\n            \n                templateUrl\n                ./detail.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/modules/crud/detail/detail.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/crud/detail/detail.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mg-crud-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  detail works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  detail works!'\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLModule.html":{"url":"modules/GraphQLModule.html","title":"module - GraphQLModule","body":"\n                   \n\n\n\n\n  Modules\n  GraphQLModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/graphql/graphql.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { InjectionToken, NgModule } from '@angular/core';\nimport { ApolloModule, APOLLO_OPTIONS} from 'apollo-angular';\nimport { HttpLinkModule, HttpLink} from 'apollo-angular-link-http';\nimport { Store } from 'projects/midgard-angular/src/lib/modules/store/store';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ReduxCache } from '@libs/midgard-angular/src/lib/modules/graphql/apollo-cache-redux';\nimport { setContext } from 'apollo-link-context';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../../../../src/environments/environment';\n\nconst uri = `${environment.API_URL}/graphql`; // } store - our store in case we want to use it as graphQl cac`he\n * @param {boolean } useReduxCache - wether to use redux as graphQl cache or not\n * @returns {link: ApolloLink; cache: ReduxCache | InMemoryCache}\n */\nexport function createApollo(httpLink: HttpLink, store: Store, useReduxCache) {\n  const cache = (useReduxCache) ? new ReduxCache({store}) : new InMemoryCache();\n  const http = httpLink.create(\n      {\n        uri,\n      }\n    );\n  const auth = setContext((_, { headers }) => {\n    // get the authentication token, this is temporary hardcoded\n    const token = '94a37ce5e4a7a00f59f939fd57b0a3186db92bfd';\n    // return the headers to the context so httpLink can read them\n    // in this example we assume headers property exists\n    // and it is an instance of HttpHeaders\n    if (!token) {\n      return {};\n    } else {\n      return {\n        headers: new HttpHeaders().set('Authorization', `Token ${token}`)\n      };\n    }\n  });\n  return {\n    link: auth.concat(http),\n    cache: cache,\n  };\n}\nexport const USE_REDUX_CACHE = new InjectionToken('');\n\n@NgModule({\n  exports: [ApolloModule, HttpLinkModule],\n  providers: [\n    {\n      provide: USE_REDUX_CACHE,\n      useValue: true\n    },\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink, Store, USE_REDUX_CACHE],\n    },\n  ],\n})\nexport class GraphQLModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Http.html":{"url":"interfaces/Http.html","title":"interface - Http","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Http\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/http/types/http.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        request\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                    \n                                \n                                \n                                    \n                                        request:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface Http {\n  request: (url: string, options?: object) => Observable;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/http/http.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                makeRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/http/http.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            handles request errors\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nrequest error\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    observable of the error\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            makeRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \nmakeRequest(method: string, url: string, body: null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/http/http.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            function to send a Http request to the API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                \nHttp verb of the request (GET,POST,PUT,...)\n\n\n                                                        \n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                \nurl endpoint to send request to e.g ‘contacts’\n\n\n                                                        \n                                                \n                                                \n                                                        body\n                                                        \n                                                                    null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                        \n                                                                \ndata of the request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nresponse of the request or error\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { http } from 'midgard-core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { retry } from 'rxjs/internal/operators';\n\n@Injectable()\nexport class HttpService {\n  /**\n   * function to send a Http request to the API\n   * @param {string} method - Http verb of the request (GET,POST,PUT,...)\n   * @param {string} url - url endpoint to send request to e.g ‘contacts’\n   * @param {any} body - data of the request\n   * @returns {Observable} - response of the request or error\n   */\n  makeRequest(method: string, url: string, body = null): Observable {\n    const headers = {'Authorization' : 'Token 94a37ce5e4a7a00f59f939fd57b0a3186db92bfd'};\n    const options = {\n      method: 'get',\n      data: body,\n      headers: headers,\n    };\n    return http.request(url, options).pipe(\n      retry(3),\n      catchError((error) => this.handleError(error))\n    );\n  }\n\n  /**\n   * handles request errors\n   * @param error - request error\n   * @returns observable of the error\n   */\n  private handleError(error) {\n    if (error) {\n      return throwError(error || 'Server error');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/modules/crud/list/list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-crud-list\n            \n\n            \n                styleUrls\n                list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rows\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loadAction\n                            \n                            \n                                model\n                            \n                            \n                                reducer\n                            \n                            \n                                tableOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/modules/crud/list/list.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loadAction\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/crud/list/list.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/crud/list/list.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reducer\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/crud/list/list.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tableOptions\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/crud/list/list.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/crud/list/list.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rows:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/crud/list/list.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { select, Store } from '@libs/midgard-angular/src/lib/modules/store/store';\n\n@Component({\n  selector: 'mg-crud-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  public rows = [];\n  @Input() tableOptions; // options for the table component\n  @Input() loadAction; // redux action to load data\n  @Input() reducer; // redux reducer to get data from\n  @Input() model; // key of which value will be returned from the reducer\n\n  constructor(\n    private store: Store, // type {any} beacuse the state of the app is not fixed and can be changed depending on the modules\n  ) { }\n\n  ngOnInit() {\n    this.store.dispatch({\n      type: this.loadAction,\n    });\n    this.store.observable.pipe(\n      select(this.reducer, this.model)\n    ).subscribe( (data: any[]) => {\n      this.rows = data;\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/pages/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/pages/login/login.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/pages/login/login.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mg-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  login works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  login works!'\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MidgardComponent.html":{"url":"components/MidgardComponent.html","title":"component - MidgardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MidgardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/midgard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-midgard\n            \n\n            \n                styleUrls\n                midgard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./midgard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/midgard.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/midgard.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n\n@Component({\n  selector: 'mg-midgard',\n  templateUrl: './midgard.component.html',\n  styleUrls: ['./midgard.component.scss']\n})\nexport class MidgardComponent implements OnInit {\n\n  constructor(translate: TranslateService) {\n    // this language will be used as a fallback when a translation isn't found in the current language\n    translate.setDefaultLang('en');\n\n    // the lang to use, if the lang isn't available, it will use the current loader to get them\n    translate.use('en');\n  }\n\n  ngOnInit() {}\n\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MidgardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MidgardHttpModule.html":{"url":"modules/MidgardHttpModule.html","title":"module - MidgardHttpModule","body":"\n                   \n\n\n\n\n  Modules\n  MidgardHttpModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/http/http.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders  } from '@angular/core';\nimport { HttpService } from 'projects/midgard-angular/src/lib/modules/http/http.service';\n\n@NgModule({})\nexport class MidgardHttpModule {\n  constructor() {}\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MidgardHttpModule,\n      providers: [\n        HttpService,\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MidgardModule.html":{"url":"modules/MidgardModule.html","title":"module - MidgardModule","body":"\n                   \n\n\n\n\n  Modules\n  MidgardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MidgardModule\n\n\n\ncluster_MidgardModule_declarations\n\n\n\ncluster_MidgardModule_imports\n\n\n\ncluster_MidgardModule_exports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nMidgardModule\n\nMidgardModule\n\nMidgardModule -->\n\nLoginComponent->MidgardModule\n\n\n\n\n\nMidgardComponent\n\nMidgardComponent\n\nMidgardModule -->\n\nMidgardComponent->MidgardModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nMidgardModule -->\n\nNavBarComponent->MidgardModule\n\n\n\n\n\nTopBarComponent\n\nTopBarComponent\n\nMidgardModule -->\n\nTopBarComponent->MidgardModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nMidgardModule -->\n\nUserComponent->MidgardModule\n\n\n\n\n\nWorkflowLevel1Component\n\nWorkflowLevel1Component\n\nMidgardModule -->\n\nWorkflowLevel1Component->MidgardModule\n\n\n\n\n\nWorkflowLevel2Component\n\nWorkflowLevel2Component\n\nMidgardModule -->\n\nWorkflowLevel2Component->MidgardModule\n\n\n\n\n\nMidgardComponent \n\nMidgardComponent \n\nMidgardComponent  -->\n\nMidgardModule->MidgardComponent \n\n\n\n\n\nCrudModule\n\nCrudModule\n\nMidgardModule -->\n\nCrudModule->MidgardModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nMidgardModule -->\n\nGraphQLModule->MidgardModule\n\n\n\n\n\nMidgardHttpModule\n\nMidgardHttpModule\n\nMidgardModule -->\n\nMidgardHttpModule->MidgardModule\n\n\n\n\n\nMidgardTranslationModule\n\nMidgardTranslationModule\n\nMidgardModule -->\n\nMidgardTranslationModule->MidgardModule\n\n\n\n\n\nMigardStoreModule\n\nMigardStoreModule\n\nMidgardModule -->\n\nMigardStoreModule->MidgardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/midgard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                            \n                                MidgardComponent\n                            \n                            \n                                NavBarComponent\n                            \n                            \n                                TopBarComponent\n                            \n                            \n                                UserComponent\n                            \n                            \n                                WorkflowLevel1Component\n                            \n                            \n                                WorkflowLevel2Component\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    CrudModule\n                            \n                            \n                                    GraphQLModule\n                            \n                            \n                                    MidgardHttpModule\n                            \n                            \n                                    MidgardTranslationModule\n                            \n                            \n                                    MigardStoreModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MidgardComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MidgardComponent } from './midgard.component';\nimport { WorkflowLevel1Component } from './pages/workflow-level1/workflow-level1.component';\nimport { WorkflowLevel2Component } from './pages/workflow-level2/workflow-level2.component';\nimport { UserComponent } from './pages/user/user.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { TopBarComponent } from './components/top-bar/top-bar.component';\nimport { MigardStoreModule } from '@libs/midgard-angular/src/lib/modules/store/store.module';\nimport { MidgardHttpModule } from '@libs/midgard-angular/src/lib/modules/http/http.module';\nimport { CommonModule } from '@angular/common';\nimport { MidgardRoutingModule } from '@libs/midgard-angular/src/lib/midgard-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GraphQLModule } from '@libs/midgard-angular/src/lib/modules/graphql/graphql.module';\nimport { CrudModule } from '@libs/midgard-angular/src/lib/modules/crud/crud.module';\nimport { MidgardTranslationModule } from '@libs/midgard-angular/src/lib/modules/translation/translation.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MidgardRoutingModule,\n    MigardStoreModule.forRoot(),\n    MidgardHttpModule.forRoot(),\n    MidgardTranslationModule,\n    HttpClientModule,\n    GraphQLModule,\n    CrudModule,\n  ],\n  declarations: [\n    MidgardComponent,\n    NavBarComponent,\n    WorkflowLevel1Component,\n    WorkflowLevel2Component,\n    UserComponent,\n    LoginComponent,\n    TopBarComponent,\n  ],\n  exports: [\n    MidgardComponent\n  ]\n})\nexport class MidgardModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MidgardState.html":{"url":"interfaces/MidgardState.html","title":"interface - MidgardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MidgardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/state/midgard.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dataLoaded\n                                \n                                \n                                        workflowLevel1\n                                \n                                \n                                        workflowLevel2\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dataLoaded\n                                    \n                                \n                                \n                                    \n                                        dataLoaded:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workflowLevel1\n                                    \n                                \n                                \n                                    \n                                        workflowLevel1:     WorkflowLevel1[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WorkflowLevel1[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workflowLevel2\n                                    \n                                \n                                \n                                    \n                                        workflowLevel2:     WorkflowLevel2[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WorkflowLevel2[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { WorkflowLevel1 } from '@libs/midgard-angular/src/lib/pages/workflow-level1/state/workflow-level1.model';\nimport { WorkflowLevel2 } from '@libs/midgard-angular/src/lib/pages/workflow-level2/state/workflow-level2.model';\n\nexport interface MidgardState {\n  workflowLevel1: WorkflowLevel1[];\n  workflowLevel2: WorkflowLevel2[];\n  dataLoaded: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MidgardTranslationModule.html":{"url":"modules/MidgardTranslationModule.html","title":"module - MidgardTranslationModule","body":"\n                   \n\n\n\n\n  Modules\n  MidgardTranslationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MidgardTranslationModule\n\n\n\ncluster_MidgardTranslationModule_declarations\n\n\n\n\nTranslationLoader\n\nTranslationLoader\n\n\n\nMidgardTranslationModule\n\nMidgardTranslationModule\n\nMidgardTranslationModule -->\n\nTranslationLoader->MidgardTranslationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/translation/translation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TranslationLoader\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpService } from '../http/http.service';\nimport { TranslationLoader } from './translation-loader/translation-loader.component';\nimport { environment } from '../../../../../../src/environments/environment';\n\n/**\n * @description loads the translations\n * @param {HttpClient} http - http client to send the request\n * @returns {TranslateHttpLoader}\n */\nexport function createTranslateLoader(httpService: HttpService) {\n  return new TranslationLoader(httpService, `${environment.API_URL}/i18n/`);\n}\n\n@NgModule({\n  imports: [\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpService]\n      }\n    }),\n  ],\n  declarations: [TranslationLoader],\n})\nexport class MidgardTranslationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MigardStoreModule.html":{"url":"modules/MigardStoreModule.html","title":"module - MigardStoreModule","body":"\n                   \n\n\n\n\n  Modules\n  MigardStoreModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/store/store.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders  } from '@angular/core';\nimport { Store } from 'projects/midgard-angular/src/lib/modules/store/store';\n\n@NgModule({})\nexport class MigardStoreModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MigardStoreModule,\n      providers: [\n        Store,\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarComponent.html":{"url":"components/NavBarComponent.html","title":"component - NavBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/components/nav-bar/nav-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-nav-bar\n            \n\n            \n                styleUrls\n                nav-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-bar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/components/nav-bar/nav-bar.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/components/nav-bar/nav-bar.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mg-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      Worflow Level1\n    \n  \n  \n    \n      \n      Worflow Level 2\n    \n  \n\n  \n    \n    Contacts\n  Products\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Worflow Level1                        Worflow Level 2                Contacts  Products'\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReduxCache.html":{"url":"classes/ReduxCache.html","title":"class - ReduxCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReduxCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxCache.ts\n        \n\n\n            \n                Extends\n            \n            \n                    InMemoryCache\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ReduxCacheConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxCache.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ReduxCacheConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            write\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        write(write: Cache.WriteOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxCache.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        write\n                                                        \n                                                                    Cache.WriteOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Cache,\n} from 'apollo-cache';\nimport {\n    ApolloReducerConfig,\n    InMemoryCache,\n    writeResultToStore\n} from 'apollo-cache-inmemory';\n\nimport {\n    ReduxNormalizedCacheConfig,\n    reduxNormalizedCacheFactory\n} from './reduxNormalizedCache';\nimport {cloneDeep} from 'lodash';\n\nexport type ReduxCacheConfig = ApolloReducerConfig & ReduxNormalizedCacheConfig;\n\nexport class ReduxCache extends InMemoryCache {\n    constructor(config: ReduxCacheConfig) {\n        super(config);\n        // Overwrite the in-memory data object\n        this.data = reduxNormalizedCacheFactory(config);\n    }\n\n    public write(write: Cache.WriteOptions): void {\n        const data = this.config.storeFactory(cloneDeep(this.data.toObject()));\n\n        writeResultToStore({\n            dataId: write.dataId,\n            result: write.result,\n            variables: write.variables,\n            document: this.transformDocument(write.query),\n            store: data,\n            dataIdFromObject: this.config.dataIdFromObject,\n            fragmentMatcherFunction: this.config.fragmentMatcher.match,\n        });\n\n\n        this.data.replace(data.toObject());\n        this.broadcastWatches();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReduxNormalizedCache.html":{"url":"classes/ReduxNormalizedCache.html","title":"class - ReduxNormalizedCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReduxNormalizedCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        NormalizedCache\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                reduxRootSelector\n                            \n                            \n                                    Private\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Private\n                                getReducer\n                            \n                            \n                                    Public\n                                replace\n                            \n                            \n                                    Public\n                                set\n                            \n                            \n                                    Public\n                                toObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reduxCacheConfig: ReduxNormalizedCacheConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reduxCacheConfig\n                                                  \n                                                        \n                                                                    ReduxNormalizedCacheConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            reduxRootSelector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reduxRootSelector:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            store\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        store:     Store\n\n                    \n                \n                    \n                        \n                            Type :     Store\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            delete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        delete(dataId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(dataId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     StoreObject\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getReducer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            replace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        replace(newData: NormalizedCacheObject)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newData\n                                                        \n                                                                    NormalizedCacheObject\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(dataId: string, value: StoreObject)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    StoreObject\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toObject()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     NormalizedCacheObject\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    NormalizedCache,\n    NormalizedCacheObject,\n    StoreObject\n} from 'apollo-cache-inmemory';\nimport {\n    APOLLO_OVERWRITE,\n    APOLLO_RESET,\n    APOLLO_WRITE\n} from './constants';\nimport { Store } from '@libs/midgard-angular/src/lib/modules/store/store';\n\nexport interface ReduxNormalizedCacheConfig {\n    reduxRootSelector?: string;\n    store: Store;\n}\n\nexport class ReduxNormalizedCache implements NormalizedCache {\n    private store: Store;\n    private reduxRootSelector: string;\n\n    constructor(reduxCacheConfig: ReduxNormalizedCacheConfig) {\n        this.reduxRootSelector = reduxCacheConfig.reduxRootSelector || 'apolloReducer';\n        this.store = reduxCacheConfig.store;\n    }\n    public toObject(): NormalizedCacheObject {\n        return this.getReducer();\n    }\n    public get(dataId: string): StoreObject {\n        return this.getReducer()[dataId];\n    }\n    public set(dataId: string, value: StoreObject) {\n        this.store.dispatch({\n            type: APOLLO_WRITE,\n            data: { [dataId]: value }\n        });\n    }\n    public delete(dataId: string): void {\n        this.store.dispatch({\n            type: APOLLO_WRITE,\n            data: { [dataId]: undefined }\n        });\n    }\n    public clear(): void {\n        this.store.dispatch({\n            type: APOLLO_RESET,\n        });\n    }\n    public replace(newData: NormalizedCacheObject): void {\n        const data = newData || {};\n        this.store.dispatch({\n            type: APOLLO_OVERWRITE,\n            data\n        });\n    }\n    private getReducer(): any {\n        return this.store.getState()[this.reduxRootSelector];\n    }\n}\n\nexport function reduxNormalizedCacheFactory(\n    reduxCacheConfig?: ReduxNormalizedCacheConfig\n): NormalizedCache {\n    return new ReduxNormalizedCache(reduxCacheConfig);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReduxNormalizedCacheConfig.html":{"url":"interfaces/ReduxNormalizedCacheConfig.html","title":"interface - ReduxNormalizedCacheConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReduxNormalizedCacheConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        reduxRootSelector\n                                \n                                \n                                        store\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        reduxRootSelector\n                                    \n                                \n                                \n                                    \n                                        reduxRootSelector:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        store\n                                    \n                                \n                                \n                                    \n                                        store:     Store\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Store\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    NormalizedCache,\n    NormalizedCacheObject,\n    StoreObject\n} from 'apollo-cache-inmemory';\nimport {\n    APOLLO_OVERWRITE,\n    APOLLO_RESET,\n    APOLLO_WRITE\n} from './constants';\nimport { Store } from '@libs/midgard-angular/src/lib/modules/store/store';\n\nexport interface ReduxNormalizedCacheConfig {\n    reduxRootSelector?: string;\n    store: Store;\n}\n\nexport class ReduxNormalizedCache implements NormalizedCache {\n    private store: Store;\n    private reduxRootSelector: string;\n\n    constructor(reduxCacheConfig: ReduxNormalizedCacheConfig) {\n        this.reduxRootSelector = reduxCacheConfig.reduxRootSelector || 'apolloReducer';\n        this.store = reduxCacheConfig.store;\n    }\n    public toObject(): NormalizedCacheObject {\n        return this.getReducer();\n    }\n    public get(dataId: string): StoreObject {\n        return this.getReducer()[dataId];\n    }\n    public set(dataId: string, value: StoreObject) {\n        this.store.dispatch({\n            type: APOLLO_WRITE,\n            data: { [dataId]: value }\n        });\n    }\n    public delete(dataId: string): void {\n        this.store.dispatch({\n            type: APOLLO_WRITE,\n            data: { [dataId]: undefined }\n        });\n    }\n    public clear(): void {\n        this.store.dispatch({\n            type: APOLLO_RESET,\n        });\n    }\n    public replace(newData: NormalizedCacheObject): void {\n        const data = newData || {};\n        this.store.dispatch({\n            type: APOLLO_OVERWRITE,\n            data\n        });\n    }\n    private getReducer(): any {\n        return this.store.getState()[this.reduxRootSelector];\n    }\n}\n\nexport function reduxNormalizedCacheFactory(\n    reduxCacheConfig?: ReduxNormalizedCacheConfig\n): NormalizedCache {\n    return new ReduxNormalizedCache(reduxCacheConfig);\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Store.html":{"url":"injectables/Store.html","title":"injectable - Store","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Store\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/modules/store/store.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                            \n                                getState\n                            \n                            \n                                    Public\n                                observable\n                            \n                            \n                                subscribe\n                            \n                            \n                                toObservable\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/modules/store/store.ts:18\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dispatch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dispatch:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/store/store.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getState:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/store/store.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            observable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        observable:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/store/store.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscribe:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/store/store.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toObservable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        toObservable:     \n\n                    \n                \n                    \n                        \n                            Default value : (): Observable => {\n    return Observable.create(observer => {\n      observer.next(storeInstance.getState()); // emits the inital value\n\n      const dispose = storeInstance.subscribe(() => {\n        observer.next(storeInstance.getState());\n      });\n      return dispose; // teardown function to unsubscribe to the observable\n    });\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/store/store.ts:56\n                            \n                        \n\n                \n                    \n                        converts redux store to an Observable\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        store\n                                                        \n                                                                \nthe redux store to be converted to observable\n\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { redux } from 'midgard-core';\nimport { combineEpics, createEpicMiddleware } from 'redux-observable';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { midgardEpics } from '@libs/midgard-angular/src/lib/state/midgard.epics';\nimport { midgardReducer } from '@libs/midgard-angular/src/lib/state/midgard.reducer';\nimport { Observable } from 'rxjs';\nimport { apolloReducer } from '@libs/midgard-angular/src/lib/modules/graphql/apollo-cache-redux';\nimport { contactsReducer } from '@libs/contacts/src/lib/state/contacts.reducer';\nimport { contactsEpics } from '@libs/contacts/src/lib/state/contacts.epics';\nimport { productsReducer } from '@libs/products/src/lib/state/products.reducer';\nimport { productsEpics } from '@libs/products/src/lib/state/products.epics';\n\nlet storeInstance: Store;\n\n@Injectable()\nexport class Store {\n  public observable: Observable; // observable store\n  constructor() {\n    const reducers = {\n      apolloReducer,\n      midgardReducer,\n      contactsReducer,\n      productsReducer\n    };\n    const epics = [\n      midgardEpics,\n      contactsEpics,\n      productsEpics\n    ];\n    const combinedReducers = redux.combineReducers(reducers); // combine the reducers to a reducer that can be used when creating the store\n    const combinedEpics = combineEpics(...epics); // combine redux-observable epics\n    const epicMiddleware = createEpicMiddleware(); // create an instance of redux-observable middleware\n    const store = redux.createStore(\n      combinedReducers,\n      composeWithDevTools(\n        redux.applyMiddleware(epicMiddleware),\n        // other store enhancers if any\n      )\n    );\n    epicMiddleware.run(combinedEpics); // activate redux-observable epics\n    store.observable = this.toObservable();\n    storeInstance = store;\n    return store;\n  }\n\n  subscribe: (listener: () => void) => {};\n  dispatch: (action: any) => {};\n  getState: () => any;\n\n  /**\n   * converts redux store to an Observable\n   * @param {Store} store - the redux store to be converted to observable\n   * @returns {Observable}\n   */\n  toObservable = (): Observable => {\n    return Observable.create(observer => {\n      observer.next(storeInstance.getState()); // emits the inital value\n\n      const dispose = storeInstance.subscribe(() => {\n        observer.next(storeInstance.getState());\n      });\n      return dispose; // teardown function to unsubscribe to the observable\n    });\n  }\n}\n\n/**\n * a function that returns a stream of the state of a specific reducer and key\n * @param {string} reducer - the reducer of the state to be selected\n * @param {string} key - key of which value will be returned\n * @param {object} oldState - the state before changes happen\n * @returns {(source: Observable) => Observable}\n */\nexport const select = (reducer: string, key: string) => (source: Observable) =>\n  new Observable(observer => {\n    const oldState = storeInstance.getState();\n    return source.subscribe({\n      next(state: any) {\n        // emit value only when the state of the selected property is changed\n        if (state[reducer][key] !== oldState[reducer][key]) {\n          observer.next(state[reducer][key]);\n        }\n      },\n      error(err) { observer.error(err); },\n      complete() { observer.complete(); }\n    });\n  });\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopBarComponent.html":{"url":"components/TopBarComponent.html","title":"component - TopBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/components/top-bar/top-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-top-bar\n            \n\n            \n                styleUrls\n                top-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./top-bar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/components/top-bar/top-bar.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/components/top-bar/top-bar.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mg-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.scss']\n})\nexport class TopBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  Logo\n  User Profile\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Logo  User Profile'\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TranslationLoader.html":{"url":"components/TranslationLoader.html","title":"component - TranslationLoader","body":"\n                   \n\n\n\n\n\n  Components\n  TranslationLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/modules/translation/translation-loader/translation-loader.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-translation-loader\n            \n\n            \n                styleUrls\n                translation-loader.component.css\n            \n\n\n\n            \n                templateUrl\n                ./translation-loader.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                endpoint\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpService, endpoint: string)\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/modules/translation/translation-loader/translation-loader.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endpoint\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTranslation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTranslation(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/translation/translation-loader/translation-loader.component.ts:17\n                            \n                        \n\n\n                \n                    \n                            Gets the translations from the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endpoint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endpoint:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/modules/translation/translation-loader/translation-loader.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { HttpService } from '../../http/http.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'mg-translation-loader',\n  templateUrl: './translation-loader.component.html',\n  styleUrls: ['./translation-loader.component.css']\n})\nexport class TranslationLoader {\n\n  constructor(private http: HttpService, public endpoint: string) {}\n\n  /**\n   * Gets the translations from the server\n   */\n  public getTranslation(lang: string): Observable {\n    return this.http.makeRequest('get', `${this.endpoint}/${lang}`);\n  }\n}\n\n    \n\n    \n        \n  translation-loader works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  translation-loader works!'\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TranslationLoader'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/pages/user/user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-user\n            \n\n            \n                styleUrls\n                user.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/pages/user/user.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/pages/user/user.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mg-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  user works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  user works!'\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkflowLevel1.html":{"url":"interfaces/WorkflowLevel1.html","title":"interface - WorkflowLevel1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WorkflowLevel1\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/pages/workflow-level1/state/workflow-level1.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        create_date\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create_date\n                                    \n                                \n                                \n                                    \n                                        create_date:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WorkflowLevel1 {\n  id: number;\n  name: string;\n  type: string;\n  create_date: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkflowLevel1Component.html":{"url":"components/WorkflowLevel1Component.html","title":"component - WorkflowLevel1Component","body":"\n                   \n\n\n\n\n\n  Components\n  WorkflowLevel1Component\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/pages/workflow-level1/workflow-level1.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-workflow-level1\n            \n\n            \n                styleUrls\n                workflow-level1.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./workflow-level1.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tableOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineTableOptions\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apollo: Apollo)\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/pages/workflow-level1/workflow-level1.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apollo\n                                                  \n                                                        \n                                                                    Apollo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defineTableOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        defineTableOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/pages/workflow-level1/workflow-level1.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/pages/workflow-level1/workflow-level1.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tableOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/pages/workflow-level1/workflow-level1.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@libs/midgard-angular/src/lib/modules/store/store';\nimport { loadWorkflowLevel1Data } from '@libs/midgard-angular/src/lib/state/midgard.actions';\nimport { WorkflowLevel1 } from '@libs/midgard-angular/src/lib/pages/workflow-level1/state/workflow-level1.model';\nimport gql from 'graphql-tag';\nimport { Apollo } from 'apollo-angular';\n\n@Component({\n  selector: 'mg-workflow-level1',\n  templateUrl: './workflow-level1.component.html',\n  styleUrls: ['./workflow-level1.component.scss']\n})\nexport class WorkflowLevel1Component implements OnInit {\n\n  public tableOptions;\n\n  constructor(\n    private apollo: Apollo\n  ) { }\n\n  ngOnInit() {\n    // graphQl example\n    this.apollo.watchQuery({\n      query: gql`\n        {\n          workflowlevel1s {\n            id\n            name\n          }\n        }\n      `\n    })\n    .valueChanges\n    .subscribe((res: any) => {\n      console.log('graphQL data');\n    });\n    this.defineTableOptions();\n  }\n\n  private defineTableOptions() {\n    this.tableOptions = {\n      columns: [\n        {name: 'Name', prop: 'name', flex: 2, sortable: true, filtering: true},\n        {name: 'Type', prop: 'type', flex: 2, sortable: true},\n        {name: 'Date Created', prop: 'create_date', index: 1, flex: 1, cellTemplate: 'date', sortable: true}\n      ]\n    };\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WorkflowLevel1Component'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkflowLevel2.html":{"url":"interfaces/WorkflowLevel2.html","title":"interface - WorkflowLevel2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WorkflowLevel2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/midgard-angular/src/lib/pages/workflow-level2/state/workflow-level2.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WorkflowLevel2 {\n  id: number;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkflowLevel2Component.html":{"url":"components/WorkflowLevel2Component.html","title":"component - WorkflowLevel2Component","body":"\n                   \n\n\n\n\n\n  Components\n  WorkflowLevel2Component\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/midgard-angular/src/lib/pages/workflow-level2/workflow-level2.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mg-workflow-level2\n            \n\n            \n                styleUrls\n                workflow-level2.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./workflow-level2.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tableOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineTableOptions\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/midgard-angular/src/lib/pages/workflow-level2/workflow-level2.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            defineTableOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        defineTableOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/pages/workflow-level2/workflow-level2.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/pages/workflow-level2/workflow-level2.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tableOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableOptions:     \n\n                    \n                \n                        \n                            \n                                    Defined in projects/midgard-angular/src/lib/pages/workflow-level2/workflow-level2.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mg-workflow-level2',\n  templateUrl: './workflow-level2.component.html',\n  styleUrls: ['./workflow-level2.component.scss']\n})\nexport class WorkflowLevel2Component implements OnInit {\n  public tableOptions;\n  constructor() {}\n\n  ngOnInit() {\n    this.defineTableOptions();\n  }\n  private defineTableOptions() {\n    this.tableOptions = {\n      columns: [\n        {name: 'Name', prop: 'name', flex: 2, sortable: true},\n        {name: 'Type', prop: 'type', flex: 2, sortable: true},\n        {name: 'Date Created', prop: 'create_date', index: 1, flex: 1, cellTemplate: 'date', sortable: true}\n      ]\n    };\n  }\n\n}\n\n    \n\n    \n        \n  workflow-level2 works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  workflow-level2 works!'\n    var COMPONENTS = [{'name': 'DetailComponent', 'selector': 'mg-crud-detail'},{'name': 'ListComponent', 'selector': 'mg-crud-list'},{'name': 'LoginComponent', 'selector': 'mg-login'},{'name': 'MidgardComponent', 'selector': 'mg-midgard'},{'name': 'NavBarComponent', 'selector': 'mg-nav-bar'},{'name': 'TopBarComponent', 'selector': 'mg-top-bar'},{'name': 'TranslationLoader', 'selector': 'mg-translation-loader'},{'name': 'UserComponent', 'selector': 'mg-user'},{'name': 'WorkflowLevel1Component', 'selector': 'mg-workflow-level1'},{'name': 'WorkflowLevel2Component', 'selector': 'mg-workflow-level2'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WorkflowLevel2Component'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/midgard-angular/src/lib/components/nav-bar/nav-bar.component.ts\n            \n            \n                component\n            \n            \n                NavBarComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/components/top-bar/top-bar.component.ts\n            \n            \n                component\n            \n            \n                TopBarComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/midgard-routing.module.ts\n            \n            \n                variable\n            \n            \n                MidgardRoutingModule\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/midgard.component.ts\n            \n            \n                component\n            \n            \n                MidgardComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/crud/crud.module.ts\n            \n            \n                variable\n            \n            \n                components\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/crud/detail/detail.component.ts\n            \n            \n                component\n            \n            \n                DetailComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/crud/list/list.component.ts\n            \n            \n                component\n            \n            \n                ListComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/constants.ts\n            \n            \n                variable\n            \n            \n                APOLLO_OVERWRITE\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/constants.ts\n            \n            \n                variable\n            \n            \n                APOLLO_RESET\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/constants.ts\n            \n            \n                variable\n            \n            \n                APOLLO_WRITE\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reducer.ts\n            \n            \n                function\n            \n            \n                apolloReducer\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reducer.ts\n            \n            \n                variable\n            \n            \n                initialState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxCache.ts\n            \n            \n                class\n            \n            \n                ReduxCache\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts\n            \n            \n                class\n            \n            \n                ReduxNormalizedCache\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts\n            \n            \n                interface\n            \n            \n                ReduxNormalizedCacheConfig\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts\n            \n            \n                function\n            \n            \n                reduxNormalizedCacheFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/graphql.module.ts\n            \n            \n                function\n            \n            \n                createApollo\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/graphql.module.ts\n            \n            \n                variable\n            \n            \n                uri\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/graphql/graphql.module.ts\n            \n            \n                variable\n            \n            \n                USE_REDUX_CACHE\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/http/http.service.ts\n            \n            \n                injectable\n            \n            \n                HttpService\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/http/types/http.ts\n            \n            \n                interface\n            \n            \n                Http\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/store/store.ts\n            \n            \n                injectable\n            \n            \n                Store\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/store/store.ts\n            \n            \n                variable\n            \n            \n                select\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/store/store.ts\n            \n            \n                variable\n            \n            \n                storeInstance\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/translation/translation-loader/translation-loader.component.ts\n            \n            \n                component\n            \n            \n                TranslationLoader\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/modules/translation/translation.module.ts\n            \n            \n                function\n            \n            \n                createTranslateLoader\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/pages/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/pages/user/user.component.ts\n            \n            \n                component\n            \n            \n                UserComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/pages/workflow-level1/state/workflow-level1.model.ts\n            \n            \n                interface\n            \n            \n                WorkflowLevel1\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/pages/workflow-level1/workflow-level1.component.ts\n            \n            \n                component\n            \n            \n                WorkflowLevel1Component\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/pages/workflow-level2/state/workflow-level2.model.ts\n            \n            \n                interface\n            \n            \n                WorkflowLevel2\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/pages/workflow-level2/workflow-level2.component.ts\n            \n            \n                component\n            \n            \n                WorkflowLevel2Component\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                function\n            \n            \n                loadWorkflowLevel1Data\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                function\n            \n            \n                loadWorkflowLevel1DataCommit\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                function\n            \n            \n                loadWorkflowLevel1DataFail\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                function\n            \n            \n                loadWorkflowLevel2Data\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                function\n            \n            \n                loadWorkflowLevel2DataCommit\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                function\n            \n            \n                loadWorkflowLevel2DataFail\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                variable\n            \n            \n                LOAD_DATA_WORKFLOWLEVEL1\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                variable\n            \n            \n                LOAD_DATA_WORKFLOWLEVEL1_COMMIT\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                variable\n            \n            \n                LOAD_DATA_WORKFLOWLEVEL1_FAIL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                variable\n            \n            \n                LOAD_DATA_WORKFLOWLEVEL2\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                variable\n            \n            \n                LOAD_DATA_WORKFLOWLEVEL2_COMMIT\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.actions.ts\n            \n            \n                variable\n            \n            \n                LOAD_DATA_WORKFLOWLEVEL2_FAIL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.epics.ts\n            \n            \n                variable\n            \n            \n                httpService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.epics.ts\n            \n            \n                variable\n            \n            \n                loadWorkflowLevel1DataEpic\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.epics.ts\n            \n            \n                variable\n            \n            \n                loadWorkflowLevel2DataEpic\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.epics.ts\n            \n            \n                variable\n            \n            \n                midgardEpics\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.model.ts\n            \n            \n                interface\n            \n            \n                MidgardState\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.reducer.ts\n            \n            \n                function\n            \n            \n                midgardReducer\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/midgard-angular/src/lib/state/midgard.reducer.ts\n            \n            \n                variable\n            \n            \n                initialState\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/common : ^6.1.10\n        \n            @angular/compiler : ^6.1.10\n        \n            @angular/core : ^6.1.10\n        \n            @angular/forms : ^6.1.10\n        \n            @angular/http : ^6.1.10\n        \n            @angular/platform-browser : ^6.1.10\n        \n            @angular/platform-browser-dynamic : ^6.1.10\n        \n            @angular/router : ^6.1.10\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apolloReducer   (projects/.../reducer.ts)\n                        \n                        \n                            createApollo   (projects/.../graphql.module.ts)\n                        \n                        \n                            createTranslateLoader   (projects/.../translation.module.ts)\n                        \n                        \n                            loadWorkflowLevel1Data   (projects/.../midgard.actions.ts)\n                        \n                        \n                            loadWorkflowLevel1DataCommit   (projects/.../midgard.actions.ts)\n                        \n                        \n                            loadWorkflowLevel1DataFail   (projects/.../midgard.actions.ts)\n                        \n                        \n                            loadWorkflowLevel2Data   (projects/.../midgard.actions.ts)\n                        \n                        \n                            loadWorkflowLevel2DataCommit   (projects/.../midgard.actions.ts)\n                        \n                        \n                            loadWorkflowLevel2DataFail   (projects/.../midgard.actions.ts)\n                        \n                        \n                            midgardReducer   (projects/.../midgard.reducer.ts)\n                        \n                        \n                            reduxNormalizedCacheFactory   (projects/.../reduxNormalizedCache.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            apolloReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \napolloReducer(state: , action: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/midgard-angular/src/lib/modules/graphql/graphql.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createApollo\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateApollo(httpLink: undefined, store: undefined, useReduxCache: )\n                    \n                \n\n\n\n\n                \n                    \n                            a function that will intialiase apollo graphQl client\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpLink\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        store\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nour store in case we want to use it as graphQl cac`he\n@param {boolean } useReduxCache - wether to use redux as graphQl cache or not\n@returns {link: ApolloLink; cache: ReduxCache | InMemoryCache}\n*\n\n\n\n\n                                                        \n                                                \n                                                \n                                                        useReduxCache\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/midgard-angular/src/lib/modules/translation/translation.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTranslateLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTranslateLoader(httpService: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/midgard-angular/src/lib/state/midgard.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loadWorkflowLevel1Data\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWorkflowLevel1Data()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWorkflowLevel1DataCommit\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWorkflowLevel1DataCommit(data: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWorkflowLevel1DataFail\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWorkflowLevel1DataFail(error: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWorkflowLevel2Data\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWorkflowLevel2Data()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWorkflowLevel2DataCommit\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWorkflowLevel2DataCommit(data: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWorkflowLevel2DataFail\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadWorkflowLevel2DataFail(error: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/midgard-angular/src/lib/state/midgard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            midgardReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nmidgardReducer(state: , action: )\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxNormalizedCache.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reduxNormalizedCacheFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nreduxNormalizedCacheFactory(reduxCacheConfig?: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reduxCacheConfig\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMidgardApp\nThis project was generated with Angular CLI version 6.1.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CrudModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MidgardHttpModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MidgardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MidgardTranslationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MigardStoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CrudModule\n\n\n\ncluster_CrudModule_declarations\n\n\n\ncluster_CrudModule_exports\n\n\n\ncluster_MidgardModule\n\n\n\ncluster_MidgardModule_declarations\n\n\n\ncluster_MidgardModule_imports\n\n\n\ncluster_MidgardModule_exports\n\n\n\ncluster_MidgardTranslationModule\n\n\n\ncluster_MidgardTranslationModule_declarations\n\n\n\n\nDetailComponent\n\nDetailComponent\n\n\n\nCrudModule\n\nCrudModule\n\nCrudModule -->\n\nDetailComponent->CrudModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nCrudModule -->\n\nListComponent->CrudModule\n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCrudModule->DetailComponent \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nCrudModule->ListComponent \n\n\n\n\n\nMidgardModule\n\nMidgardModule\n\nMidgardModule -->\n\nCrudModule->MidgardModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nMidgardModule -->\n\nLoginComponent->MidgardModule\n\n\n\n\n\nMidgardComponent\n\nMidgardComponent\n\nMidgardModule -->\n\nMidgardComponent->MidgardModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nMidgardModule -->\n\nNavBarComponent->MidgardModule\n\n\n\n\n\nTopBarComponent\n\nTopBarComponent\n\nMidgardModule -->\n\nTopBarComponent->MidgardModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nMidgardModule -->\n\nUserComponent->MidgardModule\n\n\n\n\n\nWorkflowLevel1Component\n\nWorkflowLevel1Component\n\nMidgardModule -->\n\nWorkflowLevel1Component->MidgardModule\n\n\n\n\n\nWorkflowLevel2Component\n\nWorkflowLevel2Component\n\nMidgardModule -->\n\nWorkflowLevel2Component->MidgardModule\n\n\n\n\n\nMidgardComponent \n\nMidgardComponent \n\nMidgardComponent  -->\n\nMidgardModule->MidgardComponent \n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nMidgardModule -->\n\nGraphQLModule->MidgardModule\n\n\n\n\n\nMidgardHttpModule\n\nMidgardHttpModule\n\nMidgardModule -->\n\nMidgardHttpModule->MidgardModule\n\n\n\n\n\nMidgardTranslationModule\n\nMidgardTranslationModule\n\nMidgardModule -->\n\nMidgardTranslationModule->MidgardModule\n\n\n\n\n\nMigardStoreModule\n\nMigardStoreModule\n\nMidgardModule -->\n\nMigardStoreModule->MidgardModule\n\n\n\n\n\nTranslationLoader\n\nTranslationLoader\n\nMidgardTranslationModule -->\n\nTranslationLoader->MidgardTranslationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ReduxCacheConfig   (projects/.../reduxCache.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reduxCache.ts\n    \n        \n            \n                \n                    \n                        \n                        ReduxCacheConfig\n                    \n                \n                \n                    \n                        ReduxCacheConfig:     \n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APOLLO_OVERWRITE   (projects/.../constants.ts)\n                        \n                        \n                            APOLLO_RESET   (projects/.../constants.ts)\n                        \n                        \n                            APOLLO_WRITE   (projects/.../constants.ts)\n                        \n                        \n                            components   (projects/.../crud.module.ts)\n                        \n                        \n                            httpService   (projects/.../midgard.epics.ts)\n                        \n                        \n                            initialState   (projects/.../midgard.reducer.ts)\n                        \n                        \n                            initialState   (projects/.../reducer.ts)\n                        \n                        \n                            LOAD_DATA_WORKFLOWLEVEL1   (projects/.../midgard.actions.ts)\n                        \n                        \n                            LOAD_DATA_WORKFLOWLEVEL1_COMMIT   (projects/.../midgard.actions.ts)\n                        \n                        \n                            LOAD_DATA_WORKFLOWLEVEL1_FAIL   (projects/.../midgard.actions.ts)\n                        \n                        \n                            LOAD_DATA_WORKFLOWLEVEL2   (projects/.../midgard.actions.ts)\n                        \n                        \n                            LOAD_DATA_WORKFLOWLEVEL2_COMMIT   (projects/.../midgard.actions.ts)\n                        \n                        \n                            LOAD_DATA_WORKFLOWLEVEL2_FAIL   (projects/.../midgard.actions.ts)\n                        \n                        \n                            loadWorkflowLevel1DataEpic   (projects/.../midgard.epics.ts)\n                        \n                        \n                            loadWorkflowLevel2DataEpic   (projects/.../midgard.epics.ts)\n                        \n                        \n                            midgardEpics   (projects/.../midgard.epics.ts)\n                        \n                        \n                            MidgardRoutingModule   (projects/.../midgard-routing.module.ts)\n                        \n                        \n                            select   (projects/.../store.ts)\n                        \n                        \n                            storeInstance   (projects/.../store.ts)\n                        \n                        \n                            uri   (projects/.../graphql.module.ts)\n                        \n                        \n                            USE_REDUX_CACHE   (projects/.../graphql.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            APOLLO_OVERWRITE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        APOLLO_OVERWRITE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'APOLLO_OVERWRITE'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            APOLLO_RESET\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        APOLLO_RESET:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'APOLLO_RESET'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            APOLLO_WRITE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        APOLLO_WRITE:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'APOLLO_WRITE'\n                        \n                    \n\n\n            \n        \n\n    projects/midgard-angular/src/lib/modules/crud/crud.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        components:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ListComponent,\n  DetailComponent\n]\n                        \n                    \n\n\n            \n        \n\n    projects/midgard-angular/src/lib/state/midgard.epics.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpService:     \n\n                    \n                \n                    \n                        \n                            Default value : new HttpService()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWorkflowLevel1DataEpic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadWorkflowLevel1DataEpic:     \n\n                    \n                \n                    \n                        \n                            Default value : action$ => {\n  return action$.pipe(\n    ofType(LOAD_DATA_WORKFLOWLEVEL1),\n    switchMap((action: any) => {\n      return httpService.makeRequest('get', `${environment.API_URL}/workflowlevel1/`).pipe(\n        // If successful, dispatch success action with result\n        map(res => loadWorkflowLevel1DataCommit(res.data)),\n        // If request fails, dispatch failed action\n        catchError((error) => of(loadWorkflowLevel1DataFail(error)))\n      );\n    })\n  );\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadWorkflowLevel2DataEpic\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadWorkflowLevel2DataEpic:     \n\n                    \n                \n                    \n                        \n                            Default value : action$ => {\n  return action$.pipe(\n    ofType(LOAD_DATA_WORKFLOWLEVEL2),\n    switchMap((action: any) => {\n      return httpService.makeRequest('get', `${environment.API_URL}/workflowlevel2/`).pipe(\n        // If successful, dispatch success action with result\n        map(res => loadWorkflowLevel2DataCommit(res.data)),\n        // If request fails, dispatch failed action\n        catchError((error) => of(loadWorkflowLevel2DataFail(error)))\n      );\n    })\n  );\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            midgardEpics\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        midgardEpics:     \n\n                    \n                \n                    \n                        \n                            Default value : combineEpics(loadWorkflowLevel1DataEpic, loadWorkflowLevel2DataEpic)\n                        \n                    \n\n\n            \n        \n\n    projects/midgard-angular/src/lib/state/midgard.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialState:     MidgardState\n\n                    \n                \n                    \n                        \n                            Type :     MidgardState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  workflowLevel1: [],\n  workflowLevel2: [],\n  dataLoaded: false\n}\n                        \n                    \n\n\n            \n        \n\n    projects/midgard-angular/src/lib/modules/graphql/apollo-cache-redux/reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialState:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n\n\n            \n        \n\n    projects/midgard-angular/src/lib/state/midgard.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOAD_DATA_WORKFLOWLEVEL1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOAD_DATA_WORKFLOWLEVEL1:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LOAD_DATA_WORKFLOWLEVEL1'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOAD_DATA_WORKFLOWLEVEL1_COMMIT\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOAD_DATA_WORKFLOWLEVEL1_COMMIT:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LOAD_DATA_WORKFLOWLEVEL1_COMMIT'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOAD_DATA_WORKFLOWLEVEL1_FAIL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOAD_DATA_WORKFLOWLEVEL1_FAIL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LOAD_DATA_WORKFLOWLEVEL1_FAIL'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOAD_DATA_WORKFLOWLEVEL2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOAD_DATA_WORKFLOWLEVEL2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LOAD_DATA_WORKFLOWLEVEL2'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOAD_DATA_WORKFLOWLEVEL2_COMMIT\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOAD_DATA_WORKFLOWLEVEL2_COMMIT:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LOAD_DATA_WORKFLOWLEVEL2_COMMIT'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LOAD_DATA_WORKFLOWLEVEL2_FAIL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOAD_DATA_WORKFLOWLEVEL2_FAIL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LOAD_DATA_WORKFLOWLEVEL2_FAIL'\n                        \n                    \n\n\n            \n        \n\n    projects/midgard-angular/src/lib/midgard-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MidgardRoutingModule\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MidgardRoutingModule:     \n\n                    \n                \n                    \n                        \n                            Default value : RouterModule.forChild(midgardRoutes)\n                        \n                    \n\n\n            \n        \n\n    projects/midgard-angular/src/lib/modules/store/store.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        select:     \n\n                    \n                \n                    \n                        \n                            Default value : (reducer: string, key: string) => (source: Observable) =>\n  new Observable(observer => {\n    const oldState = storeInstance.getState();\n    return source.subscribe({\n      next(state: any) {\n        // emit value only when the state of the selected property is changed\n        if (state[reducer][key] !== oldState[reducer][key]) {\n          observer.next(state[reducer][key]);\n        }\n      },\n      error(err) { observer.error(err); },\n      complete() { observer.complete(); }\n    });\n  })\n                        \n                    \n\n                \n                    \n                        a function that returns a stream of the state of a specific reducer and key\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        storeInstance:     Store\n\n                    \n                \n                    \n                        \n                            Type :     Store\n\n                        \n                    \n\n\n            \n        \n\n    projects/midgard-angular/src/lib/modules/graphql/graphql.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uri\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uri:     \n\n                    \n                \n                    \n                        \n                            Default value : `${environment.API_URL}/graphql`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USE_REDUX_CACHE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        USE_REDUX_CACHE:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('')\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
